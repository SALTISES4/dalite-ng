# To build and run:
#   `docker compose build`
#   `docker compose up`
# To tear down (don't forget the -v to get rid of static folder):
#   `docker compose down -v`
# For a full clean of all images, etc.
#   `docker system prune -a`
# To watch Chrome tests:
#   Open a VNC client
#   Go to vnc://127.0.0.1:41960 and enter password "secret"

# TODO:
#   - Currently, --create-db ensures tests do not start until other services are ready, but a wait function should be added.
#   - Add memcached image?

# GOTCHAS:
#   - Use `docker image prune` to avoid serving old static content or using excessive disk space

services:
  live_app:
    image: mydalite
    container_name: live_app
    build:
      context: .
    command: gunicorn dalite.wsgi:application --bind 0.0.0.0:8000
    environment:
      DALITE_DB_HOST: ${HOST:-host.docker.internal}
      DALITE_DB_NAME: dalite_ng
      EMAIL_BACKEND: django.core.mail.backends.filebased.EmailBackend
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      CHANNELS_REDIS_ADDRESS: redis
      CHANNELS_REDIS_PORT: 6379
    volumes:
      - static:/code/static
      - emails:/code/emails

  celery:
    image: mydalite
    container_name: celery
    depends_on:
      - live_app
    command: celery -A dalite worker -l debug
    environment:
      ALLOWED_HOST: nginx
      DALITE_DB_HOST: ${HOST:-host.docker.internal}
      DALITE_DB_NAME: test_dalite_ng
      DJANGO_SETTINGS_MODULE: dalite.functional_test_settings
      EMAIL_BACKEND: django.core.mail.backends.filebased.EmailBackend
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - emails:/code/emails

  redis:
    image: redis:6
    container_name: redis

  test_app:
    image: mydalite
    container_name: test_app
    command: gunicorn dalite.wsgi:application --bind 0.0.0.0:8000
    environment:
      ALLOWED_HOST: nginx
      DALITE_DB_HOST: ${HOST:-host.docker.internal}
      DALITE_DB_NAME: test_dalite_ng
      DJANGO_SETTINGS_MODULE: dalite.functional_test_settings
      EMAIL_BACKEND: django.core.mail.backends.filebased.EmailBackend
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      CHANNELS_REDIS_ADDRESS: redis
      CHANNELS_REDIS_PORT: 6379
    volumes:
      - static:/code/static
      - emails:/code/emails

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - 1337:8080
      - 1338:8081
    depends_on:
      - live_app
      - test_app
    volumes:
      - static:/static

  # https://github.com/SeleniumHQ/docker-selenium/blob/trunk/docker-compose-v3.yml
  selenium-hub:
    image: selenium/hub:4.2.0-20220527
    container_name: selenium-hub
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
    depends_on:
      - test_app
    environment:
      - GRID_DEBUG=true

  chrome:
    image: selenium/node-chrome:4.2.0-20220527
    container_name: chrome
    shm_size: 2gb
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_INSTANCES=4
      - SE_NODE_MAX_SESSIONS=2
      - SCREEN_WIDTH=2732
      - SCREEN_HEIGHT=1536
    ports:
      - "41960:5900"

  firefox:
    image: selenium/node-firefox:4.2.0-20220527
    container_name: firefox
    shm_size: 2gb
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_INSTANCES=4
      - SE_NODE_MAX_SESSIONS=2
      - SCREEN_WIDTH=2732
      - SCREEN_HEIGHT=1536

  # The test service runs all functional tests against the live test_app server.
  test:
    build:
      context: .
      dockerfile: ./functional_tests/Dockerfile
    container_name: test
    command: python -Wa -m pytest functional_tests/ --reuse-db --ignore=node_modules/ -vvvv -s -x
    depends_on:
      - selenium-hub
    environment:
      ALLOWED_HOST: nginx
      DALITE_DB_HOST: ${HOST:-host.docker.internal}
      STAGING_SERVER: nginx:8080
      SELENIUM_HUB: selenium-hub:4444
      DJANGO_SETTINGS_MODULE: dalite.functional_test_settings
    volumes:
      - ./snapshots:/code/snapshots
      - emails:/code/emails

volumes:
  static:
  emails:
