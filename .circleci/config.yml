version: 2.1
orbs:
  aws-s3: circleci/aws-s3@3.0
  snyk: snyk/snyk@1.2.3
jobs:
  build:
    resource_class: medium
    docker:
      - image: cimg/python:3.8.14-browsers
        environment:
          DALITE_DB_PASSWORD: test key
          DALITE_DB_HOST: 127.0.0.1
          DALITE_DB_PORT: 3306
          MYSQL_ROOT_PASSWORD: mariadb
      - image: mariadb
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: dalite_ng
          MYSQL_USER: dalite
          MYSQL_PASSWORD: test key
          MYSQL_HOST: localhost
          MYSQL_ROOT_PASSWORD: mariadb
      - image: memcached
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: OS setup
          command: |
            sudo apt update
            sudo apt install mariadb-client
      - run:
          name: Create virtualenv and activate
          command: |
            python -m venv .venv
            . .venv/bin/activate
            python -m pip install --upgrade pip
      - run:
          name: Run safety
          command: |
            . .venv/bin/activate
            python -m pip install safety
            safety check -r requirements/requirements-prod-aws.txt --key=$SAFETY_API_KEY -i 51619 -i 53048 -i 53298 -i 53299 -i 53301 -i 53302 -i 53303 -i 53304 -i 53305 -i 53306 -i 53307 -i 35462 -i 59062 -i 59473 -i 59956 -i 60223 -i 60224 -i 60225 -i 62105 -i 61893 -i 62451 -i 62452 -i 62556
      - run:
          name: Install packages
          command: |
            . .venv/bin/activate
            python -m pip install -r requirements/requirements-test.txt --no-deps
            python -m pip freeze
            # python -m spacy download en_core_web_sm
            npm install --no-optional
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: false
          token-variable: SNYK_TOKEN
      - run:
          name: Gulp build
          command: |
            npx gulp build
      - run:
          name: Setup local_settings.py
          command: |
            tools/gen_secret_key.py > dalite/local_settings.py
            echo 'PIWIK_DOMAIN_PATH = "matomo.mydalite.org"' >> dalite/local_settings.py
            echo 'PIWIK_SITE_ID = "1"' >> dalite/local_settings.py
            echo 'import os' >> dalite/local_settings.py
            echo 'BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))' >> dalite/local_settings.py
            echo 'EMAIL_SUBJECT_PREFIX = "SALTISE/S4 @ Dawson College: "' >> dalite/local_settings.py
            echo 'DEFAULT_FROM_EMAIL = "no-reply-SALTISES4@dawsoncollege.qc.ca"' >> dalite/local_settings.py
            echo 'EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"' >> dalite/local_settings.py
      - run:
          name: Waiting for db
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: DB setup
          command: |
            . .venv/bin/activate
            mysql --host=$DALITE_DB_HOST --port=$DALITE_DB_PORT -u root --password=$MYSQL_ROOT_PASSWORD -e "grant all privileges on test_dalite_ng.* to dalite@'%'"
            ./manage.py migrate
      - run:
          name: Collect static content and compress
          command: |
            . .venv/bin/activate
            ./manage.py collectstatic -c
            ./manage.py compress
      - store_artifacts:
          path: /home/circleci/repo/static
      - aws-s3/sync:
          from: /home/circleci/repo/static
          to: 's3://staging-mydalite-static'
      - run:
          name: Run tests
          command: |
            . .venv/bin/activate
            pytest --migrations --cov --create-db --reruns 1
