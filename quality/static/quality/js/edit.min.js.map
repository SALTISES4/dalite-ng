{"version":3,"file":"edit.min.js","sources":["peerinst/static/peerinst/js/_ajax/utils.js","peerinst/static/peerinst/js/utils.js","quality/static/quality/js/_edit/index.js","quality/static/quality/js/edit.js"],"sourcesContent":["export function getCsrfToken() {\n  const name = \"csrftoken\";\n  if (document.cookie && document.cookie !== \"\") {\n    return document.cookie\n      .split(\";\")\n      .map(c => c.trim())\n      .filter(c => c.substring(0, name.length + 1) === name + \"=\")\n      .map(c => decodeURIComponent(c.substring(name.length + 1)))[0];\n  } else {\n    return null;\n  }\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n","// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  use.setAttributeNS(\n    \"http://www.w3.org/1999/xlink\",\n    \"href\",\n    window.location.protocol +\n      \"//\" +\n      window.location.host +\n      \"/static/peerinst/icons.svg#\" +\n      name,\n  );\n  svg.append(use);\n  return svg;\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n","import { buildReq } from \"../../../../../peerinst/static/peerinst/js/_ajax/utils.js\"; // eslint-disable-line\nimport { clear } from \"../../../../../peerinst/static/peerinst/js/utils.js\"; // eslint-disable-line\n\n/*********/\n/* model */\n/*********/\n\nlet model;\n\nfunction initModel(data) {\n  model = {\n    quality: {\n      pk: data.quality.pk,\n      qualityType: data.quality.quality_type,\n    },\n    next: data.next,\n    available: data.available.map(c => ({\n      name: c.name,\n      fullName: c.full_name,\n      description: c.description,\n    })),\n    criterions: data.criterions,\n    urls: {\n      addCriterion: data.urls.add_criterion,\n      updateCriterion: data.urls.update_criterion,\n      removeCriterion: data.urls.remove_criterion,\n    },\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction updateCriterionOption(event, option, criterion) {\n  const type = option.getAttribute(\"data-type\");\n  const name = option.getAttribute(\"name\");\n  let value;\n\n  if (type === \"CommaSepField\" || type === \"ManyToManyField\") {\n    option.querySelector(\".comma-sep-input--input\").setCustomValidity(\"\");\n    if (event.key === \"Enter\" || event.key === \",\" || event.key === \" \") {\n      if (value === \" \" || value === \",\") {\n        value = \"\";\n      }\n      value = option.querySelector(\".comma-sep-input--input\").value;\n      if (!value) {\n        event.preventDefault();\n        return;\n      }\n      if (criterion[name].allowed) {\n        if (!criterion[name].allowed.includes(value)) {\n          toggleCriterionOptionError(\n            option.querySelector(\".comma-sep-input--input\"),\n            `${value} isn't an accepted language. Options are ${criterion[\n              name\n            ].allowed\n              .slice(0, criterion[name].allowed.length - 1)\n              .join(\", \")} and ${\n              criterion[name].allowed[criterion[name].allowed.length - 1]\n            }.`,\n          );\n          option.querySelector(\".comma-sep-input--input\").value = \"\";\n          event.preventDefault();\n          return;\n        }\n      }\n    } else if (event.key === \"Backspace\") {\n      value = option.querySelector(\".comma-sep-input--input\").value;\n      if (value) {\n        return;\n      }\n    } else {\n      return;\n    }\n  } else if (\n    type === \"PositiveIntegerField\" ||\n    type === \"ProbabilityField\" ||\n    type === \"FloatField\" ||\n    type === \"IntegerField\"\n  ) {\n    option.setCustomValidity(\"\");\n    value = option.value;\n    if (value === \"\") {\n      if (event.inputType === \"insertText\" && event.data === \"-\") {\n        value = 0;\n        option.value = 0;\n      } else {\n        return;\n      }\n    }\n    if (type === \"ProbabilityField\") {\n      if (value < 0) {\n        value = 0;\n        option.value = value;\n      } else if (value > 1) {\n        value = parseFloat(\"0.\" + value);\n        option.value = value;\n      } else if (value.toString().length > 4) {\n        option.value = model.criterions.filter(\n          c => c.name === criterion.name,\n        )[0][name].value;\n        return;\n      } else if (\n        model.criterions.filter(c => c.name === criterion.name)[0][name]\n          .value == value\n      ) {\n        if (value === \"00\") {\n          option.value = \"0\";\n        }\n        return;\n      }\n    }\n  } else if (type === \"BooleanField\") {\n    option.setCustomValidity(\"\");\n    value = option.value === \"false\";\n  } else {\n    option.setCustomValidity(\"\");\n    value = option.value;\n  }\n\n  const data = {\n    quality: model.quality.pk,\n    criterion: criterion.name,\n    field: name,\n    value: value,\n  };\n\n  const req = buildReq(data, \"post\");\n  fetch(model.urls.updateCriterion, req)\n    .then(resp => (resp.ok ? resp.json() : resp.text()))\n    .then(data => {\n      if (typeof data === \"string\") {\n        toggleCriterionOptionError(err);\n      } else {\n        model.criterions = model.criterions.map(c =>\n          c.name === data.name ? data : c,\n        );\n        if (name === \"weight\") {\n          criterionOptionView(type, data.weight, criterion, option);\n        } else {\n          criterionOptionView(type, data[name].value, criterion, option);\n        }\n      }\n    })\n    .catch(err => console.log(err));\n}\n\nfunction addCriterion(criterion) {\n  const data = {\n    quality: model.quality.pk,\n    criterion: criterion.name,\n  };\n\n  const req = buildReq(data, \"post\");\n  fetch(model.urls.addCriterion, req)\n    .then(resp => resp.json())\n    .then(json => {\n      model.criterions.push(json);\n      criterionsView();\n      newCriterionsView();\n      toggleShowAddCriterion();\n    })\n    .catch(err => console.log(err));\n}\n\nfunction removeCriterion(criterion) {\n  const data = {\n    quality: model.quality.pk,\n    criterion: criterion.name,\n  };\n  const req = buildReq(data, \"post\");\n  fetch(model.urls.removeCriterion, req)\n    .then(resp => {\n      if (resp.ok) {\n        model.criterions = model.criterions.filter(\n          c => c.name != criterion.name,\n        );\n        criterionsView();\n        newCriterionsView();\n      }\n    })\n    .catch(err => console.log(err));\n}\n\n/********/\n/* view */\n/********/\n\nfunction view() {\n  returnLinkView();\n  criterionsView();\n  newCriterionsView();\n}\n\nfunction returnLinkView() {\n  const link = document.querySelector(\"#back-link\");\n  if (model.next) {\n    link.href = model.next;\n    if (model.quality.qualityType === \"teacher\") {\n      link.textContent = \"Back to account\";\n    } else {\n      link.textContent = `Back to ${model.quality.qualityType}`;\n    }\n  } else {\n    link.parentNode.removeChild(link);\n  }\n}\n\nfunction criterionsView() {\n  const div = document.querySelector(\"#criterions\");\n  clear(div);\n  model.criterions.forEach(criterion => {\n    div.appendChild(criterionView(criterion));\n  });\n}\n\nfunction criterionView(criterion) {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"criterion\");\n  div.classList.add(\"criterion__showing\");\n  div.name = criterion.name;\n\n  const name = document.createElement(\"div\");\n  name.classList.add(\"criterion--name\");\n  name.textContent = criterion.full_name;\n  name.title = criterion.description;\n  name.addEventListener(\"click\", () => toggleCriterionOptions(div));\n  div.appendChild(name);\n\n  const remove = document.createElement(\"button\");\n  remove.classList.add(\"criterion--remove\");\n  remove.addEventListener(\"click\", event => {\n    removeCriterion(criterion);\n    event.stopPropagation();\n  });\n  name.appendChild(remove);\n  const icon = document.createElement(\"i\");\n  icon.classList.add(\"material-icons\");\n  icon.textContent = \"close\";\n  remove.appendChild(icon);\n\n  const options = document.createElement(\"div\");\n  options.classList.add(\"criterion--options\");\n  div.appendChild(options);\n\n  const binaryThreshold =\n    criterion.versions[criterion.version - 1].binary_threshold;\n\n  // const versionLabel = document.createElement(\"label\");\n  // versionLabel.textContent = \"Version:\";\n  // const version = document.createElement(\"select\");\n  // const versions = [document.createElement(\"option\")];\n  // versions[0].value = 0;\n  // versions[0].textContent = \"0 (latest)\";\n  // versions.forEach(v => {\n  // version.appendChild(v);\n  // });\n  // options.appendChild(versionLabel);\n  // options.appendChild(version);\n  //\n  const weightLabel = document.createElement(\"label\");\n  weightLabel.textContent = \"Weight:\";\n  const weight = criterionOptionView(\n    \"PositiveIntegerField\",\n    criterion.weight,\n    criterion,\n  );\n  weight.name = \"weight\";\n  options.appendChild(weightLabel);\n  options.appendChild(weight);\n\n  const otherOptions = Object.keys(criterion).filter(\n    o =>\n      ![\n        \"description\",\n        \"full_name\",\n        \"is_beta\",\n        \"name\",\n        \"version\",\n        \"versions\",\n        \"weight\",\n      ].includes(o),\n  );\n  otherOptions.forEach(o => {\n    if (!binaryThreshold || o !== \"threshold\") {\n      const option = criterion[o];\n      const label = document.createElement(\"label\");\n      label.textContent = `${option.full_name}:`;\n      label.title = option.description;\n      const input = criterionOptionView(\n        option.type,\n        option.value,\n        criterion,\n        null,\n      );\n      input.setAttribute(\"name\", option.name);\n      options.appendChild(label);\n      options.appendChild(input);\n    }\n  });\n\n  return div;\n}\n\nfunction criterionOptionView(type, value, criterion, input = null) {\n  const focus = !!input;\n  if (type === \"PositiveIntegerField\") {\n    if (!input) {\n      input = document.createElement(\"input\");\n      input.setAttribute(\"data-type\", type);\n      input.type = \"number\";\n      input.min = 0;\n      input.addEventListener(\"input\", event =>\n        updateCriterionOption(event, input, criterion),\n      );\n    }\n    input.value = value;\n    return input;\n  } else if (type === \"ProbabilityField\") {\n    if (!input) {\n      input = document.createElement(\"input\");\n      input.setAttribute(\"data-type\", type);\n      input.type = \"number\";\n      input.min = 0;\n      input.max = 1;\n      input.step = 0.01;\n      input.addEventListener(\"input\", event =>\n        updateCriterionOption(event, input, criterion),\n      );\n      if (focus) {\n        input.focus();\n      }\n    }\n    input.value = value;\n    return input;\n  } else if (type === \"CommaSepField\" || type === \"ManyToManyField\") {\n    if (!input) {\n      input = document.createElement(\"div\");\n      input.setAttribute(\"data-type\", type);\n      input.classList.add(\"comma-sep-input\");\n      input.type = \"comma-sep\";\n    }\n    clear(input);\n    value.forEach(word => {\n      const span = document.createElement(\"span\");\n      span.classList.add(\"comma-sep-input--word\");\n      span.textContent = word;\n      input.appendChild(span);\n    });\n    const input_ = document.createElement(\"input\");\n    input_.classList.add(\"comma-sep-input--input\");\n    input_.type = \"text\";\n    input_.addEventListener(\"keydown\", event =>\n      updateCriterionOption(event, input, criterion),\n    );\n    input.appendChild(input_);\n    if (focus) {\n      input_.focus();\n    }\n    return input;\n  } else if (type === \"BooleanField\") {\n    if (!input) {\n      input = document.createElement(\"div\");\n      input.setAttribute(\"data-type\", type);\n      input.classList.add(\"boolean-input\");\n      clear(input);\n      const input_ = document.createElement(\"input\");\n      input_.classList.add(\"boolean-input--input\");\n      input_.type = \"checkbox\";\n      input_.addEventListener(\"click\", event =>\n        updateCriterionOption(event, input, criterion),\n      );\n      input.appendChild(input_);\n      const background = document.createElement(\"span\");\n      background.classList.add(\"boolean-input--background\");\n      input.appendChild(background);\n      const mark = document.createElement(\"span\");\n      mark.classList.add(\"boolean-input--mark\");\n      input.appendChild(mark);\n      if (focus) {\n        input_.focus();\n      }\n    }\n    input.value = value;\n    return input;\n  }\n}\n\nfunction toggleCriterionOptions(criterion) {\n  if (criterion.classList.contains(\"criterion__showing\")) {\n    criterion.classList.remove(\"criterion__showing\");\n  } else {\n    criterion.classList.add(\"criterion__showing\");\n  }\n}\n\nfunction toggleCriterionOptionError(option, msg) {\n  option.setCustomValidity(msg);\n}\n\nfunction newCriterionsView() {\n  const button = document.querySelector(\".add-criterion button\");\n  const available = model.available.filter(\n    c => !model.criterions.map(cc => cc.name).includes(c.name),\n  );\n  if (available.length) {\n    const ul = document.querySelector(\".available-criterions ul\");\n    clear(ul);\n    available.forEach(criterion => {\n      ul.appendChild(newCriterionView(criterion));\n    });\n    button.disabled = false;\n    button.title = \"Add a new criterion\";\n  } else {\n    button.disabled = true;\n    button.title = \"There are no new criterions to add\";\n  }\n}\n\nfunction newCriterionView(criterion) {\n  const li = document.createElement(\"li\");\n  li.title = criterion.description;\n  li.textContent = criterion.fullName;\n  li.addEventListener(\"click\", () => addCriterion(criterion));\n  return li;\n}\n\nfunction toggleShowAddCriterion() {\n  const div = document.querySelector(\".add-criterion\");\n  if (div.classList.contains(\"add-criterion__showing\")) {\n    div.classList.remove(\"add-criterion__showing\");\n  } else {\n    if (model.available.length) {\n      div.classList.add(\"add-criterion__showing\");\n    }\n  }\n}\n\n/*************/\n/* listeners */\n/*************/\n\nfunction initEventListeners() {\n  initAddCriterionListeners();\n}\n\nfunction initAddCriterionListeners() {\n  document\n    .querySelector(\".add-criterion button\")\n    .addEventListener(\"click\", toggleShowAddCriterion);\n}\n\n/********/\n/* init */\n/********/\n\nexport function init(data) {\n  initModel(data);\n  view();\n  initEventListeners();\n}\n","\"use strict\";\n\nexport { init } from \"./_edit/index.js\";\n"],"names":["getCsrfToken","name","document","cookie","split","map","c","trim","filter","substring","length","decodeURIComponent","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","clear","node","hasChildNodes","removeChild","lastChild","model","initModel","quality","pk","qualityType","quality_type","next","available","fullName","full_name","description","criterions","urls","addCriterion","add_criterion","updateCriterion","update_criterion","removeCriterion","remove_criterion","updateCriterionOption","event","option","criterion","type","getAttribute","value","querySelector","setCustomValidity","key","preventDefault","allowed","includes","toggleCriterionOptionError","slice","join","inputType","parseFloat","toString","field","req","fetch","then","resp","ok","json","text","err","criterionOptionView","weight","catch","console","log","push","criterionsView","newCriterionsView","toggleShowAddCriterion","view","returnLinkView","link","href","textContent","parentNode","div","forEach","appendChild","criterionView","createElement","classList","add","title","addEventListener","toggleCriterionOptions","remove","stopPropagation","icon","options","binaryThreshold","versions","version","binary_threshold","weightLabel","otherOptions","Object","keys","o","label","input","setAttribute","focus","min","max","step","word","span","input_","background","mark","contains","msg","button","cc","ul","newCriterionView","disabled","li","initEventListeners","initAddCriterionListeners","init"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9hYWhpbGdlcnQvRGVza3RvcC9EZXZlbG9wbWVudC9teWRhbGl0ZSBwcm9qZWN0L2RhbGl0ZS1uZy9wZWVyaW5zdC9zdGF0aWMvcGVlcmluc3QvanMvX2FqYXgvdXRpbHMuanMiLCIvVXNlcnMvYWFoaWxnZXJ0L0Rlc2t0b3AvRGV2ZWxvcG1lbnQvbXlkYWxpdGUgcHJvamVjdC9kYWxpdGUtbmcvcGVlcmluc3Qvc3RhdGljL3BlZXJpbnN0L2pzL3V0aWxzLmpzIiwiL1VzZXJzL2FhaGlsZ2VydC9EZXNrdG9wL0RldmVsb3BtZW50L215ZGFsaXRlIHByb2plY3QvZGFsaXRlLW5nL3F1YWxpdHkvc3RhdGljL3F1YWxpdHkvanMvX2VkaXQvaW5kZXguanMiLCIvVXNlcnMvYWFoaWxnZXJ0L0Rlc2t0b3AvRGV2ZWxvcG1lbnQvbXlkYWxpdGUgcHJvamVjdC9kYWxpdGUtbmcvcXVhbGl0eS9zdGF0aWMvcXVhbGl0eS9qcy9lZGl0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBnZXRDc3JmVG9rZW4oKSB7XG4gIGNvbnN0IG5hbWUgPSBcImNzcmZ0b2tlblwiO1xuICBpZiAoZG9jdW1lbnQuY29va2llICYmIGRvY3VtZW50LmNvb2tpZSAhPT0gXCJcIikge1xuICAgIHJldHVybiBkb2N1bWVudC5jb29raWVcbiAgICAgIC5zcGxpdChcIjtcIilcbiAgICAgIC5tYXAoYyA9PiBjLnRyaW0oKSlcbiAgICAgIC5maWx0ZXIoYyA9PiBjLnN1YnN0cmluZygwLCBuYW1lLmxlbmd0aCArIDEpID09PSBuYW1lICsgXCI9XCIpXG4gICAgICAubWFwKGMgPT4gZGVjb2RlVVJJQ29tcG9uZW50KGMuc3Vic3RyaW5nKG5hbWUubGVuZ3RoICsgMSkpKVswXTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRSZXEoZGF0YSwgbWV0aG9kKSB7XG4gIGlmIChtZXRob2QudG9Mb3dlckNhc2UoKSA9PT0gXCJnZXRcIikge1xuICAgIHJldHVybiB7XG4gICAgICBtZXRob2Q6IG1ldGhvZC50b1VwcGVyQ2FzZSgpLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgXCJYLUNTUkZUb2tlblwiOiBnZXRDc3JmVG9rZW4oKSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfSBlbHNlIGlmIChtZXRob2QudG9Mb3dlckNhc2UoKSA9PT0gXCJwb3N0XCIpIHtcbiAgICBjb25zdCBib2R5ID0gZGF0YSA/IEpTT04uc3RyaW5naWZ5KGRhdGEpIDogXCJcIjtcbiAgICByZXR1cm4ge1xuICAgICAgbWV0aG9kOiBtZXRob2QudG9VcHBlckNhc2UoKSxcbiAgICAgIGJvZHk6IGJvZHksXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICBcIlgtQ1NSRlRva2VuXCI6IGdldENzcmZUb2tlbigpLFxuICAgICAgfSxcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHRocm93IEVycm9yKGBNZXRob2QgJHttZXRob2R9IG5vdCBpbXBsZW1lbnRlZCB5ZXQuYCk7XG4gIH1cbn1cbiIsIi8vIEBmbG93XG5cInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyKG5vZGU6IEhUTUxFbGVtZW50KTogSFRNTEVsZW1lbnQge1xuICB3aGlsZSAobm9kZS5oYXNDaGlsZE5vZGVzKCkpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgbm9kZS5yZW1vdmVDaGlsZChub2RlLmxhc3RDaGlsZCk7XG4gIH1cbiAgcmV0dXJuIG5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXREYXRldGltZShkYXRldGltZTogRGF0ZSk6IHN0cmluZyB7XG4gIHJldHVybiAoXG4gICAgZGF0ZXRpbWUudG9Mb2NhbGVTdHJpbmcoXCJlbi1jYVwiLCB7IHllYXI6IFwibnVtZXJpY1wiIH0pICtcbiAgICBcIi1cIiArXG4gICAgZGF0ZXRpbWUudG9Mb2NhbGVTdHJpbmcoXCJlbi1jYVwiLCB7IG1vbnRoOiBcIjItZGlnaXRcIiB9KSArXG4gICAgXCItXCIgK1xuICAgIGRhdGV0aW1lLnRvTG9jYWxlU3RyaW5nKFwiZW4tY2FcIiwgeyBkYXk6IFwiMi1kaWdpdFwiIH0pICtcbiAgICBcIiBcIiArXG4gICAgZGF0ZXRpbWUudG9Mb2NhbGVTdHJpbmcoXCJlbi1jYVwiLCB7IGhvdXI6IFwiMi1kaWdpdFwiLCBob3VyMTI6IGZhbHNlIH0pICtcbiAgICBcIjpcIiArXG4gICAgZGF0ZXRpbWUudG9Mb2NhbGVTdHJpbmcoXCJlbi1jYVwiLCB7IG1pbnV0ZTogXCIyLWRpZ2l0XCIgfSlcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN2ZyhuYW1lOiBzdHJpbmcpOiBFbGVtZW50IHtcbiAgY29uc3Qgc3ZnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJzdmdcIik7XG4gIGNvbnN0IHVzZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidXNlXCIpO1xuICB1c2Uuc2V0QXR0cmlidXRlTlMoXG4gICAgXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsXG4gICAgXCJocmVmXCIsXG4gICAgd2luZG93LmxvY2F0aW9uLnByb3RvY29sICtcbiAgICAgIFwiLy9cIiArXG4gICAgICB3aW5kb3cubG9jYXRpb24uaG9zdCArXG4gICAgICBcIi9zdGF0aWMvcGVlcmluc3QvaWNvbnMuc3ZnI1wiICtcbiAgICAgIG5hbWUsXG4gICk7XG4gIHN2Zy5hcHBlbmQodXNlKTtcbiAgcmV0dXJuIHN2Zztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNob3dBbGVydChtc2c6IHN0cmluZykge1xuICBjb25zdCBmdWxsUGFnZUJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGZ1bGxQYWdlQm94LmNsYXNzTGlzdC5hZGQoXCJhbGVydC1ib3hfX2Z1bGwtcGFnZVwiKTtcbiAgZnVsbFBhZ2VCb3guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudDogTW91c2VFdmVudCkgPT4ge1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGZ1bGxQYWdlQm94LnBhcmVudE5vZGU/LnJlbW92ZUNoaWxkKGZ1bGxQYWdlQm94KTtcbiAgfSk7XG4gIGRvY3VtZW50LmJvZHk/LmFwcGVuZENoaWxkKGZ1bGxQYWdlQm94KTtcblxuICBjb25zdCBib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBib3guY2xhc3NMaXN0LmFkZChcImFsZXJ0LWJveF9fYm94XCIpO1xuICBib3guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudDogTW91c2VFdmVudCkgPT5cbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKSxcbiAgKTtcbiAgZnVsbFBhZ2VCb3guYXBwZW5kQ2hpbGQoYm94KTtcblxuICBjb25zdCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gIHNwYW4uY2xhc3NMaXN0LmFkZChcImFsZXJ0LWJveF9fbXNnXCIpO1xuICBzcGFuLnRleHRDb250ZW50ID0gbXNnO1xuICBib3guYXBwZW5kQ2hpbGQoc3Bhbik7XG5cbiAgY29uc3Qgb2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBvay5jbGFzc0xpc3QuYWRkKFwiYWxlcnQtYm94X19idG5cIiwgXCJtZGMtYnV0dG9uXCIsIFwibWRjLWJ1dHRvbi0tdW5lbGV2YXRlZFwiKTtcbiAgb2sudGV4dENvbnRlbnQgPSBcIk9rXCI7XG4gIGJveC5hcHBlbmRDaGlsZChvayk7XG59XG4iLCJpbXBvcnQgeyBidWlsZFJlcSB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi9wZWVyaW5zdC9zdGF0aWMvcGVlcmluc3QvanMvX2FqYXgvdXRpbHMuanNcIjsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuaW1wb3J0IHsgY2xlYXIgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vcGVlcmluc3Qvc3RhdGljL3BlZXJpbnN0L2pzL3V0aWxzLmpzXCI7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuLyoqKioqKioqKi9cbi8qIG1vZGVsICovXG4vKioqKioqKioqL1xuXG5sZXQgbW9kZWw7XG5cbmZ1bmN0aW9uIGluaXRNb2RlbChkYXRhKSB7XG4gIG1vZGVsID0ge1xuICAgIHF1YWxpdHk6IHtcbiAgICAgIHBrOiBkYXRhLnF1YWxpdHkucGssXG4gICAgICBxdWFsaXR5VHlwZTogZGF0YS5xdWFsaXR5LnF1YWxpdHlfdHlwZSxcbiAgICB9LFxuICAgIG5leHQ6IGRhdGEubmV4dCxcbiAgICBhdmFpbGFibGU6IGRhdGEuYXZhaWxhYmxlLm1hcChjID0+ICh7XG4gICAgICBuYW1lOiBjLm5hbWUsXG4gICAgICBmdWxsTmFtZTogYy5mdWxsX25hbWUsXG4gICAgICBkZXNjcmlwdGlvbjogYy5kZXNjcmlwdGlvbixcbiAgICB9KSksXG4gICAgY3JpdGVyaW9uczogZGF0YS5jcml0ZXJpb25zLFxuICAgIHVybHM6IHtcbiAgICAgIGFkZENyaXRlcmlvbjogZGF0YS51cmxzLmFkZF9jcml0ZXJpb24sXG4gICAgICB1cGRhdGVDcml0ZXJpb246IGRhdGEudXJscy51cGRhdGVfY3JpdGVyaW9uLFxuICAgICAgcmVtb3ZlQ3JpdGVyaW9uOiBkYXRhLnVybHMucmVtb3ZlX2NyaXRlcmlvbixcbiAgICB9LFxuICB9O1xufVxuXG4vKioqKioqKioqKi9cbi8qIHVwZGF0ZSAqL1xuLyoqKioqKioqKiovXG5cbmZ1bmN0aW9uIHVwZGF0ZUNyaXRlcmlvbk9wdGlvbihldmVudCwgb3B0aW9uLCBjcml0ZXJpb24pIHtcbiAgY29uc3QgdHlwZSA9IG9wdGlvbi5nZXRBdHRyaWJ1dGUoXCJkYXRhLXR5cGVcIik7XG4gIGNvbnN0IG5hbWUgPSBvcHRpb24uZ2V0QXR0cmlidXRlKFwibmFtZVwiKTtcbiAgbGV0IHZhbHVlO1xuXG4gIGlmICh0eXBlID09PSBcIkNvbW1hU2VwRmllbGRcIiB8fCB0eXBlID09PSBcIk1hbnlUb01hbnlGaWVsZFwiKSB7XG4gICAgb3B0aW9uLnF1ZXJ5U2VsZWN0b3IoXCIuY29tbWEtc2VwLWlucHV0LS1pbnB1dFwiKS5zZXRDdXN0b21WYWxpZGl0eShcIlwiKTtcbiAgICBpZiAoZXZlbnQua2V5ID09PSBcIkVudGVyXCIgfHwgZXZlbnQua2V5ID09PSBcIixcIiB8fCBldmVudC5rZXkgPT09IFwiIFwiKSB7XG4gICAgICBpZiAodmFsdWUgPT09IFwiIFwiIHx8IHZhbHVlID09PSBcIixcIikge1xuICAgICAgICB2YWx1ZSA9IFwiXCI7XG4gICAgICB9XG4gICAgICB2YWx1ZSA9IG9wdGlvbi5xdWVyeVNlbGVjdG9yKFwiLmNvbW1hLXNlcC1pbnB1dC0taW5wdXRcIikudmFsdWU7XG4gICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChjcml0ZXJpb25bbmFtZV0uYWxsb3dlZCkge1xuICAgICAgICBpZiAoIWNyaXRlcmlvbltuYW1lXS5hbGxvd2VkLmluY2x1ZGVzKHZhbHVlKSkge1xuICAgICAgICAgIHRvZ2dsZUNyaXRlcmlvbk9wdGlvbkVycm9yKFxuICAgICAgICAgICAgb3B0aW9uLnF1ZXJ5U2VsZWN0b3IoXCIuY29tbWEtc2VwLWlucHV0LS1pbnB1dFwiKSxcbiAgICAgICAgICAgIGAke3ZhbHVlfSBpc24ndCBhbiBhY2NlcHRlZCBsYW5ndWFnZS4gT3B0aW9ucyBhcmUgJHtjcml0ZXJpb25bXG4gICAgICAgICAgICAgIG5hbWVcbiAgICAgICAgICAgIF0uYWxsb3dlZFxuICAgICAgICAgICAgICAuc2xpY2UoMCwgY3JpdGVyaW9uW25hbWVdLmFsbG93ZWQubGVuZ3RoIC0gMSlcbiAgICAgICAgICAgICAgLmpvaW4oXCIsIFwiKX0gYW5kICR7XG4gICAgICAgICAgICAgIGNyaXRlcmlvbltuYW1lXS5hbGxvd2VkW2NyaXRlcmlvbltuYW1lXS5hbGxvd2VkLmxlbmd0aCAtIDFdXG4gICAgICAgICAgICB9LmAsXG4gICAgICAgICAgKTtcbiAgICAgICAgICBvcHRpb24ucXVlcnlTZWxlY3RvcihcIi5jb21tYS1zZXAtaW5wdXQtLWlucHV0XCIpLnZhbHVlID0gXCJcIjtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSBcIkJhY2tzcGFjZVwiKSB7XG4gICAgICB2YWx1ZSA9IG9wdGlvbi5xdWVyeVNlbGVjdG9yKFwiLmNvbW1hLXNlcC1pbnB1dC0taW5wdXRcIikudmFsdWU7XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9IGVsc2UgaWYgKFxuICAgIHR5cGUgPT09IFwiUG9zaXRpdmVJbnRlZ2VyRmllbGRcIiB8fFxuICAgIHR5cGUgPT09IFwiUHJvYmFiaWxpdHlGaWVsZFwiIHx8XG4gICAgdHlwZSA9PT0gXCJGbG9hdEZpZWxkXCIgfHxcbiAgICB0eXBlID09PSBcIkludGVnZXJGaWVsZFwiXG4gICkge1xuICAgIG9wdGlvbi5zZXRDdXN0b21WYWxpZGl0eShcIlwiKTtcbiAgICB2YWx1ZSA9IG9wdGlvbi52YWx1ZTtcbiAgICBpZiAodmFsdWUgPT09IFwiXCIpIHtcbiAgICAgIGlmIChldmVudC5pbnB1dFR5cGUgPT09IFwiaW5zZXJ0VGV4dFwiICYmIGV2ZW50LmRhdGEgPT09IFwiLVwiKSB7XG4gICAgICAgIHZhbHVlID0gMDtcbiAgICAgICAgb3B0aW9uLnZhbHVlID0gMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHR5cGUgPT09IFwiUHJvYmFiaWxpdHlGaWVsZFwiKSB7XG4gICAgICBpZiAodmFsdWUgPCAwKSB7XG4gICAgICAgIHZhbHVlID0gMDtcbiAgICAgICAgb3B0aW9uLnZhbHVlID0gdmFsdWU7XG4gICAgICB9IGVsc2UgaWYgKHZhbHVlID4gMSkge1xuICAgICAgICB2YWx1ZSA9IHBhcnNlRmxvYXQoXCIwLlwiICsgdmFsdWUpO1xuICAgICAgICBvcHRpb24udmFsdWUgPSB2YWx1ZTtcbiAgICAgIH0gZWxzZSBpZiAodmFsdWUudG9TdHJpbmcoKS5sZW5ndGggPiA0KSB7XG4gICAgICAgIG9wdGlvbi52YWx1ZSA9IG1vZGVsLmNyaXRlcmlvbnMuZmlsdGVyKFxuICAgICAgICAgIGMgPT4gYy5uYW1lID09PSBjcml0ZXJpb24ubmFtZSxcbiAgICAgICAgKVswXVtuYW1lXS52YWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgbW9kZWwuY3JpdGVyaW9ucy5maWx0ZXIoYyA9PiBjLm5hbWUgPT09IGNyaXRlcmlvbi5uYW1lKVswXVtuYW1lXVxuICAgICAgICAgIC52YWx1ZSA9PSB2YWx1ZVxuICAgICAgKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gXCIwMFwiKSB7XG4gICAgICAgICAgb3B0aW9uLnZhbHVlID0gXCIwXCI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIGlmICh0eXBlID09PSBcIkJvb2xlYW5GaWVsZFwiKSB7XG4gICAgb3B0aW9uLnNldEN1c3RvbVZhbGlkaXR5KFwiXCIpO1xuICAgIHZhbHVlID0gb3B0aW9uLnZhbHVlID09PSBcImZhbHNlXCI7XG4gIH0gZWxzZSB7XG4gICAgb3B0aW9uLnNldEN1c3RvbVZhbGlkaXR5KFwiXCIpO1xuICAgIHZhbHVlID0gb3B0aW9uLnZhbHVlO1xuICB9XG5cbiAgY29uc3QgZGF0YSA9IHtcbiAgICBxdWFsaXR5OiBtb2RlbC5xdWFsaXR5LnBrLFxuICAgIGNyaXRlcmlvbjogY3JpdGVyaW9uLm5hbWUsXG4gICAgZmllbGQ6IG5hbWUsXG4gICAgdmFsdWU6IHZhbHVlLFxuICB9O1xuXG4gIGNvbnN0IHJlcSA9IGJ1aWxkUmVxKGRhdGEsIFwicG9zdFwiKTtcbiAgZmV0Y2gobW9kZWwudXJscy51cGRhdGVDcml0ZXJpb24sIHJlcSlcbiAgICAudGhlbihyZXNwID0+IChyZXNwLm9rID8gcmVzcC5qc29uKCkgOiByZXNwLnRleHQoKSkpXG4gICAgLnRoZW4oZGF0YSA9PiB7XG4gICAgICBpZiAodHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdG9nZ2xlQ3JpdGVyaW9uT3B0aW9uRXJyb3IoZXJyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1vZGVsLmNyaXRlcmlvbnMgPSBtb2RlbC5jcml0ZXJpb25zLm1hcChjID0+XG4gICAgICAgICAgYy5uYW1lID09PSBkYXRhLm5hbWUgPyBkYXRhIDogYyxcbiAgICAgICAgKTtcbiAgICAgICAgaWYgKG5hbWUgPT09IFwid2VpZ2h0XCIpIHtcbiAgICAgICAgICBjcml0ZXJpb25PcHRpb25WaWV3KHR5cGUsIGRhdGEud2VpZ2h0LCBjcml0ZXJpb24sIG9wdGlvbik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY3JpdGVyaW9uT3B0aW9uVmlldyh0eXBlLCBkYXRhW25hbWVdLnZhbHVlLCBjcml0ZXJpb24sIG9wdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XG59XG5cbmZ1bmN0aW9uIGFkZENyaXRlcmlvbihjcml0ZXJpb24pIHtcbiAgY29uc3QgZGF0YSA9IHtcbiAgICBxdWFsaXR5OiBtb2RlbC5xdWFsaXR5LnBrLFxuICAgIGNyaXRlcmlvbjogY3JpdGVyaW9uLm5hbWUsXG4gIH07XG5cbiAgY29uc3QgcmVxID0gYnVpbGRSZXEoZGF0YSwgXCJwb3N0XCIpO1xuICBmZXRjaChtb2RlbC51cmxzLmFkZENyaXRlcmlvbiwgcmVxKVxuICAgIC50aGVuKHJlc3AgPT4gcmVzcC5qc29uKCkpXG4gICAgLnRoZW4oanNvbiA9PiB7XG4gICAgICBtb2RlbC5jcml0ZXJpb25zLnB1c2goanNvbik7XG4gICAgICBjcml0ZXJpb25zVmlldygpO1xuICAgICAgbmV3Q3JpdGVyaW9uc1ZpZXcoKTtcbiAgICAgIHRvZ2dsZVNob3dBZGRDcml0ZXJpb24oKTtcbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUNyaXRlcmlvbihjcml0ZXJpb24pIHtcbiAgY29uc3QgZGF0YSA9IHtcbiAgICBxdWFsaXR5OiBtb2RlbC5xdWFsaXR5LnBrLFxuICAgIGNyaXRlcmlvbjogY3JpdGVyaW9uLm5hbWUsXG4gIH07XG4gIGNvbnN0IHJlcSA9IGJ1aWxkUmVxKGRhdGEsIFwicG9zdFwiKTtcbiAgZmV0Y2gobW9kZWwudXJscy5yZW1vdmVDcml0ZXJpb24sIHJlcSlcbiAgICAudGhlbihyZXNwID0+IHtcbiAgICAgIGlmIChyZXNwLm9rKSB7XG4gICAgICAgIG1vZGVsLmNyaXRlcmlvbnMgPSBtb2RlbC5jcml0ZXJpb25zLmZpbHRlcihcbiAgICAgICAgICBjID0+IGMubmFtZSAhPSBjcml0ZXJpb24ubmFtZSxcbiAgICAgICAgKTtcbiAgICAgICAgY3JpdGVyaW9uc1ZpZXcoKTtcbiAgICAgICAgbmV3Q3JpdGVyaW9uc1ZpZXcoKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XG59XG5cbi8qKioqKioqKi9cbi8qIHZpZXcgKi9cbi8qKioqKioqKi9cblxuZnVuY3Rpb24gdmlldygpIHtcbiAgcmV0dXJuTGlua1ZpZXcoKTtcbiAgY3JpdGVyaW9uc1ZpZXcoKTtcbiAgbmV3Q3JpdGVyaW9uc1ZpZXcoKTtcbn1cblxuZnVuY3Rpb24gcmV0dXJuTGlua1ZpZXcoKSB7XG4gIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2JhY2stbGlua1wiKTtcbiAgaWYgKG1vZGVsLm5leHQpIHtcbiAgICBsaW5rLmhyZWYgPSBtb2RlbC5uZXh0O1xuICAgIGlmIChtb2RlbC5xdWFsaXR5LnF1YWxpdHlUeXBlID09PSBcInRlYWNoZXJcIikge1xuICAgICAgbGluay50ZXh0Q29udGVudCA9IFwiQmFjayB0byBhY2NvdW50XCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxpbmsudGV4dENvbnRlbnQgPSBgQmFjayB0byAke21vZGVsLnF1YWxpdHkucXVhbGl0eVR5cGV9YDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgbGluay5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGxpbmspO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyaXRlcmlvbnNWaWV3KCkge1xuICBjb25zdCBkaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NyaXRlcmlvbnNcIik7XG4gIGNsZWFyKGRpdik7XG4gIG1vZGVsLmNyaXRlcmlvbnMuZm9yRWFjaChjcml0ZXJpb24gPT4ge1xuICAgIGRpdi5hcHBlbmRDaGlsZChjcml0ZXJpb25WaWV3KGNyaXRlcmlvbikpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JpdGVyaW9uVmlldyhjcml0ZXJpb24pIHtcbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgZGl2LmNsYXNzTGlzdC5hZGQoXCJjcml0ZXJpb25cIik7XG4gIGRpdi5jbGFzc0xpc3QuYWRkKFwiY3JpdGVyaW9uX19zaG93aW5nXCIpO1xuICBkaXYubmFtZSA9IGNyaXRlcmlvbi5uYW1lO1xuXG4gIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBuYW1lLmNsYXNzTGlzdC5hZGQoXCJjcml0ZXJpb24tLW5hbWVcIik7XG4gIG5hbWUudGV4dENvbnRlbnQgPSBjcml0ZXJpb24uZnVsbF9uYW1lO1xuICBuYW1lLnRpdGxlID0gY3JpdGVyaW9uLmRlc2NyaXB0aW9uO1xuICBuYW1lLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0b2dnbGVDcml0ZXJpb25PcHRpb25zKGRpdikpO1xuICBkaXYuYXBwZW5kQ2hpbGQobmFtZSk7XG5cbiAgY29uc3QgcmVtb3ZlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgcmVtb3ZlLmNsYXNzTGlzdC5hZGQoXCJjcml0ZXJpb24tLXJlbW92ZVwiKTtcbiAgcmVtb3ZlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBldmVudCA9PiB7XG4gICAgcmVtb3ZlQ3JpdGVyaW9uKGNyaXRlcmlvbik7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH0pO1xuICBuYW1lLmFwcGVuZENoaWxkKHJlbW92ZSk7XG4gIGNvbnN0IGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaVwiKTtcbiAgaWNvbi5jbGFzc0xpc3QuYWRkKFwibWF0ZXJpYWwtaWNvbnNcIik7XG4gIGljb24udGV4dENvbnRlbnQgPSBcImNsb3NlXCI7XG4gIHJlbW92ZS5hcHBlbmRDaGlsZChpY29uKTtcblxuICBjb25zdCBvcHRpb25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgb3B0aW9ucy5jbGFzc0xpc3QuYWRkKFwiY3JpdGVyaW9uLS1vcHRpb25zXCIpO1xuICBkaXYuYXBwZW5kQ2hpbGQob3B0aW9ucyk7XG5cbiAgY29uc3QgYmluYXJ5VGhyZXNob2xkID1cbiAgICBjcml0ZXJpb24udmVyc2lvbnNbY3JpdGVyaW9uLnZlcnNpb24gLSAxXS5iaW5hcnlfdGhyZXNob2xkO1xuXG4gIC8vIGNvbnN0IHZlcnNpb25MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcbiAgLy8gdmVyc2lvbkxhYmVsLnRleHRDb250ZW50ID0gXCJWZXJzaW9uOlwiO1xuICAvLyBjb25zdCB2ZXJzaW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtcbiAgLy8gY29uc3QgdmVyc2lvbnMgPSBbZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKV07XG4gIC8vIHZlcnNpb25zWzBdLnZhbHVlID0gMDtcbiAgLy8gdmVyc2lvbnNbMF0udGV4dENvbnRlbnQgPSBcIjAgKGxhdGVzdClcIjtcbiAgLy8gdmVyc2lvbnMuZm9yRWFjaCh2ID0+IHtcbiAgLy8gdmVyc2lvbi5hcHBlbmRDaGlsZCh2KTtcbiAgLy8gfSk7XG4gIC8vIG9wdGlvbnMuYXBwZW5kQ2hpbGQodmVyc2lvbkxhYmVsKTtcbiAgLy8gb3B0aW9ucy5hcHBlbmRDaGlsZCh2ZXJzaW9uKTtcbiAgLy9cbiAgY29uc3Qgd2VpZ2h0TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gIHdlaWdodExhYmVsLnRleHRDb250ZW50ID0gXCJXZWlnaHQ6XCI7XG4gIGNvbnN0IHdlaWdodCA9IGNyaXRlcmlvbk9wdGlvblZpZXcoXG4gICAgXCJQb3NpdGl2ZUludGVnZXJGaWVsZFwiLFxuICAgIGNyaXRlcmlvbi53ZWlnaHQsXG4gICAgY3JpdGVyaW9uLFxuICApO1xuICB3ZWlnaHQubmFtZSA9IFwid2VpZ2h0XCI7XG4gIG9wdGlvbnMuYXBwZW5kQ2hpbGQod2VpZ2h0TGFiZWwpO1xuICBvcHRpb25zLmFwcGVuZENoaWxkKHdlaWdodCk7XG5cbiAgY29uc3Qgb3RoZXJPcHRpb25zID0gT2JqZWN0LmtleXMoY3JpdGVyaW9uKS5maWx0ZXIoXG4gICAgbyA9PlxuICAgICAgIVtcbiAgICAgICAgXCJkZXNjcmlwdGlvblwiLFxuICAgICAgICBcImZ1bGxfbmFtZVwiLFxuICAgICAgICBcImlzX2JldGFcIixcbiAgICAgICAgXCJuYW1lXCIsXG4gICAgICAgIFwidmVyc2lvblwiLFxuICAgICAgICBcInZlcnNpb25zXCIsXG4gICAgICAgIFwid2VpZ2h0XCIsXG4gICAgICBdLmluY2x1ZGVzKG8pLFxuICApO1xuICBvdGhlck9wdGlvbnMuZm9yRWFjaChvID0+IHtcbiAgICBpZiAoIWJpbmFyeVRocmVzaG9sZCB8fCBvICE9PSBcInRocmVzaG9sZFwiKSB7XG4gICAgICBjb25zdCBvcHRpb24gPSBjcml0ZXJpb25bb107XG4gICAgICBjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcbiAgICAgIGxhYmVsLnRleHRDb250ZW50ID0gYCR7b3B0aW9uLmZ1bGxfbmFtZX06YDtcbiAgICAgIGxhYmVsLnRpdGxlID0gb3B0aW9uLmRlc2NyaXB0aW9uO1xuICAgICAgY29uc3QgaW5wdXQgPSBjcml0ZXJpb25PcHRpb25WaWV3KFxuICAgICAgICBvcHRpb24udHlwZSxcbiAgICAgICAgb3B0aW9uLnZhbHVlLFxuICAgICAgICBjcml0ZXJpb24sXG4gICAgICAgIG51bGwsXG4gICAgICApO1xuICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBvcHRpb24ubmFtZSk7XG4gICAgICBvcHRpb25zLmFwcGVuZENoaWxkKGxhYmVsKTtcbiAgICAgIG9wdGlvbnMuYXBwZW5kQ2hpbGQoaW5wdXQpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGRpdjtcbn1cblxuZnVuY3Rpb24gY3JpdGVyaW9uT3B0aW9uVmlldyh0eXBlLCB2YWx1ZSwgY3JpdGVyaW9uLCBpbnB1dCA9IG51bGwpIHtcbiAgY29uc3QgZm9jdXMgPSAhIWlucHV0O1xuICBpZiAodHlwZSA9PT0gXCJQb3NpdGl2ZUludGVnZXJGaWVsZFwiKSB7XG4gICAgaWYgKCFpbnB1dCkge1xuICAgICAgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXR5cGVcIiwgdHlwZSk7XG4gICAgICBpbnB1dC50eXBlID0gXCJudW1iZXJcIjtcbiAgICAgIGlucHV0Lm1pbiA9IDA7XG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZXZlbnQgPT5cbiAgICAgICAgdXBkYXRlQ3JpdGVyaW9uT3B0aW9uKGV2ZW50LCBpbnB1dCwgY3JpdGVyaW9uKSxcbiAgICAgICk7XG4gICAgfVxuICAgIGlucHV0LnZhbHVlID0gdmFsdWU7XG4gICAgcmV0dXJuIGlucHV0O1xuICB9IGVsc2UgaWYgKHR5cGUgPT09IFwiUHJvYmFiaWxpdHlGaWVsZFwiKSB7XG4gICAgaWYgKCFpbnB1dCkge1xuICAgICAgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXR5cGVcIiwgdHlwZSk7XG4gICAgICBpbnB1dC50eXBlID0gXCJudW1iZXJcIjtcbiAgICAgIGlucHV0Lm1pbiA9IDA7XG4gICAgICBpbnB1dC5tYXggPSAxO1xuICAgICAgaW5wdXQuc3RlcCA9IDAuMDE7XG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZXZlbnQgPT5cbiAgICAgICAgdXBkYXRlQ3JpdGVyaW9uT3B0aW9uKGV2ZW50LCBpbnB1dCwgY3JpdGVyaW9uKSxcbiAgICAgICk7XG4gICAgICBpZiAoZm9jdXMpIHtcbiAgICAgICAgaW5wdXQuZm9jdXMoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaW5wdXQudmFsdWUgPSB2YWx1ZTtcbiAgICByZXR1cm4gaW5wdXQ7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJDb21tYVNlcEZpZWxkXCIgfHwgdHlwZSA9PT0gXCJNYW55VG9NYW55RmllbGRcIikge1xuICAgIGlmICghaW5wdXQpIHtcbiAgICAgIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIGlucHV0LnNldEF0dHJpYnV0ZShcImRhdGEtdHlwZVwiLCB0eXBlKTtcbiAgICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoXCJjb21tYS1zZXAtaW5wdXRcIik7XG4gICAgICBpbnB1dC50eXBlID0gXCJjb21tYS1zZXBcIjtcbiAgICB9XG4gICAgY2xlYXIoaW5wdXQpO1xuICAgIHZhbHVlLmZvckVhY2god29yZCA9PiB7XG4gICAgICBjb25zdCBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgICBzcGFuLmNsYXNzTGlzdC5hZGQoXCJjb21tYS1zZXAtaW5wdXQtLXdvcmRcIik7XG4gICAgICBzcGFuLnRleHRDb250ZW50ID0gd29yZDtcbiAgICAgIGlucHV0LmFwcGVuZENoaWxkKHNwYW4pO1xuICAgIH0pO1xuICAgIGNvbnN0IGlucHV0XyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBpbnB1dF8uY2xhc3NMaXN0LmFkZChcImNvbW1hLXNlcC1pbnB1dC0taW5wdXRcIik7XG4gICAgaW5wdXRfLnR5cGUgPSBcInRleHRcIjtcbiAgICBpbnB1dF8uYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZXZlbnQgPT5cbiAgICAgIHVwZGF0ZUNyaXRlcmlvbk9wdGlvbihldmVudCwgaW5wdXQsIGNyaXRlcmlvbiksXG4gICAgKTtcbiAgICBpbnB1dC5hcHBlbmRDaGlsZChpbnB1dF8pO1xuICAgIGlmIChmb2N1cykge1xuICAgICAgaW5wdXRfLmZvY3VzKCk7XG4gICAgfVxuICAgIHJldHVybiBpbnB1dDtcbiAgfSBlbHNlIGlmICh0eXBlID09PSBcIkJvb2xlYW5GaWVsZFwiKSB7XG4gICAgaWYgKCFpbnB1dCkge1xuICAgICAgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwiZGF0YS10eXBlXCIsIHR5cGUpO1xuICAgICAgaW5wdXQuY2xhc3NMaXN0LmFkZChcImJvb2xlYW4taW5wdXRcIik7XG4gICAgICBjbGVhcihpbnB1dCk7XG4gICAgICBjb25zdCBpbnB1dF8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICBpbnB1dF8uY2xhc3NMaXN0LmFkZChcImJvb2xlYW4taW5wdXQtLWlucHV0XCIpO1xuICAgICAgaW5wdXRfLnR5cGUgPSBcImNoZWNrYm94XCI7XG4gICAgICBpbnB1dF8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGV2ZW50ID0+XG4gICAgICAgIHVwZGF0ZUNyaXRlcmlvbk9wdGlvbihldmVudCwgaW5wdXQsIGNyaXRlcmlvbiksXG4gICAgICApO1xuICAgICAgaW5wdXQuYXBwZW5kQ2hpbGQoaW5wdXRfKTtcbiAgICAgIGNvbnN0IGJhY2tncm91bmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICAgIGJhY2tncm91bmQuY2xhc3NMaXN0LmFkZChcImJvb2xlYW4taW5wdXQtLWJhY2tncm91bmRcIik7XG4gICAgICBpbnB1dC5hcHBlbmRDaGlsZChiYWNrZ3JvdW5kKTtcbiAgICAgIGNvbnN0IG1hcmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICAgIG1hcmsuY2xhc3NMaXN0LmFkZChcImJvb2xlYW4taW5wdXQtLW1hcmtcIik7XG4gICAgICBpbnB1dC5hcHBlbmRDaGlsZChtYXJrKTtcbiAgICAgIGlmIChmb2N1cykge1xuICAgICAgICBpbnB1dF8uZm9jdXMoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaW5wdXQudmFsdWUgPSB2YWx1ZTtcbiAgICByZXR1cm4gaW5wdXQ7XG4gIH1cbn1cblxuZnVuY3Rpb24gdG9nZ2xlQ3JpdGVyaW9uT3B0aW9ucyhjcml0ZXJpb24pIHtcbiAgaWYgKGNyaXRlcmlvbi5jbGFzc0xpc3QuY29udGFpbnMoXCJjcml0ZXJpb25fX3Nob3dpbmdcIikpIHtcbiAgICBjcml0ZXJpb24uY2xhc3NMaXN0LnJlbW92ZShcImNyaXRlcmlvbl9fc2hvd2luZ1wiKTtcbiAgfSBlbHNlIHtcbiAgICBjcml0ZXJpb24uY2xhc3NMaXN0LmFkZChcImNyaXRlcmlvbl9fc2hvd2luZ1wiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0b2dnbGVDcml0ZXJpb25PcHRpb25FcnJvcihvcHRpb24sIG1zZykge1xuICBvcHRpb24uc2V0Q3VzdG9tVmFsaWRpdHkobXNnKTtcbn1cblxuZnVuY3Rpb24gbmV3Q3JpdGVyaW9uc1ZpZXcoKSB7XG4gIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLWNyaXRlcmlvbiBidXR0b25cIik7XG4gIGNvbnN0IGF2YWlsYWJsZSA9IG1vZGVsLmF2YWlsYWJsZS5maWx0ZXIoXG4gICAgYyA9PiAhbW9kZWwuY3JpdGVyaW9ucy5tYXAoY2MgPT4gY2MubmFtZSkuaW5jbHVkZXMoYy5uYW1lKSxcbiAgKTtcbiAgaWYgKGF2YWlsYWJsZS5sZW5ndGgpIHtcbiAgICBjb25zdCB1bCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYXZhaWxhYmxlLWNyaXRlcmlvbnMgdWxcIik7XG4gICAgY2xlYXIodWwpO1xuICAgIGF2YWlsYWJsZS5mb3JFYWNoKGNyaXRlcmlvbiA9PiB7XG4gICAgICB1bC5hcHBlbmRDaGlsZChuZXdDcml0ZXJpb25WaWV3KGNyaXRlcmlvbikpO1xuICAgIH0pO1xuICAgIGJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIGJ1dHRvbi50aXRsZSA9IFwiQWRkIGEgbmV3IGNyaXRlcmlvblwiO1xuICB9IGVsc2Uge1xuICAgIGJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gICAgYnV0dG9uLnRpdGxlID0gXCJUaGVyZSBhcmUgbm8gbmV3IGNyaXRlcmlvbnMgdG8gYWRkXCI7XG4gIH1cbn1cblxuZnVuY3Rpb24gbmV3Q3JpdGVyaW9uVmlldyhjcml0ZXJpb24pIHtcbiAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gIGxpLnRpdGxlID0gY3JpdGVyaW9uLmRlc2NyaXB0aW9uO1xuICBsaS50ZXh0Q29udGVudCA9IGNyaXRlcmlvbi5mdWxsTmFtZTtcbiAgbGkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGFkZENyaXRlcmlvbihjcml0ZXJpb24pKTtcbiAgcmV0dXJuIGxpO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVTaG93QWRkQ3JpdGVyaW9uKCkge1xuICBjb25zdCBkaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZC1jcml0ZXJpb25cIik7XG4gIGlmIChkaXYuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYWRkLWNyaXRlcmlvbl9fc2hvd2luZ1wiKSkge1xuICAgIGRpdi5jbGFzc0xpc3QucmVtb3ZlKFwiYWRkLWNyaXRlcmlvbl9fc2hvd2luZ1wiKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAobW9kZWwuYXZhaWxhYmxlLmxlbmd0aCkge1xuICAgICAgZGl2LmNsYXNzTGlzdC5hZGQoXCJhZGQtY3JpdGVyaW9uX19zaG93aW5nXCIpO1xuICAgIH1cbiAgfVxufVxuXG4vKioqKioqKioqKioqKi9cbi8qIGxpc3RlbmVycyAqL1xuLyoqKioqKioqKioqKiovXG5cbmZ1bmN0aW9uIGluaXRFdmVudExpc3RlbmVycygpIHtcbiAgaW5pdEFkZENyaXRlcmlvbkxpc3RlbmVycygpO1xufVxuXG5mdW5jdGlvbiBpbml0QWRkQ3JpdGVyaW9uTGlzdGVuZXJzKCkge1xuICBkb2N1bWVudFxuICAgIC5xdWVyeVNlbGVjdG9yKFwiLmFkZC1jcml0ZXJpb24gYnV0dG9uXCIpXG4gICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0b2dnbGVTaG93QWRkQ3JpdGVyaW9uKTtcbn1cblxuLyoqKioqKioqL1xuLyogaW5pdCAqL1xuLyoqKioqKioqL1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdChkYXRhKSB7XG4gIGluaXRNb2RlbChkYXRhKTtcbiAgdmlldygpO1xuICBpbml0RXZlbnRMaXN0ZW5lcnMoKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgeyBpbml0IH0gZnJvbSBcIi4vX2VkaXQvaW5kZXguanNcIjtcbiJdLCJuYW1lcyI6WyJnZXRDc3JmVG9rZW4iLCJuYW1lIiwiZG9jdW1lbnQiLCJjb29raWUiLCJzcGxpdCIsIm1hcCIsImMiLCJ0cmltIiwiZmlsdGVyIiwic3Vic3RyaW5nIiwibGVuZ3RoIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiYnVpbGRSZXEiLCJkYXRhIiwibWV0aG9kIiwidG9Mb3dlckNhc2UiLCJ0b1VwcGVyQ2FzZSIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIkVycm9yIiwiY2xlYXIiLCJub2RlIiwiaGFzQ2hpbGROb2RlcyIsInJlbW92ZUNoaWxkIiwibGFzdENoaWxkIiwibW9kZWwiLCJpbml0TW9kZWwiLCJxdWFsaXR5IiwicGsiLCJxdWFsaXR5VHlwZSIsInF1YWxpdHlfdHlwZSIsIm5leHQiLCJhdmFpbGFibGUiLCJmdWxsTmFtZSIsImZ1bGxfbmFtZSIsImRlc2NyaXB0aW9uIiwiY3JpdGVyaW9ucyIsInVybHMiLCJhZGRDcml0ZXJpb24iLCJhZGRfY3JpdGVyaW9uIiwidXBkYXRlQ3JpdGVyaW9uIiwidXBkYXRlX2NyaXRlcmlvbiIsInJlbW92ZUNyaXRlcmlvbiIsInJlbW92ZV9jcml0ZXJpb24iLCJ1cGRhdGVDcml0ZXJpb25PcHRpb24iLCJldmVudCIsIm9wdGlvbiIsImNyaXRlcmlvbiIsInR5cGUiLCJnZXRBdHRyaWJ1dGUiLCJ2YWx1ZSIsInF1ZXJ5U2VsZWN0b3IiLCJzZXRDdXN0b21WYWxpZGl0eSIsImtleSIsInByZXZlbnREZWZhdWx0IiwiYWxsb3dlZCIsImluY2x1ZGVzIiwidG9nZ2xlQ3JpdGVyaW9uT3B0aW9uRXJyb3IiLCJzbGljZSIsImpvaW4iLCJpbnB1dFR5cGUiLCJwYXJzZUZsb2F0IiwidG9TdHJpbmciLCJmaWVsZCIsInJlcSIsImZldGNoIiwidGhlbiIsInJlc3AiLCJvayIsImpzb24iLCJ0ZXh0IiwiZXJyIiwiY3JpdGVyaW9uT3B0aW9uVmlldyIsIndlaWdodCIsImNhdGNoIiwiY29uc29sZSIsImxvZyIsInB1c2giLCJjcml0ZXJpb25zVmlldyIsIm5ld0NyaXRlcmlvbnNWaWV3IiwidG9nZ2xlU2hvd0FkZENyaXRlcmlvbiIsInZpZXciLCJyZXR1cm5MaW5rVmlldyIsImxpbmsiLCJocmVmIiwidGV4dENvbnRlbnQiLCJwYXJlbnROb2RlIiwiZGl2IiwiZm9yRWFjaCIsImFwcGVuZENoaWxkIiwiY3JpdGVyaW9uVmlldyIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0aXRsZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0b2dnbGVDcml0ZXJpb25PcHRpb25zIiwicmVtb3ZlIiwic3RvcFByb3BhZ2F0aW9uIiwiaWNvbiIsIm9wdGlvbnMiLCJiaW5hcnlUaHJlc2hvbGQiLCJ2ZXJzaW9ucyIsInZlcnNpb24iLCJiaW5hcnlfdGhyZXNob2xkIiwid2VpZ2h0TGFiZWwiLCJvdGhlck9wdGlvbnMiLCJPYmplY3QiLCJrZXlzIiwibyIsImxhYmVsIiwiaW5wdXQiLCJzZXRBdHRyaWJ1dGUiLCJmb2N1cyIsIm1pbiIsIm1heCIsInN0ZXAiLCJ3b3JkIiwic3BhbiIsImlucHV0XyIsImJhY2tncm91bmQiLCJtYXJrIiwiY29udGFpbnMiLCJtc2ciLCJidXR0b24iLCJjYyIsInVsIiwibmV3Q3JpdGVyaW9uVmlldyIsImRpc2FibGVkIiwibGkiLCJpbml0RXZlbnRMaXN0ZW5lcnMiLCJpbml0QWRkQ3JpdGVyaW9uTGlzdGVuZXJzIiwiaW5pdCJdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sU0FBU0EsWUFBVCxHQUF3QjtNQUN2QkMsSUFBSSxHQUFHLFdBQWI7O01BQ0lDLFFBQVEsQ0FBQ0MsTUFBVCxJQUFtQkQsUUFBUSxDQUFDQyxNQUFULEtBQW9CLEVBQTNDLEVBQStDO1dBQ3RDRCxRQUFRLENBQUNDLE1BQVQsQ0FDSkMsS0FESSxDQUNFLEdBREYsRUFFSkMsR0FGSSxDQUVBLFVBQUFDLENBQUM7YUFBSUEsQ0FBQyxDQUFDQyxJQUFGLEVBQUo7S0FGRCxFQUdKQyxNQUhJLENBR0csVUFBQUYsQ0FBQzthQUFJQSxDQUFDLENBQUNHLFNBQUYsQ0FBWSxDQUFaLEVBQWVSLElBQUksQ0FBQ1MsTUFBTCxHQUFj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"}