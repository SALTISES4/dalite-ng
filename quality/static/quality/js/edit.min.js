var edit = (function (exports) {
'use strict';

"use strict";

function getCsrfToken() {
  var name = "csrftoken";

  if (document.cookie && document.cookie !== "") {
    return document.cookie.split(";").map(function (c) {
      return c.trim();
    }).filter(function (c) {
      return c.substring(0, name.length + 1) === name + "=";
    }).map(function (c) {
      return decodeURIComponent(c.substring(name.length + 1));
    })[0];
  } else {
    return null;
  }
}
function buildReq(data, method) {
  if (method.toLowerCase() === "get") {
    return {
      method: method.toUpperCase(),
      headers: {
        "Content-Type": "application/json",
        "X-CSRFToken": getCsrfToken()
      }
    };
  } else if (method.toLowerCase() === "post") {
    var body = data ? JSON.stringify(data) : "";
    return {
      method: method.toUpperCase(),
      body: body,
      headers: {
        "Content-Type": "application/json",
        "X-CSRFToken": getCsrfToken()
      }
    };
  } else {
    throw Error("Method ".concat(method, " not implemented yet."));
  }
}

"use strict";

/*********/

/* model */

/*********/

var model;

function initModel(data) {
  model = {
    quality: {
      pk: data.quality.pk,
      qualityType: data.quality.quality_type
    },
    next: data.next,
    available: data.available.map(function (c) {
      return {
        name: c.name,
        fullName: c.full_name,
        description: c.description
      };
    }),
    criterions: data.criterions,
    urls: {
      addCriterion: data.urls.add_criterion
    }
  };
}
/**********/

/* update */

/**********/


function addCriterion(criterion) {
  var data = {
    quality: model.quality.pk,
    criterion: criterion
  };
  var req = buildReq(data, "post");
  fetch(model.urls.addCriterion, req).then(function (resp) {
    return resp.json();
  }).then(function (json) {
    return console.log(json);
  }).catch(function (err) {
    return console.log(err);
  });
}
/********/

/* view */

/********/


function view() {
  returnLinkView();
  criterionsView();
  newCriterionsView();
}

function returnLinkView() {
  var link = document.querySelector("#back-link");

  if (model.next) {
    link.href = model.next;
    link.textContent = "Back to ".concat(model.quality.qualityType);
  } else {
    link.parentNode.removeChild(link);
  }
}

function criterionsView() {
  var div = document.querySelector("#criterions");
  model.criterions.forEach(function (criterion) {
    div.appendChild(criterionView(criterion));
  });
}

function criterionView(criterion) {
  var div = document.createElement("div");
  div.classList.add("criterion");
  var name = document.createElement("div");
  name.classList.add("criterion--name");
  name.textContent = criterion.name;
  div.appendChild(name);
  var options = document.createElement("div");
  options.classList.add("criterion--options");
  div.appendChild(options);
  return div;
}

function newCriterionsView() {
  var button = document.querySelector(".add-criterion button");

  if (model.available.length) {
    var ul = document.querySelector(".available-criterions ul");
    model.available.forEach(function (criterion) {
      ul.appendChild(newCriterionView(criterion));
    });
    button.disabled = false;
    button.title = "Add a new criterion";
  } else {
    button.disabled = true;
    button.title = "There are no new criterions to add";
  }
}

function newCriterionView(criterion) {
  var li = document.createElement("li");
  li.title = criterion.description;
  li.textContent = criterion.fullName;
  li.addEventListener("click", function () {
    return addCriterion(criterion.name);
  });
  return li;
}

function toggleShowAddCriterion(event) {
  var div = event.currentTarget.parentNode;

  if (div.classList.contains("add-criterion__showing")) {
    div.classList.remove("add-criterion__showing");
  } else {
    if (model.available.length) {
      div.classList.add("add-criterion__showing");
    }
  }
}
/*************/

/* listeners */

/*************/


function initEventListeners() {
  initAddCriterionListeners();
}

function initAddCriterionListeners() {
  document.querySelector(".add-criterion button").addEventListener("click", toggleShowAddCriterion);
}
/********/

/* init */

/********/


function init(data) {
  initModel(data);
  view();
  initEventListeners();
}

"use strict";

exports.init = init;

return exports;

}({}));
//# sourceMappingURL=edit.min.js.map
