{"version":3,"file":"question.min.js","sources":["peerinst/static/peerinst/js/_ajax/utils.js","peerinst/static/peerinst/js/utils.js","peerinst/static/peerinst/js/_question/start.js","peerinst/static/peerinst/js/question.js"],"sourcesContent":["export function getCsrfToken() {\n  const name = \"csrftoken\";\n  if (document.cookie && document.cookie !== \"\") {\n    return document.cookie\n      .split(\";\")\n      .map(c => c.trim())\n      .filter(c => c.substring(0, name.length + 1) === name + \"=\")\n      .map(c => decodeURIComponent(c.substring(name.length + 1)))[0];\n  } else {\n    return null;\n  }\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n","\"use strict\";\n\nexport function clear(node) {\n  while (node.hasChildNodes()) {\n    node.removeChild(node.lastChild);\n  }\n}\n\nexport function formatDatetime(datetime) {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n","import { buildReq } from \"../_ajax/utils.js\";\nimport { clear } from \"../utils.js\";\n\n/**********/\n/* update */\n/**********/\n\nexport function validateFormSubmit(event, url, quality) {\n  event.preventDefault();\n  const data = {\n    quality: quality,\n    rationale: document.querySelector(\"#id_rationale\").value,\n  };\n\n  const req = buildReq(data, \"post\");\n  fetch(url, req)\n    .then(resp => resp.json())\n    .then(failed => {\n      if (failed.length) {\n        toggleQualityError(failed);\n        document.querySelector(\"#answer-form\").disabled = false;\n      } else {\n        toggleQualityError();\n        document.querySelector(\"#answer-form\").disabled = true;\n        document.querySelector(\"#submit-answer-form\").submit();\n      }\n    })\n    .catch(err => console.log(err));\n}\n\n/********/\n/* view */\n/********/\n\nfunction toggleQualityError(data) {\n  if (data) {\n    const form = document.querySelector(\"#submit-answer-form\");\n\n    let div = document.querySelector(\".quality-error\");\n    if (!div) {\n      div = document.createElement(\"div\");\n    }\n    clear(div);\n\n    div.classList.add(\"quality-error\");\n    div.textContent = \"Your rationale didn't pass the following criterions: \";\n\n    const ul = document.createElement(\"ul\");\n    div.append(ul);\n    data.forEach(criterion => {\n      const li = document.createElement(\"li\");\n      li.textContent = criterion.name;\n      li.title = criterion.description;\n      ul.append(li);\n    });\n\n    form.parentNode.insertBefore(div, form);\n  } else {\n    const err = document.querySelector(\"quality-error\");\n    if (err) {\n      err.parentNode.removeChild(err);\n    }\n  }\n}\n","\"use strict\";\n\nexport { validateFormSubmit } from \"./_question/start.js\";\n"],"names":["getCsrfToken","name","document","cookie","split","map","c","trim","filter","substring","length","decodeURIComponent","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","clear","node","hasChildNodes","removeChild","lastChild","validateFormSubmit","event","url","quality","preventDefault","rationale","querySelector","value","req","fetch","then","resp","json","failed","toggleQualityError","disabled","submit","catch","err","console","log","form","div","createElement","classList","add","textContent","ul","append","forEach","criterion","li","title","description","parentNode","insertBefore"],"mappings":";;;AAAO,SAASA,YAAT,GAAwB;MACvBC,IAAI,GAAG,WAAb;;MACIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;WACtCD,QAAQ,CAACC,MAAT,CACJC,KADI,CACE,GADF,EAEJC,GAFI,CAEA,UAAAC,CAAC;aAAIA,CAAC,CAACC,IAAF,EAAJ;KAFD,EAGJC,MAHI,CAGG,UAAAF,CAAC;aAAIA,CAAC,CAACG,SAAF,CAAY,CAAZ,EAAeR,IAAI,CAACS,MAAL,GAAc,CAA7B,MAAoCT,IAAI,GAAG,GAA/C;KAHJ,EAIJI,GAJI,CAIA,UAAAC,CAAC;aAAIK,kBAAkB,CAACL,CAAC,CAACG,SAAF,CAAYR,IAAI,CAACS,MAAL,GAAc,CAA1B,CAAD,CAAtB;KAJD,EAIuD,CAJvD,CAAP;GADF,MAMO;WACE,IAAP;;;AAIJ,AAAO,SAASE,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgC;MACjCA,MAAM,CAACC,WAAP,OAAyB,KAA7B,EAAoC;WAC3B;MACLD,MAAM,EAAEA,MAAM,CAACE,WAAP,EADH;MAELC,OAAO,EAAE;wBACS,kBADT;uBAEQjB,YAAY;;KAJ/B;GADF,MAQO,IAAIc,MAAM,CAACC,WAAP,OAAyB,MAA7B,EAAqC;QACpCG,IAAI,GAAGL,IAAI,GAAGM,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAH,GAA0B,EAA3C;WACO;MACLC,MAAM,EAAEA,MAAM,CAACE,WAAP,EADH;MAELE,IAAI,EAAEA,IAFD;MAGLD,OAAO,EAAE;wBACS,kBADT;uBAEQjB,YAAY;;KAL/B;GAFK,MAUA;UACCqB,KAAK,kBAAWP,MAAX,2BAAX;;;;ACjCJ;;AAEA,AAAO,SAASQ,KAAT,CAAeC,IAAf,EAAqB;SACnBA,IAAI,CAACC,aAAL,EAAP,EAA6B;IAC3BD,IAAI,CAACE,WAAL,CAAiBF,IAAI,CAACG,SAAtB;;;;ACDJ;;;;;;AAIA,AAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,GAAnC,EAAwCC,OAAxC,EAAiD;EACtDF,KAAK,CAACG,cAAN;MACMlB,IAAI,GAAG;IACXiB,OAAO,EAAEA,OADE;IAEXE,SAAS,EAAE9B,QAAQ,CAAC+B,aAAT,CAAuB,eAAvB,EAAwCC;GAFrD;MAKMC,GAAG,GAAGvB,QAAQ,CAACC,IAAD,EAAO,MAAP,CAApB;EACAuB,KAAK,CAACP,GAAD,EAAMM,GAAN,CAAL,CACGE,IADH,CACQ,UAAAC,IAAI;WAAIA,IAAI,CAACC,IAAL,EAAJ;GADZ,EAEGF,IAFH,CAEQ,UAAAG,MAAM,EAAI;QACVA,MAAM,CAAC9B,MAAX,EAAmB;MACjB+B,kBAAkB,CAACD,MAAD,CAAlB;MACAtC,QAAQ,CAAC+B,aAAT,CAAuB,cAAvB,EAAuCS,QAAvC,GAAkD,KAAlD;KAFF,MAGO;MACLD,kBAAkB;MAClBvC,QAAQ,CAAC+B,aAAT,CAAuB,cAAvB,EAAuCS,QAAvC,GAAkD,IAAlD;MACAxC,QAAQ,CAAC+B,aAAT,CAAuB,qBAAvB,EAA8CU,MAA9C;;GATN,EAYGC,KAZH,CAYS,UAAAC,GAAG;WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;GAZZ;;;;;;;;AAmBF,SAASJ,kBAAT,CAA4B5B,IAA5B,EAAkC;MAC5BA,IAAJ,EAAU;QACFmC,IAAI,GAAG9C,QAAQ,CAAC+B,aAAT,CAAuB,qBAAvB,CAAb;QAEIgB,GAAG,GAAG/C,QAAQ,CAAC+B,aAAT,CAAuB,gBAAvB,CAAV;;QACI,CAACgB,GAAL,EAAU;MACRA,GAAG,GAAG/C,QAAQ,CAACgD,aAAT,CAAuB,KAAvB,CAAN;;;IAEF5B,KAAK,CAAC2B,GAAD,CAAL;IAEAA,GAAG,CAACE,SAAJ,CAAcC,GAAd,CAAkB,eAAlB;IACAH,GAAG,CAACI,WAAJ,GAAkB,uDAAlB;QAEMC,EAAE,GAAGpD,QAAQ,CAACgD,aAAT,CAAuB,IAAvB,CAAX;IACAD,GAAG,CAACM,MAAJ,CAAWD,EAAX;IACAzC,IAAI,CAAC2C,OAAL,CAAa,UAAAC,SAAS,EAAI;UAClBC,EAAE,GAAGxD,QAAQ,CAACgD,aAAT,CAAuB,IAAvB,CAAX;MACAQ,EAAE,CAACL,WAAH,GAAiBI,SAAS,CAACxD,IAA3B;MACAyD,EAAE,CAACC,KAAH,GAAWF,SAAS,CAACG,WAArB;MACAN,EAAE,CAACC,MAAH,CAAUG,EAAV;KAJF;IAOAV,IAAI,CAACa,UAAL,CAAgBC,YAAhB,CAA6Bb,GAA7B,EAAkCD,IAAlC;GArBF,MAsBO;QACCH,GAAG,GAAG3C,QAAQ,CAAC+B,aAAT,CAAuB,eAAvB,CAAZ;;QACIY,GAAJ,EAAS;MACPA,GAAG,CAACgB,UAAJ,CAAepC,WAAf,CAA2BoB,GAA3B;;;;;AC5DN;;;;;;;;;;","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}