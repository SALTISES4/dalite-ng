{"version":3,"file":"question.min.js","sources":["peerinst/static/peerinst/js/_question/base.js","peerinst/static/peerinst/js/_ajax/utils.js","peerinst/static/peerinst/js/utils.js","peerinst/static/peerinst/js/_question/start.js","peerinst/static/peerinst/js/_question/review.js","peerinst/static/peerinst/js/question.js"],"sourcesContent":["export function submitForm() {\n  document.querySelector(\"#submit-answer-form\").submit();\n}\n","export function getCsrfToken() {\n  const name = \"csrftoken\";\n  if (document.cookie && document.cookie !== \"\") {\n    return document.cookie\n      .split(\";\")\n      .map(c => c.trim())\n      .filter(c => c.substring(0, name.length + 1) === name + \"=\")\n      .map(c => decodeURIComponent(c.substring(name.length + 1)))[0];\n  } else {\n    return null;\n  }\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n","\"use strict\";\n\nexport function clear(node) {\n  while (node.hasChildNodes()) {\n    node.removeChild(node.lastChild);\n  }\n}\n\nexport function formatDatetime(datetime) {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name) {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  use.setAttributeNS(\n    \"http://www.w3.org/1999/xlink\",\n    \"href\",\n    window.location.protocol +\n      \"//\" +\n      window.location.host +\n      \"/static/peerinst/icons.svg#\" +\n      name,\n  );\n  svg.append(use);\n  return svg;\n}\n","import { buildReq } from \"../_ajax/utils.js\";\nimport { clear } from \"../utils.js\";\n\n/*********/\n/* model */\n/*********/\n\nlet model;\n\nfunction initModel(submitUrl, quality) {\n  model = {\n    urls: {\n      submitUrl: submitUrl,\n    },\n    quality: quality,\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction validateFormSubmit(event) {\n  event.preventDefault();\n  const data = {\n    quality: model.quality,\n    rationale: document.querySelector(\"#id_rationale\").value,\n  };\n\n  const req = buildReq(data, \"post\");\n  fetch(model.urls.submitUrl, req)\n    .then(resp => resp.json())\n    .then(failed => {\n      if (failed.failed.length) {\n        toggleQualityError(failed.failed, failed.error_msg);\n        document.querySelector(\"#answer-form\").disabled = false;\n      } else {\n        toggleQualityError();\n        document.querySelector(\"#answer-form\").disabled = true;\n        document.querySelector(\"#submit-answer-form\").submit();\n      }\n    })\n    .catch(err => console.log(err));\n}\n\n/********/\n/* view */\n/********/\n\nfunction toggleQualityError(data, errorMsg) {\n  if (data) {\n    const form = document.querySelector(\"#submit-answer-form\");\n\n    let div = document.querySelector(\".errorlist\");\n    if (!div) {\n      div = document.createElement(\"div\");\n    }\n    clear(div);\n\n    div.classList.add(\"errorlist\");\n    div.textContent = errorMsg;\n\n    const ul = document.createElement(\"ul\");\n    div.append(ul);\n    data.forEach(criterion => {\n      const li = document.createElement(\"li\");\n      li.textContent = criterion.name;\n      li.title = criterion.description;\n      ul.append(li);\n    });\n\n    form.parentNode.insertBefore(div, form);\n  } else {\n    const err = document.querySelector(\"errorlist\");\n    if (err) {\n      err.parentNode.removeChild(err);\n    }\n  }\n}\n\n/************/\n/* listners */\n/************/\n\nfunction initListeners() {\n  addSubmitListener();\n}\n\nfunction addSubmitListener() {\n  document.getElementById(\"answer-form\").addEventListener(\"click\", event => {\n    validateFormSubmit(event);\n  });\n}\n\n/********/\n/* init */\n/********/\n\nexport function init(submitUrl, quality) {\n  initModel(submitUrl, quality);\n  initListeners();\n}\n","/*********/\n/* model */\n/*********/\n\nlet model;\n\nfunction initModel() {\n  model = {\n    submitAllowed: false,\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction submitForm() {\n  if (model.submitAllowed) {\n    console.log(\"test\");\n    document.querySelector(\"#submit-answer-form\").submit();\n  } else {\n    event.stopPropagation();\n    showAlert();\n  }\n}\n\nfunction startSubmitAllowedTimer(seconds) {\n  setInterval(allowSubmit, seconds * 1000);\n}\n\nfunction allowSubmit() {\n  model.submitAllowed = true;\n}\n\n/********/\n/* view */\n/********/\n\nfunction showAlert() {\n  document\n    .querySelector(\"#review-alert\")\n    .classList.add(\"review-alert--showing\");\n}\n\nfunction hideAlert() {\n  document\n    .querySelector(\"#review-alert\")\n    .classList.remove(\"review-alert--showing\");\n}\n\n/*************/\n/* listeners */\n/*************/\n\nfunction initListeners() {\n  addSubmitListener();\n  addAlertListeners();\n}\n\nfunction addSubmitListener() {\n  document.querySelector(\"#answer-form\").addEventListener(\"click\", submitForm);\n}\n\nfunction addAlertListeners() {\n  document.querySelector(\"#review-alert\").addEventListener(\"click\", event => {\n    if (\n      document\n        .querySelector(\"#review-alert\")\n        .classList.contains(\"review-alert--showing\")\n    ) {\n      event.stopPropagation();\n      hideAlert();\n    }\n  });\n  document.querySelector(\"#review-alert div\").addEventListener(\"click\", () => {\n    event.stopPropagation();\n  });\n  document\n    .querySelector(\"#review-alert button\")\n    .addEventListener(\"click\", () => {\n      hideAlert();\n    });\n  document.body.addEventListener(\"keydown\", event => {\n    if (\n      event.key == \"Escape\" &&\n      document\n        .querySelector(\"#review-alert\")\n        .classList.contains(\"review-alert--showing\")\n    ) {\n      event.stopPropagation();\n      hideAlert();\n    }\n  });\n}\n\n/********/\n/* init */\n/********/\n\nexport function init() {\n  initModel();\n  initListeners();\n  startSubmitAllowedTimer(2);\n}\n","\"use strict\";\n\nexport { submitForm } from \"./_question/base.js\";\n\nexport { init as initStart } from \"./_question/start.js\";\n\nexport { init as initReview } from \"./_question/review.js\";\n"],"names":["submitForm","document","querySelector","submit","getCsrfToken","name","cookie","split","map","c","trim","filter","substring","length","decodeURIComponent","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","clear","node","hasChildNodes","removeChild","lastChild","model","initModel","submitUrl","quality","urls","validateFormSubmit","event","preventDefault","rationale","value","req","fetch","then","resp","json","failed","toggleQualityError","error_msg","disabled","catch","err","console","log","errorMsg","form","div","createElement","classList","add","textContent","ul","append","forEach","criterion","li","title","description","parentNode","insertBefore","initListeners","addSubmitListener","getElementById","addEventListener","init","submitAllowed","stopPropagation","showAlert","startSubmitAllowedTimer","seconds","setInterval","allowSubmit","hideAlert","remove","addAlertListeners","contains","key"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9ob21lL2FudG9pbmUvZG9jdW1lbnRzL3dvcmsvc2NpdmVyby9wcm9qZWN0cy9kYWxpdGUvZGFsaXRlL3BlZXJpbnN0L3N0YXRpYy9wZWVyaW5zdC9qcy9fcXVlc3Rpb24vYmFzZS5qcyIsIi9ob21lL2FudG9pbmUvZG9jdW1lbnRzL3dvcmsvc2NpdmVyby9wcm9qZWN0cy9kYWxpdGUvZGFsaXRlL3BlZXJpbnN0L3N0YXRpYy9wZWVyaW5zdC9qcy9fYWpheC91dGlscy5qcyIsIi9ob21lL2FudG9pbmUvZG9jdW1lbnRzL3dvcmsvc2NpdmVyby9wcm9qZWN0cy9kYWxpdGUvZGFsaXRlL3BlZXJpbnN0L3N0YXRpYy9wZWVyaW5zdC9qcy91dGlscy5qcyIsIi9ob21lL2FudG9pbmUvZG9jdW1lbnRzL3dvcmsvc2NpdmVyby9wcm9qZWN0cy9kYWxpdGUvZGFsaXRlL3BlZXJpbnN0L3N0YXRpYy9wZWVyaW5zdC9qcy9fcXVlc3Rpb24vc3RhcnQuanMiLCIvaG9tZS9hbnRvaW5lL2RvY3VtZW50cy93b3JrL3NjaXZlcm8vcHJvamVjdHMvZGFsaXRlL2RhbGl0ZS9wZWVyaW5zdC9zdGF0aWMvcGVlcmluc3QvanMvX3F1ZXN0aW9uL3Jldmlldy5qcyIsIi9ob21lL2FudG9pbmUvZG9jdW1lbnRzL3dvcmsvc2NpdmVyby9wcm9qZWN0cy9kYWxpdGUvZGFsaXRlL3BlZXJpbnN0L3N0YXRpYy9wZWVyaW5zdC9qcy9xdWVzdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gc3VibWl0Rm9ybSgpIHtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzdWJtaXQtYW5zd2VyLWZvcm1cIikuc3VibWl0KCk7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gZ2V0Q3NyZlRva2VuKCkge1xuICBjb25zdCBuYW1lID0gXCJjc3JmdG9rZW5cIjtcbiAgaWYgKGRvY3VtZW50LmNvb2tpZSAmJiBkb2N1bWVudC5jb29raWUgIT09IFwiXCIpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuY29va2llXG4gICAgICAuc3BsaXQoXCI7XCIpXG4gICAgICAubWFwKGMgPT4gYy50cmltKCkpXG4gICAgICAuZmlsdGVyKGMgPT4gYy5zdWJzdHJpbmcoMCwgbmFtZS5sZW5ndGggKyAxKSA9PT0gbmFtZSArIFwiPVwiKVxuICAgICAgLm1hcChjID0+IGRlY29kZVVSSUNvbXBvbmVudChjLnN1YnN0cmluZyhuYW1lLmxlbmd0aCArIDEpKSlbMF07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkUmVxKGRhdGEsIG1ldGhvZCkge1xuICBpZiAobWV0aG9kLnRvTG93ZXJDYXNlKCkgPT09IFwiZ2V0XCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbWV0aG9kOiBtZXRob2QudG9VcHBlckNhc2UoKSxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgIFwiWC1DU1JGVG9rZW5cIjogZ2V0Q3NyZlRva2VuKCksXG4gICAgICB9LFxuICAgIH07XG4gIH0gZWxzZSBpZiAobWV0aG9kLnRvTG93ZXJDYXNlKCkgPT09IFwicG9zdFwiKSB7XG4gICAgY29uc3QgYm9keSA9IGRhdGEgPyBKU09OLnN0cmluZ2lmeShkYXRhKSA6IFwiXCI7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLnRvVXBwZXJDYXNlKCksXG4gICAgICBib2R5OiBib2R5LFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgXCJYLUNTUkZUb2tlblwiOiBnZXRDc3JmVG9rZW4oKSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBFcnJvcihgTWV0aG9kICR7bWV0aG9kfSBub3QgaW1wbGVtZW50ZWQgeWV0LmApO1xuICB9XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyKG5vZGUpIHtcbiAgd2hpbGUgKG5vZGUuaGFzQ2hpbGROb2RlcygpKSB7XG4gICAgbm9kZS5yZW1vdmVDaGlsZChub2RlLmxhc3RDaGlsZCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdERhdGV0aW1lKGRhdGV0aW1lKSB7XG4gIHJldHVybiAoXG4gICAgZGF0ZXRpbWUudG9Mb2NhbGVTdHJpbmcoXCJlbi1jYVwiLCB7IHllYXI6IFwibnVtZXJpY1wiIH0pICtcbiAgICBcIi1cIiArXG4gICAgZGF0ZXRpbWUudG9Mb2NhbGVTdHJpbmcoXCJlbi1jYVwiLCB7IG1vbnRoOiBcIjItZGlnaXRcIiB9KSArXG4gICAgXCItXCIgK1xuICAgIGRhdGV0aW1lLnRvTG9jYWxlU3RyaW5nKFwiZW4tY2FcIiwgeyBkYXk6IFwiMi1kaWdpdFwiIH0pICtcbiAgICBcIiBcIiArXG4gICAgZGF0ZXRpbWUudG9Mb2NhbGVTdHJpbmcoXCJlbi1jYVwiLCB7IGhvdXI6IFwiMi1kaWdpdFwiLCBob3VyMTI6IGZhbHNlIH0pICtcbiAgICBcIjpcIiArXG4gICAgZGF0ZXRpbWUudG9Mb2NhbGVTdHJpbmcoXCJlbi1jYVwiLCB7IG1pbnV0ZTogXCIyLWRpZ2l0XCIgfSlcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN2ZyhuYW1lKSB7XG4gIGNvbnN0IHN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwic3ZnXCIpO1xuICBjb25zdCB1c2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInVzZVwiKTtcbiAgdXNlLnNldEF0dHJpYnV0ZU5TKFxuICAgIFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLFxuICAgIFwiaHJlZlwiLFxuICAgIHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCArXG4gICAgICBcIi8vXCIgK1xuICAgICAgd2luZG93LmxvY2F0aW9uLmhvc3QgK1xuICAgICAgXCIvc3RhdGljL3BlZXJpbnN0L2ljb25zLnN2ZyNcIiArXG4gICAgICBuYW1lLFxuICApO1xuICBzdmcuYXBwZW5kKHVzZSk7XG4gIHJldHVybiBzdmc7XG59XG4iLCJpbXBvcnQgeyBidWlsZFJlcSB9IGZyb20gXCIuLi9fYWpheC91dGlscy5qc1wiO1xuaW1wb3J0IHsgY2xlYXIgfSBmcm9tIFwiLi4vdXRpbHMuanNcIjtcblxuLyoqKioqKioqKi9cbi8qIG1vZGVsICovXG4vKioqKioqKioqL1xuXG5sZXQgbW9kZWw7XG5cbmZ1bmN0aW9uIGluaXRNb2RlbChzdWJtaXRVcmwsIHF1YWxpdHkpIHtcbiAgbW9kZWwgPSB7XG4gICAgdXJsczoge1xuICAgICAgc3VibWl0VXJsOiBzdWJtaXRVcmwsXG4gICAgfSxcbiAgICBxdWFsaXR5OiBxdWFsaXR5LFxuICB9O1xufVxuXG4vKioqKioqKioqKi9cbi8qIHVwZGF0ZSAqL1xuLyoqKioqKioqKiovXG5cbmZ1bmN0aW9uIHZhbGlkYXRlRm9ybVN1Ym1pdChldmVudCkge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBjb25zdCBkYXRhID0ge1xuICAgIHF1YWxpdHk6IG1vZGVsLnF1YWxpdHksXG4gICAgcmF0aW9uYWxlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2lkX3JhdGlvbmFsZVwiKS52YWx1ZSxcbiAgfTtcblxuICBjb25zdCByZXEgPSBidWlsZFJlcShkYXRhLCBcInBvc3RcIik7XG4gIGZldGNoKG1vZGVsLnVybHMuc3VibWl0VXJsLCByZXEpXG4gICAgLnRoZW4ocmVzcCA9PiByZXNwLmpzb24oKSlcbiAgICAudGhlbihmYWlsZWQgPT4ge1xuICAgICAgaWYgKGZhaWxlZC5mYWlsZWQubGVuZ3RoKSB7XG4gICAgICAgIHRvZ2dsZVF1YWxpdHlFcnJvcihmYWlsZWQuZmFpbGVkLCBmYWlsZWQuZXJyb3JfbXNnKTtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhbnN3ZXItZm9ybVwiKS5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdG9nZ2xlUXVhbGl0eUVycm9yKCk7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYW5zd2VyLWZvcm1cIikuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3N1Ym1pdC1hbnN3ZXItZm9ybVwiKS5zdWJtaXQoKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XG59XG5cbi8qKioqKioqKi9cbi8qIHZpZXcgKi9cbi8qKioqKioqKi9cblxuZnVuY3Rpb24gdG9nZ2xlUXVhbGl0eUVycm9yKGRhdGEsIGVycm9yTXNnKSB7XG4gIGlmIChkYXRhKSB7XG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc3VibWl0LWFuc3dlci1mb3JtXCIpO1xuXG4gICAgbGV0IGRpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZXJyb3JsaXN0XCIpO1xuICAgIGlmICghZGl2KSB7XG4gICAgICBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIH1cbiAgICBjbGVhcihkaXYpO1xuXG4gICAgZGl2LmNsYXNzTGlzdC5hZGQoXCJlcnJvcmxpc3RcIik7XG4gICAgZGl2LnRleHRDb250ZW50ID0gZXJyb3JNc2c7XG5cbiAgICBjb25zdCB1bCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKTtcbiAgICBkaXYuYXBwZW5kKHVsKTtcbiAgICBkYXRhLmZvckVhY2goY3JpdGVyaW9uID0+IHtcbiAgICAgIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgICAgbGkudGV4dENvbnRlbnQgPSBjcml0ZXJpb24ubmFtZTtcbiAgICAgIGxpLnRpdGxlID0gY3JpdGVyaW9uLmRlc2NyaXB0aW9uO1xuICAgICAgdWwuYXBwZW5kKGxpKTtcbiAgICB9KTtcblxuICAgIGZvcm0ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZGl2LCBmb3JtKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBlcnIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZXJyb3JsaXN0XCIpO1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGVyci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVycik7XG4gICAgfVxuICB9XG59XG5cbi8qKioqKioqKioqKiovXG4vKiBsaXN0bmVycyAqL1xuLyoqKioqKioqKioqKi9cblxuZnVuY3Rpb24gaW5pdExpc3RlbmVycygpIHtcbiAgYWRkU3VibWl0TGlzdGVuZXIoKTtcbn1cblxuZnVuY3Rpb24gYWRkU3VibWl0TGlzdGVuZXIoKSB7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYW5zd2VyLWZvcm1cIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGV2ZW50ID0+IHtcbiAgICB2YWxpZGF0ZUZvcm1TdWJtaXQoZXZlbnQpO1xuICB9KTtcbn1cblxuLyoqKioqKioqL1xuLyogaW5pdCAqL1xuLyoqKioqKioqL1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdChzdWJtaXRVcmwsIHF1YWxpdHkpIHtcbiAgaW5pdE1vZGVsKHN1Ym1pdFVybCwgcXVhbGl0eSk7XG4gIGluaXRMaXN0ZW5lcnMoKTtcbn1cbiIsIi8qKioqKioqKiovXG4vKiBtb2RlbCAqL1xuLyoqKioqKioqKi9cblxubGV0IG1vZGVsO1xuXG5mdW5jdGlvbiBpbml0TW9kZWwoKSB7XG4gIG1vZGVsID0ge1xuICAgIHN1Ym1pdEFsbG93ZWQ6IGZhbHNlLFxuICB9O1xufVxuXG4vKioqKioqKioqKi9cbi8qIHVwZGF0ZSAqL1xuLyoqKioqKioqKiovXG5cbmZ1bmN0aW9uIHN1Ym1pdEZvcm0oKSB7XG4gIGlmIChtb2RlbC5zdWJtaXRBbGxvd2VkKSB7XG4gICAgY29uc29sZS5sb2coXCJ0ZXN0XCIpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc3VibWl0LWFuc3dlci1mb3JtXCIpLnN1Ym1pdCgpO1xuICB9IGVsc2Uge1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHNob3dBbGVydCgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHN0YXJ0U3VibWl0QWxsb3dlZFRpbWVyKHNlY29uZHMpIHtcbiAgc2V0SW50ZXJ2YWwoYWxsb3dTdWJtaXQsIHNlY29uZHMgKiAxMDAwKTtcbn1cblxuZnVuY3Rpb24gYWxsb3dTdWJtaXQoKSB7XG4gIG1vZGVsLnN1Ym1pdEFsbG93ZWQgPSB0cnVlO1xufVxuXG4vKioqKioqKiovXG4vKiB2aWV3ICovXG4vKioqKioqKiovXG5cbmZ1bmN0aW9uIHNob3dBbGVydCgpIHtcbiAgZG9jdW1lbnRcbiAgICAucXVlcnlTZWxlY3RvcihcIiNyZXZpZXctYWxlcnRcIilcbiAgICAuY2xhc3NMaXN0LmFkZChcInJldmlldy1hbGVydC0tc2hvd2luZ1wiKTtcbn1cblxuZnVuY3Rpb24gaGlkZUFsZXJ0KCkge1xuICBkb2N1bWVudFxuICAgIC5xdWVyeVNlbGVjdG9yKFwiI3Jldmlldy1hbGVydFwiKVxuICAgIC5jbGFzc0xpc3QucmVtb3ZlKFwicmV2aWV3LWFsZXJ0LS1zaG93aW5nXCIpO1xufVxuXG4vKioqKioqKioqKioqKi9cbi8qIGxpc3RlbmVycyAqL1xuLyoqKioqKioqKioqKiovXG5cbmZ1bmN0aW9uIGluaXRMaXN0ZW5lcnMoKSB7XG4gIGFkZFN1Ym1pdExpc3RlbmVyKCk7XG4gIGFkZEFsZXJ0TGlzdGVuZXJzKCk7XG59XG5cbmZ1bmN0aW9uIGFkZFN1Ym1pdExpc3RlbmVyKCkge1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Fuc3dlci1mb3JtXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBzdWJtaXRGb3JtKTtcbn1cblxuZnVuY3Rpb24gYWRkQWxlcnRMaXN0ZW5lcnMoKSB7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcmV2aWV3LWFsZXJ0XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBldmVudCA9PiB7XG4gICAgaWYgKFxuICAgICAgZG9jdW1lbnRcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIjcmV2aWV3LWFsZXJ0XCIpXG4gICAgICAgIC5jbGFzc0xpc3QuY29udGFpbnMoXCJyZXZpZXctYWxlcnQtLXNob3dpbmdcIilcbiAgICApIHtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgaGlkZUFsZXJ0KCk7XG4gICAgfVxuICB9KTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNyZXZpZXctYWxlcnQgZGl2XCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH0pO1xuICBkb2N1bWVudFxuICAgIC5xdWVyeVNlbGVjdG9yKFwiI3Jldmlldy1hbGVydCBidXR0b25cIilcbiAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGhpZGVBbGVydCgpO1xuICAgIH0pO1xuICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGV2ZW50ID0+IHtcbiAgICBpZiAoXG4gICAgICBldmVudC5rZXkgPT0gXCJFc2NhcGVcIiAmJlxuICAgICAgZG9jdW1lbnRcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIjcmV2aWV3LWFsZXJ0XCIpXG4gICAgICAgIC5jbGFzc0xpc3QuY29udGFpbnMoXCJyZXZpZXctYWxlcnQtLXNob3dpbmdcIilcbiAgICApIHtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgaGlkZUFsZXJ0KCk7XG4gICAgfVxuICB9KTtcbn1cblxuLyoqKioqKioqL1xuLyogaW5pdCAqL1xuLyoqKioqKioqL1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcbiAgaW5pdE1vZGVsKCk7XG4gIGluaXRMaXN0ZW5lcnMoKTtcbiAgc3RhcnRTdWJtaXRBbGxvd2VkVGltZXIoMik7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IHsgc3VibWl0Rm9ybSB9IGZyb20gXCIuL19xdWVzdGlvbi9iYXNlLmpzXCI7XG5cbmV4cG9ydCB7IGluaXQgYXMgaW5pdFN0YXJ0IH0gZnJvbSBcIi4vX3F1ZXN0aW9uL3N0YXJ0LmpzXCI7XG5cbmV4cG9ydCB7IGluaXQgYXMgaW5pdFJldmlldyB9IGZyb20gXCIuL19xdWVzdGlvbi9yZXZpZXcuanNcIjtcbiJdLCJuYW1lcyI6WyJzdWJtaXRGb3JtIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic3VibWl0IiwiZ2V0Q3NyZlRva2VuIiwibmFtZSIsImNvb2tpZSIsInNwbGl0IiwibWFwIiwiYyIsInRyaW0iLCJmaWx0ZXIiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJkZWNvZGVVUklDb21wb25lbnQiLCJidWlsZFJlcSIsImRhdGEiLCJtZXRob2QiLCJ0b0xvd2VyQ2FzZSIsInRvVXBwZXJDYXNlIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiRXJyb3IiLCJjbGVhciIsIm5vZGUiLCJoYXNDaGlsZE5vZGVzIiwicmVtb3ZlQ2hpbGQiLCJsYXN0Q2hpbGQiLCJtb2RlbCIsImluaXRNb2RlbCIsInN1Ym1pdFVybCIsInF1YWxpdHkiLCJ1cmxzIiwidmFsaWRhdGVGb3JtU3VibWl0IiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInJhdGlvbmFsZSIsInZhbHVlIiwicmVxIiwiZmV0Y2giLCJ0aGVuIiwicmVzcCIsImpzb24iLCJmYWlsZWQiLCJ0b2dnbGVRdWFsaXR5RXJyb3IiLCJlcnJvcl9tc2ciLCJkaXNhYmxlZCIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImVycm9yTXNnIiwiZm9ybSIsImRpdiIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0ZXh0Q29udGVudCIsInVsIiwiYXBwZW5kIiwiZm9yRWFjaCIsImNyaXRlcmlvbiIsImxpIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInBhcmVudE5vZGUiLCJpbnNlcnRCZWZvcmUiLCJpbml0TGlzdGVuZXJzIiwiYWRkU3VibWl0TGlzdGVuZXIiLCJnZXRFbGVtZW50QnlJZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbml0Iiwic3VibWl0QWxsb3dlZCIsInN0b3BQcm9wYWdhdGlvbiIsInNob3dBbGVydCIsInN0YXJ0U3VibWl0QWxsb3dlZFRpbWVyIiwic2Vjb25kcyIsInNldEludGVydmFsIiwiYWxsb3dTdWJtaXQiLCJoaWRlQWxlcnQiLCJyZW1vdmUiLCJhZGRBbGVydExpc3RlbmVycyIsImNvbnRhaW5zIiwia2V5Il0sIm1hcHBpbmdzIjoiOzs7QUFBTyxTQUFTQSxVQUFULEdBQXNCO0VBQzNCQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIscUJBQXZCLEVBQThDQyxNQUE5Qzs7O0FDREssU0FBU0MsWUFBVCxHQUF3QjtNQUN2QkMsSUFBSSxHQUFHLFdBQWI7O01BQ0lKLFFBQVEsQ0FBQ0ssTUFBVCxJQUFtQkwsUUFBUSxDQUFDSyxNQUFULEtBQW9CLEVBQTNDLEVBQStDO1dBQ3RDTCxRQUFRLENBQUNLLE1BQVQsQ0FDSkMsS0FESSxDQUNFLEdBREYsRUFFSkMsR0FGSSxDQUVBLFVBQUFDLENBQUM7YUFBSUEsQ0FBQyxDQUFDQyxJQUFGLEVBQUo7S0FGRCxFQUdKQyxNQUhJLENBR0csVUFBQUYsQ0FBQzthQUFJQSxDQUFDLENBQUNHLFNBQUYsQ0FBWSxDQUFaLEVBQWVQLElBQUksQ0FBQ1EsTUFBTCxHQUFjLENBQTdCLE1BQW9DUixJQUFJLEdBQUcsR0FBL0M7S0FISixFQUlKRyxHQUpJLENBSUEsVUFBQUMsQ0FBQzthQUFJSyxrQkFBa0IsQ0FBQ0wsQ0FBQyxDQUFDRyxTQUFGLENBQVlQLElBQUksQ0FBQ1EsTUFBTCxHQUFjLENBQTFCLENBQUQsQ0FBdEI7S0FKRCxFQUl1RCxDQUp2RCxDQUFQO0dBREYsTUFNTztXQUNFLElBQVA7OztBQUlKLEFBQU8sU0FBU0UsUUFBVCxDQUFrQkMsSUFBbEIsRUFBd0JDLE1BQXhCLEVBQWdDO01BQ2pDQSxNQUFNLENBQUNDLFdBQVAsT0FBeUIsS0FBN0IsRUFBb0M7V0FDM0I7TUFDTEQsTUFBTSxFQUFFQSxNQUFNLENBQUNFLFdBQVAsRUFESDtNQUVMQyxPQUFPLEVBQUU7d0JBQ1Msa0JBRFQ7dUJBRVFoQixZQUFZOztLQUovQjtHQURGLE1BUU8sSUFBSWEsTUFBTSxDQUFDQyxXQUFQLE9BQXlCLE1BQTdCLEVBQXFDO1FBQ3BDRyxJQUFJLEdBQUdMLElBQUksR0FBR00sSUFBSSxDQUFDQyxTQUFMLENBQWVQLElBQWYsQ0FBSCxHQUEwQixFQUEzQztXQUNPO01BQ0xDLE1BQU0sRUFBRUEsTUFBTSxDQUFDRSxXQUFQLEVBREg7TUFFTEUsSUFBSSxFQUFFQSxJQUZEO01BR0xELE9BQU8sRUFBRTt3QkFDUyxrQkFEVDt1QkFFUWhCLFlBQVk7O0tBTC9CO0dBRkssTUFVQTtVQUNDb0IsS0FBSyxrQkFBV1AsTUFBWCwyQkFBWDs7OztBQ2pDSjs7QUFFQSxBQUFPLFNBQVNRLEtBQVQsQ0FBZUMsSUFBZixFQUFxQjtTQUNuQkEsSUFBSSxDQUFDQyxhQUFMLEVBQVAsRUFBNkI7SUFDM0JELElBQUksQ0FBQ0UsV0FBTCxDQUFpQkYsSUFBSSxDQUFDRyxTQUF0Qjs7OztBQ0RKOzs7Ozs7QUFJQSxJQUFJQyxLQUFKOztBQUVBLFNBQVNDLFNBQVQsQ0FBbUJDLFNBQW5CLEVBQThCQyxPQUE5QixFQUF1QztFQUNyQ0gsS0FBSyxHQUFHO0lBQ05JLElBQUksRUFBRTtNQUNKRixTQUFTLEVBQUVBO0tBRlA7SUFJTkMsT0FBTyxFQUFFQTtHQUpYOzs7Ozs7Ozs7QUFZRixTQUFTRSxrQkFBVCxDQUE0QkMsS0FBNUIsRUFBbUM7RUFDakNBLEtBQUssQ0FBQ0MsY0FBTjtNQUNNckIsSUFBSSxHQUFHO0lBQ1hpQixPQUFPLEVBQUVILEtBQUssQ0FBQ0csT0FESjtJQUVYSyxTQUFTLEVBQUVyQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsZUFBdkIsRUFBd0NxQztHQUZyRDtNQUtNQyxHQUFHLEdBQUd6QixRQUFRLENBQUNDLElBQUQsRUFBTyxNQUFQLENBQXBCO0VBQ0F5QixLQUFLLENBQUNYLEtBQUssQ0FBQ0ksSUFBTixDQUFXRixTQUFaLEVBQXVCUSxHQUF2QixDQUFMLENBQ0dFLElBREgsQ0FDUSxVQUFBQyxJQUFJO1dBQUlBLElBQUksQ0FBQ0MsSUFBTCxFQUFKO0dBRFosRUFFR0YsSUFGSCxDQUVRLFVBQUFHLE1BQU0sRUFBSTtRQUNWQSxNQUFNLENBQUNBLE1BQVAsQ0FBY2hDLE1BQWxCLEVBQTBCO01BQ3hCaUMsa0JBQWtCLENBQUNELE1BQU0sQ0FBQ0EsTUFBUixFQUFnQkEsTUFBTSxDQUFDRSxTQUF2QixDQUFsQjtNQUNBOUMsUUFBUSxDQUFDQyxhQUFULENBQXVCLGNBQXZCLEVBQXVDOEMsUUFBdkMsR0FBa0QsS0FBbEQ7S0FGRixNQUdPO01BQ0xGLGtCQUFrQjtNQUNsQjdDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixjQUF2QixFQUF1QzhDLFFBQXZDLEdBQWtELElBQWxEO01BQ0EvQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIscUJBQXZCLEVBQThDQyxNQUE5Qzs7R0FUTixFQVlHOEMsS0FaSCxDQVlTLFVBQUFDLEdBQUc7V0FBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVosQ0FBSjtHQVpaOzs7Ozs7Ozs7QUFtQkYsU0FBU0osa0JBQVQsQ0FBNEI5QixJQUE1QixFQUFrQ3FDLFFBQWxDLEVBQTRDO01BQ3RDckMsSUFBSixFQUFVO1FBQ0ZzQyxJQUFJLEdBQUdyRCxRQUFRLENBQUNDLGFBQVQsQ0FBdUIscUJBQXZCLENBQWI7UUFFSXFELEdBQUcsR0FBR3RELFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixZQUF2QixDQUFWOztRQUNJLENBQUNxRCxHQUFMLEVBQVU7TUFDUkEsR0FBRyxHQUFHdEQsUUFBUSxDQUFDdUQsYUFBVCxDQUF1QixLQUF2QixDQUFOOzs7SUFFRi9CLEtBQUssQ0FBQzhCLEdBQUQsQ0FBTDtJQUVBQSxHQUFHLENBQUNFLFNBQUosQ0FBY0MsR0FBZCxDQUFrQixXQUFsQjtJQUNBSCxHQUFHLENBQUNJLFdBQUosR0FBa0JOLFFBQWxCO1FBRU1PLEVBQUUsR0FBRzNELFFBQVEsQ0FBQ3VELGFBQVQsQ0FBdUIsSUFBdkIsQ0FBWDtJQUNBRCxHQUFHLENBQUNNLE1BQUosQ0FBV0QsRUFBWDtJQUNBNUMsSUFBSSxDQUFDOEMsT0FBTCxDQUFhLFVBQUFDLFNBQVMsRUFBSTtVQUNsQkMsRUFBRSxHQUFHL0QsUUFBUSxDQUFDdUQsYUFBVCxDQUF1QixJQUF2QixDQUFYO01BQ0FRLEVBQUUsQ0FBQ0wsV0FBSCxHQUFpQkksU0FBUyxDQUFDMUQsSUFBM0I7TUFDQTJELEVBQUUsQ0FBQ0MsS0FBSCxHQUFXRixTQUFTLENBQUNHLFdBQXJCO01BQ0FOLEVBQUUsQ0FBQ0MsTUFBSCxDQUFVRyxFQUFWO0tBSkY7SUFPQVYsSUFBSSxDQUFDYSxVQUFMLENBQWdCQyxZQUFoQixDQUE2QmIsR0FBN0IsRUFBa0NELElBQWxDO0dBckJGLE1Bc0JPO1FBQ0NKLEdBQUcsR0FBR2pELFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixXQUF2QixDQUFaOztRQUNJZ0QsR0FBSixFQUFTO01BQ1BBLEdBQUcsQ0FBQ2lCLFVBQUosQ0FBZXZDLFdBQWYsQ0FBMkJzQixHQUEzQjs7Ozs7Ozs7Ozs7QUFTTixTQUFTbUIsYUFBVCxHQUF5QjtFQUN2QkMsaUJBQWlCOzs7QUFHbkIsU0FBU0EsaUJBQVQsR0FBNkI7RUFDM0JyRSxRQUFRLENBQUNzRSxjQUFULENBQXdCLGFBQXhCLEVBQXVDQyxnQkFBdkMsQ0FBd0QsT0FBeEQsRUFBaUUsVUFBQXBDLEtBQUssRUFBSTtJQUN4RUQsa0JBQWtCLENBQUNDLEtBQUQsQ0FBbEI7R0FERjs7Ozs7Ozs7O0FBU0YsQUFBTyxTQUFTcUMsSUFBVCxDQUFjekMsU0FBZCxFQUF5QkMsT0FBekIsRUFBa0M7RUFDdkNGLFNBQVMsQ0FBQ0MsU0FBRCxFQUFZQyxPQUFaLENBQVQ7RUFDQW9DLGFBQWE7OztBQ3BHZjs7Ozs7QUFJQSxJQUFJdkMsT0FBSjs7QUFFQSxTQUFTQyxXQUFULEdBQXFCO0VBQ25CRCxPQUFLLEdBQUc7SUFDTjRDLGFBQWEsRUFBRTtHQURqQjs7Ozs7Ozs7O0FBU0YsU0FBUzFFLFlBQVQsR0FBc0I7TUFDaEI4QixPQUFLLENBQUM0QyxhQUFWLEVBQXlCO0lBQ3ZCdkIsT0FBTyxDQUFDQyxHQUFSLENBQVksTUFBWjtJQUNBbkQsUUFBUSxDQUFDQyxhQUFULENBQXVCLHFCQUF2QixFQUE4Q0MsTUFBOUM7R0FGRixNQUdPO0lBQ0xpQyxLQUFLLENBQUN1QyxlQUFOO0lBQ0FDLFNBQVM7Ozs7QUFJYixTQUFTQyx1QkFBVCxDQUFpQ0MsT0FBakMsRUFBMEM7RUFDeENDLFdBQVcsQ0FBQ0MsV0FBRCxFQUFjRixPQUFPLEdBQUcsSUFBeEIsQ0FBWDs7O0FBR0YsU0FBU0UsV0FBVCxHQUF1QjtFQUNyQmxELE9BQUssQ0FBQzRDLGFBQU4sR0FBc0IsSUFBdEI7Ozs7Ozs7OztBQU9GLFNBQVNFLFNBQVQsR0FBcUI7RUFDbkIzRSxRQUFRLENBQ0xDLGFBREgsQ0FDaUIsZUFEakIsRUFFR3VELFNBRkgsQ0FFYUMsR0FGYixDQUVpQix1QkFGakI7OztBQUtGLFNBQVN1QixTQUFULEdBQXFCO0VBQ25CaEYsUUFBUSxDQUNMQyxhQURILENBQ2lCLGVBRGpCLEVBRUd1RCxTQUZILENBRWF5QixNQUZiLENBRW9CLHVCQUZwQjs7Ozs7Ozs7O0FBU0YsU0FBU2IsZUFBVCxHQUF5QjtFQUN2QkMsbUJBQWlCO0VBQ2pCYSxpQkFBaUI7OztBQUduQixTQUFTYixtQkFBVCxHQUE2QjtFQUMzQnJFLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixjQUF2QixFQUF1Q3NFLGdCQUF2QyxDQUF3RCxPQUF4RCxFQUFpRXhFLFlBQWpFOzs7QUFHRixTQUFTbUYsaUJBQVQsR0FBNkI7RUFDM0JsRixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsZUFBdkIsRUFBd0NzRSxnQkFBeEMsQ0FBeUQsT0FBekQsRUFBa0UsVUFBQXBDLEtBQUssRUFBSTtRQUV2RW5DLFFBQVEsQ0FDTEMsYUFESCxDQUNpQixlQURqQixFQUVHdUQsU0FGSCxDQUVhMkIsUUFGYixDQUVzQix1QkFGdEIsQ0FERixFQUlFO01BQ0FoRCxLQUFLLENBQUN1QyxlQUFOO01BQ0FNLFNBQVM7O0dBUGI7RUFVQWhGLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixtQkFBdkIsRUFBNENzRSxnQkFBNUMsQ0FBNkQsT0FBN0QsRUFBc0UsWUFBTTtJQUMxRXBDLEtBQUssQ0FBQ3VDLGVBQU47R0FERjtFQUdBMUUsUUFBUSxDQUNMQyxhQURILENBQ2lCLHNCQURqQixFQUVHc0UsZ0JBRkgsQ0FFb0IsT0FGcEIsRUFFNkIsWUFBTTtJQUMvQlMsU0FBUztHQUhiO0VBS0FoRixRQUFRLENBQUNvQixJQUFULENBQWNtRCxnQkFBZCxDQUErQixTQUEvQixFQUEwQyxVQUFBcEMsS0FBSyxFQUFJO1FBRS9DQSxLQUFLLENBQUNpRCxHQUFOLElBQWEsUUFBYixJQUNBcEYsUUFBUSxDQUNMQyxhQURILENBQ2lCLGVBRGpCLEVBRUd1RCxTQUZILENBRWEyQixRQUZiLENBRXNCLHVCQUZ0QixDQUZGLEVBS0U7TUFDQWhELEtBQUssQ0FBQ3VDLGVBQU47TUFDQU0sU0FBUzs7R0FSYjs7Ozs7Ozs7O0FBaUJGLEFBQU8sU0FBU1IsTUFBVCxHQUFnQjtFQUNyQjFDLFdBQVM7RUFDVHNDLGVBQWE7RUFDYlEsdUJBQXVCLENBQUMsQ0FBRCxDQUF2Qjs7O0FDdEdGOzs7Ozs7Ozs7Ozs7In0="}