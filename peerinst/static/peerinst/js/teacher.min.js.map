{"version":3,"file":"teacher.min.js","sources":["peerinst/static/peerinst/js/utils.js","peerinst/static/peerinst/js/_teacher/notifications.js","peerinst/static/peerinst/js/ajax.js","peerinst/static/peerinst/js/_teacher/gradebooks.js","peerinst/static/peerinst/js/teacher.js"],"sourcesContent":["// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string, useSprite: boolean = true): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  if (useSprite) {\n    use.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", `#${name}`);\n  } else {\n    use.setAttributeNS(\n      \"http://www.w3.org/1999/xlink\",\n      \"href\",\n      window.location.protocol +\n        \"//\" +\n        window.location.host +\n        \"/static/peerinst/icons.svg#\" +\n        name,\n    );\n  }\n  svg.append(use);\n  return svg;\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n","// @flow\n\nimport { clear, createSvg } from \"../utils.js\";\n\n/*********/\n/* model */\n/*********/\n\nexport type Notification = {\n  text: string,\n  inProgress: boolean,\n  error: boolean,\n  onClick: () => Promise<void>,\n  onCloseClick: () => Promise<void>,\n};\n\nlet model: {\n  notificationsOpen: boolean,\n  notifications: Array<Notification>,\n};\n\nfunction initModel(): void {\n  model = {\n    notificationsOpen: false,\n    notifications: [],\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction toggleNotifications(): void {\n  model.notificationsOpen = !model.notificationsOpen;\n  notificationsView();\n}\n\nexport function updateNotifications(notifications: Array<Notification>): void {\n  model.notifications = notifications;\n  notificationsView();\n}\n\n/********/\n/* view */\n/********/\n\nfunction view(): void {\n  notificationsView();\n}\n\nfunction notificationsView(): void {\n  const notifications = document.querySelector(\".notifications\");\n  const badge = notifications?.querySelector(\".notifications__icon__badge\");\n  const notificationsList = notifications?.querySelector(\n    \".notifications__notifications\",\n  );\n\n  if (!notifications || !badge || !notificationsList) {\n    return;\n  }\n\n  const completedNotifications = model.notifications.filter(\n    notification => !notification.inProgress,\n  );\n  if (completedNotifications.length > 0) {\n    badge.textContent = completedNotifications.length.toString();\n    badge.style.display = \"flex\";\n  } else {\n    badge.textContent = \"\";\n    badge.style.display = \"none\";\n  }\n\n  clear(notificationsList);\n\n  if (model.notifications.length) {\n    model.notifications.map(function(notification) {\n      notificationsList.appendChild(notificationView(notification));\n    });\n  } else {\n    notificationsList.appendChild(noNotificationView());\n  }\n\n  if (model.notifications.some(notification => notification.inProgress)) {\n    document\n      .querySelector(\".notifications__spinner\")\n      ?.classList.add(\"notifications__spinner--loading\");\n  } else {\n    document\n      .querySelector(\".notifications__spinner\")\n      ?.classList.remove(\"notifications__spinner--loading\");\n  }\n\n  if (model.notificationsOpen) {\n    notifications.classList.add(\"notifications--open\");\n  } else {\n    notifications.classList.remove(\"notifications--open\");\n  }\n}\n\nfunction notificationView(notification: Notification): HTMLDivElement {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"notification\");\n  div.addEventListener(\"click\", notification.onClick);\n\n  if (notification.inProgress) {\n    const spinner = document.createElement(\"loading-spinner\");\n    spinner.classList.add(\"notification__spinner\");\n    div.appendChild(spinner);\n  } else {\n    let icon;\n    if (notification.error) {\n      icon = createSvg(\"error\");\n      icon.classList.add(\"notification__icon--error\");\n      const remove = createSvg(\"close\");\n      remove.classList.add(\"notification__close\");\n      remove.addEventListener(\"click\", notification.onCloseClick);\n      div.appendChild(remove);\n    } else {\n      div.classList.add(\"notification--completed\");\n      icon = createSvg(\"cloud_download\");\n    }\n    icon.classList.add(\"notification__icon\");\n    div.appendChild(icon);\n  }\n\n  const description = document.createElement(\"span\");\n  description.classList.add(\"notification__description\");\n  description.textContent = notification.text;\n  div.appendChild(description);\n\n  return div;\n}\n\nfunction noNotificationView(): HTMLDivElement {\n  const div = document.createElement(\"div\");\n  div.textContent = \"No new notifications\";\n  return div;\n}\n\n/*************/\n/* listeners */\n/*************/\n\nfunction initEventListeners(): void {\n  addNotificationsOpenListener();\n}\n\nfunction addNotificationsOpenListener(): void {\n  document\n    .querySelector(\".notifications\")\n    ?.addEventListener(\"click\", function(event: MouseEvent) {\n      event.stopPropagation();\n    });\n  document\n    .querySelector(\".notifications__icon\")\n    ?.addEventListener(\"click\", function(event: MouseEvent) {\n      toggleNotifications();\n    });\n  document.body?.addEventListener(\"click\", function(event: MouseEvent) {\n    if (model.notificationsOpen) {\n      event.stopPropagation();\n      toggleNotifications();\n    }\n  });\n}\n\n/********/\n/* init */\n/********/\n\nexport function init(): void {\n  initModel();\n  view();\n  initEventListeners();\n}\n","export function getCsrfToken() {\n  return document\n    .getElementsByName(\"csrfmiddlewaretoken\")[0]\n    .getAttribute(\"value\");\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n","// @flow\nimport { buildReq } from \"../ajax.js\";\nimport { updateNotifications } from \"./notifications.js\";\nimport type { Notification } from \"./notifications.js\";\n\n/*********/\n/* model */\n/*********/\n\nconst CHECK_EVERY = 1;\n\ntype Task = {\n  id: string,\n  description: string,\n  completed: boolean,\n  datetime: Date,\n  error: boolean,\n};\n\nlet model: {\n  urls: {\n    requestGradebook: string,\n    gradebookResult: string,\n    removeFailedGradebook: string,\n    downloadGradebook: string,\n    tasks: string,\n  },\n  tasks: Array<Task>,\n};\n\nfunction initModel(urls: {\n  requestGradebook: string,\n  gradebookResult: string,\n  removeFailedGradebook: string,\n  downloadGradebook: string,\n  tasks: string,\n}): void {\n  model = {\n    tasks: [],\n    urls: {\n      requestGradebook: urls.requestGradebook,\n      gradebookResult: urls.gradebookResult,\n      removeFailedGradebook: urls.removeFailedGradebook,\n      downloadGradebook: urls.downloadGradebook,\n      tasks: urls.tasks,\n    },\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction update(): void {\n  getTasks();\n}\n\nfunction getTasks(): void {\n  const url = model.urls.tasks;\n  const req = buildReq({}, \"get\");\n\n  fetch(url, req)\n    .then(resp => resp.json())\n    .then(data => {\n      initTasks(data.tasks);\n    });\n}\n\nasync function initTasks(\n  data: Array<{\n    id: string,\n    description: string,\n    completed: boolean,\n    datetime: string,\n  }>,\n): Promise<void> {\n  model.tasks = data\n    .map(task => ({\n      id: task.id,\n      description: task.description,\n      completed: task.completed,\n      datetime: new Date(task.datetime),\n      error: false,\n    }))\n    .sort((a, b) =>\n      a.datetime > b.datetime ? -1 : a.datetime < b.datetime ? 1 : 0,\n    );\n  updateNotifications(getNotifications());\n  Promise.all(\n    model.tasks\n      .filter(task => !task.completed)\n      .map(task => getGradebookResult(task)),\n  );\n}\n\nasync function requestGradebook(event: MouseEvent): Promise<void> {\n  event.stopPropagation();\n  const button = event.currentTarget;\n  const groupId = button.getAttribute(\"data-group\");\n  const assignmentId = button.getAttribute(\"data-assignment\");\n\n  const data = {\n    group_id: groupId,\n    assignment_id: assignmentId,\n  };\n\n  const url = model.urls.requestGradebook;\n  const req = buildReq(data, \"post\");\n  const resp = await fetch(url, req);\n\n  if (resp.status === 200) {\n    const data = await resp.text();\n    const title = data.split(\"\\n\")[0];\n    const csv = data\n      .split(\"\\n\")\n      .slice(1)\n      .join(\"\\n\");\n    _downloadGradebook(title, csv);\n  } else if (resp.status === 201) {\n    const data = await resp.json();\n    const task = {\n      id: data.id,\n      description: data.description,\n      completed: data.completed,\n      datetime: new Date(data.datetime),\n      error: false,\n    };\n    model.tasks.unshift(task);\n    setTimeout(() => getGradebookResult(task), 0);\n    updateNotifications(getNotifications());\n  } else {\n    console.log(resp);\n  }\n}\n\nasync function getGradebookResult(task: Task): Promise<void> {\n  const url = model.urls.gradebookResult;\n  const req = buildReq({ task_id: task.id }, \"post\");\n\n  const resp = await fetch(url, req);\n\n  if (resp.status == 200) {\n    task.completed = true;\n    updateNotifications(getNotifications());\n  } else if (resp.status == 202) {\n    await new Promise(resolve =>\n      setTimeout(() => getGradebookResult(task), CHECK_EVERY * 1000),\n    );\n  } else {\n    task.completed = true;\n    task.error = true;\n    updateNotifications(getNotifications());\n  }\n}\n\nasync function removeGradebookError(task: Task): Promise<void> {\n  const url = model.urls.removeFailedGradebook;\n  const req = buildReq({ task_id: task.id }, \"post\");\n\n  const resp = await fetch(url, req);\n  if (resp.ok) {\n    model.tasks = model.tasks.filter(t => t.id !== task.id);\n  }\n  updateNotifications(getNotifications());\n}\n\nasync function downloadGradebook(task: Task): Promise<void> {\n  const data = {\n    task_id: task.id,\n  };\n  const url = model.urls.downloadGradebook;\n  const req = buildReq(data, \"post\");\n  const resp = await fetch(url, req);\n\n  if (resp.ok) {\n    const data = await resp.text();\n    const title = data.split(\"\\n\")[0];\n    const csv = data\n      .split(\"\\n\")\n      .slice(1)\n      .join(\"\\n\");\n    _downloadGradebook(title, csv);\n    model.tasks = model.tasks.filter(t => t.id != task.id);\n    updateNotifications(getNotifications());\n  } else {\n    console.log(resp);\n  }\n}\n\nfunction _downloadGradebook(title: string, csv: string): void {\n  const a = document.createElement(\"a\");\n  a.href = `data:text/csv;charset=utf-8, ${escape(csv)}`;\n  a.target = \"_blank\";\n  a.download = title;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n}\n\nfunction getNotifications(): Array<Notification> {\n  return model.tasks.map(task => ({\n    text: task.completed\n      ? task.error\n        ? `There was an error creating the gradebook for ${task.description}.`\n        : `The gradebook for ${task.description} is ready.`\n      : `Computing the gradebook for ${task.description}...`,\n    inProgress: !task.completed,\n    error: task.error,\n    onClick:\n      task.completed && !task.error\n        ? async () => await downloadGradebook(task)\n        : async () => undefined,\n    onCloseClick: async () => await removeGradebookError(task),\n  }));\n}\n\n/********/\n/* view */\n/********/\n\n/*************/\n/* listeners */\n/*************/\n\nfunction initListeners(): void {\n  addGradebookListeners();\n}\n\nfunction addGradebookListeners(): void {\n  [...document.getElementsByClassName(\"gradebook-button\")].forEach(button => {\n    button.addEventListener(\n      \"click\",\n      async (event: MouseEvent) => await requestGradebook(event),\n    );\n  });\n}\n\n/********/\n/* init */\n/********/\n\nexport function init(urls: {\n  requestGradebook: string,\n  gradebookResult: string,\n  removeFailedGradebook: string,\n  downloadGradebook: string,\n  tasks: string,\n}): void {\n  initModel(urls);\n  update();\n  initListeners();\n}\n","// @flow\n\"use strict\";\n\nexport { init as initNotifications } from \"./_teacher/notifications.js\";\nexport { init as initGradebooks } from \"./_teacher/gradebooks.js\";\n"],"names":["clear","node","hasChildNodes","removeChild","lastChild","createSvg","name","useSprite","svg","document","createElementNS","use","setAttributeNS","window","location","protocol","host","append","model","initModel","notificationsOpen","notifications","toggleNotifications","notificationsView","updateNotifications","view","querySelector","badge","notificationsList","completedNotifications","filter","notification","inProgress","length","textContent","toString","style","display","map","appendChild","notificationView","noNotificationView","some","classList","add","remove","div","createElement","addEventListener","onClick","spinner","icon","error","onCloseClick","description","text","initEventListeners","addNotificationsOpenListener","event","stopPropagation","body","init","getCsrfToken","getElementsByName","getAttribute","buildReq","data","method","toLowerCase","toUpperCase","headers","JSON","stringify","Error","CHECK_EVERY","urls","tasks","requestGradebook","gradebookResult","removeFailedGradebook","downloadGradebook","update","getTasks","url","req","fetch","then","resp","json","initTasks","task","id","completed","datetime","Date","sort","a","b","getNotifications","Promise","all","getGradebookResult","button","currentTarget","groupId","assignmentId","group_id","assignment_id","status","title","split","csv","slice","join","_downloadGradebook","unshift","setTimeout","console","log","task_id","resolve","removeGradebookError","ok","t","href","escape","target","download","click","undefined","initListeners","addGradebookListeners","getElementsByClassName","forEach"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}