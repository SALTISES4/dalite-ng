{"version":3,"file":"teacher.min.js","sources":["peerinst/static/peerinst/js/utils.js","peerinst/static/peerinst/js/_teacher/notifications.js","peerinst/static/peerinst/js/ajax.js","peerinst/static/peerinst/js/_teacher/gradebooks.js","peerinst/static/peerinst/js/teacher.js"],"sourcesContent":["// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  use.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", `#${name}`);\n  svg.append(use);\n  return svg;\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n","// @flow\n\nimport { clear, createSvg } from \"../utils.js\";\n\n/*********/\n/* model */\n/*********/\n\nexport type Notification = {\n  text: string,\n  inProgress: boolean,\n  error: boolean,\n  onClick: () => Promise<void>,\n  onCloseClick: () => Promise<void>,\n};\n\nlet model: {\n  notificationsOpen: boolean,\n  notifications: Array<Notification>,\n};\n\nfunction initModel(): void {\n  model = {\n    notificationsOpen: false,\n    notifications: [],\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction toggleNotifications(): void {\n  model.notificationsOpen = !model.notificationsOpen;\n  notificationsView();\n}\n\nexport function updateNotifications(notifications: Array<Notification>): void {\n  model.notifications = notifications;\n  notificationsView();\n}\n\n/********/\n/* view */\n/********/\n\nfunction view(): void {\n  notificationsView();\n}\n\nfunction notificationsView(): void {\n  const notifications = document.querySelector(\".notifications\");\n  const badge = notifications?.querySelector(\".notifications__icon__badge\");\n  const notificationsList = notifications?.querySelector(\n    \".notifications__notifications\",\n  );\n\n  if (!notifications || !badge || !notificationsList) {\n    return;\n  }\n\n  if (model.notifications.length) {\n    badge.textContent = model.notifications\n      .filter(notification => !notification.inProgress)\n      .length.toString();\n    badge.style.display = \"flex\";\n  } else {\n    badge.textContent = \"\";\n    badge.style.display = \"none\";\n  }\n\n  clear(notificationsList);\n\n  if (model.notifications.length) {\n    model.notifications.map(function(notification) {\n      notificationsList.appendChild(notificationView(notification));\n    });\n  } else {\n    notificationsList.appendChild(noNotificationView());\n  }\n\n  if (model.notifications.some(notification => notification.inProgress)) {\n    document\n      .querySelector(\".notifications__spinner\")\n      ?.classList.add(\"notifications__spinner--loading\");\n  } else {\n    document\n      .querySelector(\".notifications__spinner\")\n      ?.classList.remove(\"notifications__spinner--loading\");\n  }\n\n  if (model.notificationsOpen) {\n    notifications.classList.add(\"notifications--open\");\n  } else {\n    notifications.classList.remove(\"notifications--open\");\n  }\n}\n\nfunction notificationView(notification: Notification): HTMLDivElement {\n  const div = document.createElement(\"div\");\n  div.classList.add(\"notification\");\n  div.addEventListener(\"click\", notification.onClick);\n\n  if (notification.inProgress) {\n    const spinner = document.createElement(\"loading-spinner\");\n    spinner.classList.add(\"notification__spinner\");\n    div.appendChild(spinner);\n  } else {\n    let icon;\n    if (notification.error) {\n      icon = createSvg(\"error\");\n      icon.classList.add(\"notification__icon--error\");\n      const remove = createSvg(\"close\");\n      remove.classList.add(\"notification__close\");\n      remove.addEventListener(\"click\", notification.onCloseClick);\n      div.appendChild(remove);\n    } else {\n      div.classList.add(\"notification--completed\");\n      icon = createSvg(\"cloud_download\");\n    }\n    icon.classList.add(\"notification__icon\");\n    div.appendChild(icon);\n  }\n\n  const description = document.createElement(\"span\");\n  description.classList.add(\"notification__description\");\n  description.textContent = notification.text;\n  div.appendChild(description);\n\n  return div;\n}\n\nfunction noNotificationView(): HTMLDivElement {\n  const div = document.createElement(\"div\");\n  div.textContent = \"No new notifications\";\n  return div;\n}\n\n/*************/\n/* listeners */\n/*************/\n\nfunction initEventListeners(): void {\n  addNotificationsOpenListener();\n}\n\nfunction addNotificationsOpenListener(): void {\n  document\n    .querySelector(\".notifications\")\n    ?.addEventListener(\"click\", function(event: MouseEvent) {\n      event.stopPropagation();\n    });\n  document\n    .querySelector(\".notifications__icon\")\n    ?.addEventListener(\"click\", function(event: MouseEvent) {\n      toggleNotifications();\n    });\n  document.body?.addEventListener(\"click\", function(event: MouseEvent) {\n    if (model.notificationsOpen) {\n      event.stopPropagation();\n      toggleNotifications();\n    }\n  });\n}\n\n/********/\n/* init */\n/********/\n\nexport function init(): void {\n  initModel();\n  view();\n  initEventListeners();\n}\n","export function getCsrfToken() {\n  const name = \"csrftoken\";\n  if (document.cookie && document.cookie !== \"\") {\n    return document.cookie\n      .split(\";\")\n      .map(c => c.trim())\n      .filter(c => c.substring(0, name.length + 1) === name + \"=\")\n      .map(c => decodeURIComponent(c.substring(name.length + 1)))[0];\n  } else {\n    return null;\n  }\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n","// @flow\nimport { buildReq } from \"../ajax.js\";\nimport { updateNotifications } from \"./notifications.js\";\nimport type { Notification } from \"./notifications.js\";\n\n/*********/\n/* model */\n/*********/\n\nconst CHECK_EVERY = 0.5;\n\ntype Task = {\n  id: string,\n  description: string,\n  completed: boolean,\n  datetime: Date,\n  error: boolean,\n};\n\nlet model: {\n  urls: {\n    requestGradebook: string,\n    gradebookResult: string,\n    removeFailedGradebook: string,\n    downloadGradebook: string,\n    tasks: string,\n  },\n  tasks: Array<Task>,\n};\n\nfunction initModel(urls: {\n  requestGradebook: string,\n  gradebookResult: string,\n  removeFailedGradebook: string,\n  downloadGradebook: string,\n  tasks: string,\n}): void {\n  model = {\n    tasks: [],\n    urls: {\n      requestGradebook: urls.requestGradebook,\n      gradebookResult: urls.gradebookResult,\n      removeFailedGradebook: urls.removeFailedGradebook,\n      downloadGradebook: urls.downloadGradebook,\n      tasks: urls.tasks,\n    },\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nfunction update(): void {\n  getTasks();\n}\n\nfunction getTasks(): void {\n  const url = model.urls.tasks;\n  const req = buildReq({}, \"get\");\n\n  fetch(url, req)\n    .then(resp => resp.json())\n    .then(data => {\n      initTasks(data.tasks);\n    });\n}\n\nasync function initTasks(\n  data: Array<{\n    id: string,\n    description: string,\n    completed: boolean,\n    datetime: string,\n  }>,\n): Promise<void> {\n  model.tasks = data\n    .map(task => ({\n      id: task.id,\n      description: task.description,\n      completed: task.completed,\n      datetime: new Date(task.datetime),\n      error: false,\n    }))\n    .sort((a, b) =>\n      a.datetime > b.datetime ? -1 : a.datetime < b.datetime ? 1 : 0,\n    );\n  updateNotifications(getNotifications());\n  Promise.all(\n    model.tasks\n      .filter(task => !task.completed)\n      .map(task => getGradebookResult(task)),\n  );\n}\n\nasync function requestGradebook(event: MouseEvent): Promise<void> {\n  event.stopPropagation();\n  const button = event.currentTarget;\n  const groupId = button.getAttribute(\"data-group\");\n  const assignmentId = button.getAttribute(\"data-assignment\");\n\n  const data = {\n    group_id: groupId,\n    assignment_id: assignmentId,\n  };\n\n  const url = model.urls.requestGradebook;\n  const req = buildReq(data, \"post\");\n  const resp = await fetch(url, req);\n\n  if (resp.status === 200) {\n    const data = await resp.text();\n    const title = data.split(\"\\n\")[0];\n    const csv = data\n      .split(\"\\n\")\n      .slice(1)\n      .join(\"\\n\");\n    _downloadGradebook(title, csv);\n  } else if (resp.status === 201) {\n    const data = await resp.json();\n    const task = {\n      id: data.id,\n      description: data.description,\n      completed: data.completed,\n      datetime: new Date(data.datetime),\n      error: false,\n    };\n    model.tasks.unshift(task);\n    setTimeout(() => getGradebookResult(task), 0);\n    updateNotifications(getNotifications());\n  } else {\n    console.log(resp);\n  }\n}\n\nasync function getGradebookResult(task: Task): Promise<void> {\n  const url = model.urls.gradebookResult;\n  const req = buildReq({ task_id: task.id }, \"post\");\n\n  const resp = await fetch(url, req);\n\n  if (resp.ok) {\n    task.completed = true;\n    updateNotifications(getNotifications());\n  } else if (resp.status == 102) {\n    await new Promise(resolve =>\n      setTimeout(() => getGradebookResult(task), CHECK_EVERY * 1000),\n    );\n  } else {\n    task.completed = true;\n    task.error = true;\n    updateNotifications(getNotifications());\n  }\n}\n\nasync function removeGradebookError(task: Task): Promise<void> {\n  const url = model.urls.removeFailedGradebook;\n  const req = buildReq({ task_id: task.id }, \"post\");\n\n  const resp = await fetch(url, req);\n  if (resp.ok) {\n    model.tasks = model.tasks.filter(t => t.id !== task.id);\n  }\n  updateNotifications(getNotifications());\n}\n\nasync function downloadGradebook(task: Task): Promise<void> {\n  const data = {\n    task_id: task.id,\n  };\n  const url = model.urls.downloadGradebook;\n  const req = buildReq(data, \"post\");\n  const resp = await fetch(url, req);\n\n  if (resp.ok) {\n    const data = await resp.text();\n    const title = data.split(\"\\n\")[0];\n    const csv = data\n      .split(\"\\n\")\n      .slice(1)\n      .join(\"\\n\");\n    _downloadGradebook(title, csv);\n    model.tasks = model.tasks.filter(t => t.id != task.id);\n    updateNotifications(getNotifications());\n  } else {\n    console.log(resp);\n  }\n}\n\nfunction _downloadGradebook(title: string, csv: string): void {\n  const a = document.createElement(\"a\");\n  a.href = `data:text/csv;charset=utf-8, ${escape(csv)}`;\n  a.target = \"_blank\";\n  a.download = title;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n}\n\nfunction getNotifications(): Array<Notification> {\n  return model.tasks.map(task => ({\n    text: task.completed\n      ? task.error\n        ? `There was an error creating the gradebook for ${task.description}.`\n        : `The gradebook for ${task.description} is ready.`\n      : `Computing the gradebook for ${task.description}...`,\n    inProgress: !task.completed,\n    error: task.error,\n    onClick:\n      task.completed && !task.error\n        ? async () => await downloadGradebook(task)\n        : async () => undefined,\n    onCloseClick: async () => await removeGradebookError(task),\n  }));\n}\n\n/********/\n/* view */\n/********/\n\n/*************/\n/* listeners */\n/*************/\n\nfunction initListeners(): void {\n  addGradebookListeners();\n}\n\nfunction addGradebookListeners(): void {\n  [...document.getElementsByClassName(\"gradebook-button\")].forEach(button => {\n    button.addEventListener(\n      \"click\",\n      async (event: MouseEvent) => await requestGradebook(event),\n    );\n  });\n}\n\n/********/\n/* init */\n/********/\n\nexport function init(urls: {\n  requestGradebook: string,\n  gradebookResult: string,\n  removeFailedGradebook: string,\n  downloadGradebook: string,\n  tasks: string,\n}): void {\n  initModel(urls);\n  update();\n  initListeners();\n}\n","// @flow\n\"use strict\";\n\nexport { init as initNotifications } from \"./_teacher/notifications.js\";\nexport { init as initGradebooks } from \"./_teacher/gradebooks.js\";\n"],"names":["clear","node","hasChildNodes","removeChild","lastChild","createSvg","name","svg","document","createElementNS","use","setAttributeNS","append","model","initModel","notificationsOpen","notifications","toggleNotifications","notificationsView","updateNotifications","view","querySelector","badge","notificationsList","length","textContent","filter","notification","inProgress","toString","style","display","map","appendChild","notificationView","noNotificationView","some","classList","add","remove","div","createElement","addEventListener","onClick","spinner","icon","error","onCloseClick","description","text","initEventListeners","addNotificationsOpenListener","event","stopPropagation","body","init","getCsrfToken","cookie","split","c","trim","substring","decodeURIComponent","buildReq","data","method","toLowerCase","toUpperCase","headers","JSON","stringify","Error","CHECK_EVERY","urls","tasks","requestGradebook","gradebookResult","removeFailedGradebook","downloadGradebook","update","getTasks","url","req","fetch","then","resp","json","initTasks","task","id","completed","datetime","Date","sort","a","b","getNotifications","Promise","all","getGradebookResult","button","currentTarget","groupId","getAttribute","assignmentId","group_id","assignment_id","status","title","csv","slice","join","_downloadGradebook","unshift","setTimeout","console","log","task_id","ok","resolve","removeGradebookError","t","href","escape","target","download","click","undefined","initListeners","addGradebookListeners","getElementsByClassName","forEach"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}