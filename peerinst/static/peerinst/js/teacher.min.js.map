{"version":3,"file":"teacher.min.js","sources":["dalite/static/js/ajax.js","peerinst/static/peerinst/js/_teacher/dashboard.js","peerinst/static/peerinst/js/teacher.js"],"sourcesContent":["export function getCsrfToken() {\n  return document\n    .getElementsByName(\"csrfmiddlewaretoken\")[0]\n    .getAttribute(\"value\");\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n","// @flow\nimport { buildReq } from \"../../../../../dalite/static/js/ajax.js\";\n\n/*********/\n/* model */\n/*********/\n\ntype Collection = {\n  title: string,\n  description: string,\n  discipline: string,\n  nAssignments: number,\n  nFollowers: number,\n};\n\nlet model: {\n  collections: Array<Collection>,\n  urls: {\n    collections: string,\n  },\n};\n\nfunction initModel(data: { urls: { collections: string } }) {\n  model = {\n    collections: [],\n    urls: {\n      collections: data.urls.collections,\n    },\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nasync function update() {\n  await getCollections();\n}\n\nasync function getCollections() {\n  const data = {};\n  const req = buildReq(data, \"post\");\n  const resp = await fetch(model.urls.collections, req);\n  const json = await resp.json();\n  model.collections = json.collections.map(collection => ({\n    title: collection.title,\n    description: collection.description,\n    discipline: collection.discipline,\n    nAssignments: collection.n_assignments,\n    nFollowers: collection.n_followers,\n  }));\n  collectionsView();\n}\n\n/********/\n/* view */\n/********/\n\nfunction collectionsView() {\n  const section = document.querySelector(\".collections\");\n  if (!section) {\n    throw new Error(\"There is a missing section with class `collections`\");\n  }\n  if (model.collections.length) {\n    section.classList.remove(\"collections--hidden\");\n  } else {\n    section.classList.add(\"collections--hidden\");\n  }\n}\n\n/********/\n/* init */\n/********/\n\nexport async function init(data: { urls: { collections: string } }) {\n  initModel(data);\n  await update();\n}\n","// @flow\n\"use strict\";\n\nexport { init as initDashboard } from \"./_teacher/dashboard.js\";\n"],"names":["getCsrfToken","document","getElementsByName","getAttribute","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","model","initModel","collections","urls","update","getCollections","req","resp","fetch","json","map","collection","title","description","discipline","nAssignments","n_assignments","nFollowers","n_followers","collectionsView","section","querySelector","length","classList","remove","add","init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,SAASA,YAAT,GAAwB;SACtBC,QAAQ,CACZC,iBADI,CACc,qBADd,EACqC,CADrC,EAEJC,YAFI,CAES,OAFT,CAAP;;AAKF,AAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgC;MACjCA,MAAM,CAACC,WAAP,OAAyB,KAA7B,EAAoC;WAC3B;MACLD,MAAM,EAAEA,MAAM,CAACE,WAAP,EADH;MAELC,OAAO,EAAE;wBACS,kBADT;uBAEQT,YAAY;;KAJ/B;GADF,MAQO,IAAIM,MAAM,CAACC,WAAP,OAAyB,MAA7B,EAAqC;QACpCG,IAAI,GAAGL,IAAI,GAAGM,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAH,GAA0B,EAA3C;WACO;MACLC,MAAM,EAAEA,MAAM,CAACE,WAAP,EADH;MAELE,IAAI,EAAEA,IAFD;MAGLD,OAAO,EAAE;wBACS,kBADT;uBAEQT,YAAY;;KAL/B;GAFK,MAUA;UACCa,KAAK,kBAAWP,MAAX,2BAAX;;;;ACvBJ;;;;;;AAYA,IAAIQ,KAAJ;;AAOA,SAASC,SAAT,CAAmBV,IAAnB,EAA4D;EAC1DS,KAAK,GAAG;IACNE,WAAW,EAAE,EADP;IAENC,IAAI,EAAE;MACJD,WAAW,EAAEX,IAAI,CAACY,IAAL,CAAUD;;GAH3B;;;;;;;;;SAYaE;;;;;8BAAf,aAAwB;UAChBC,cAAc,EAApB;;;;;SAGaA;;;;;;;;;;;sCAAf,aAAgC;QACxBd,IAAI,GAAG,EAAb;QACMe,GAAG,GAAGhB,QAAQ,CAACC,IAAD,EAAO,MAAP,CAApB;QACMgB,IAAI,SAASC,KAAK,CAACR,KAAK,CAACG,IAAN,CAAWD,WAAZ,EAAyBI,GAAzB,CAAxB;QACMG,IAAI,SAASF,IAAI,CAACE,IAAL,EAAnB;IACAT,KAAK,CAACE,WAAN,GAAoBO,IAAI,CAACP,WAAL,CAAiBQ,GAAjB,CAAqB,UAAAC,UAAU;aAAK;QACtDC,KAAK,EAAED,UAAU,CAACC,KADoC;QAEtDC,WAAW,EAAEF,UAAU,CAACE,WAF8B;QAGtDC,UAAU,EAAEH,UAAU,CAACG,UAH+B;QAItDC,YAAY,EAAEJ,UAAU,CAACK,aAJ6B;QAKtDC,UAAU,EAAEN,UAAU,CAACO;OAL0B;KAA/B,CAApB;IAOAC,eAAe;;;;;AAOjB,SAASA,eAAT,GAA2B;MACnBC,OAAO,GAAGjC,QAAQ,CAACkC,aAAT,CAAuB,cAAvB,CAAhB;;MACI,CAACD,OAAL,EAAc;UACN,IAAIrB,KAAJ,CAAU,qDAAV,CAAN;;;MAEEC,KAAK,CAACE,WAAN,CAAkBoB,MAAtB,EAA8B;IAC5BF,OAAO,CAACG,SAAR,CAAkBC,MAAlB,CAAyB,qBAAzB;GADF,MAEO;IACLJ,OAAO,CAACG,SAAR,CAAkBE,GAAlB,CAAsB,qBAAtB;;;;;;;;;;AAQJ,SAAsBC,IAAtB;;;;;4BAAO,WAAoBnC,IAApB,EAA6D;IAClEU,SAAS,CAACV,IAAD,CAAT;UACMa,MAAM,EAAZ;;;;;AC3EF;;;;;;;;;;","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9ob21lL2FudG9pbmUvZG9jdW1lbnRzL3dvcmsvc2NpdmVyby9wcm9qZWN0cy9kYWxpdGUvZGFsaXRlL2RhbGl0ZS9zdGF0aWMvanMvYWpheC5qcyIsIi9ob21lL2FudG9pbmUvZG9jdW1lbnRzL3dvcmsvc2NpdmVyby9wcm9qZWN0cy9kYWxpdGUvZGFsaXRlL3BlZXJpbnN0L3N0YXRpYy9wZWVyaW5zdC9qcy9fdGVhY2hlci9kYXNoYm9hcmQuanMiLCIvaG9tZS9hbnRvaW5lL2RvY3VtZW50cy93b3JrL3NjaXZlcm8vcHJvamVjdHMvZGFsaXRlL2RhbGl0ZS9wZWVyaW5zdC9zdGF0aWMvcGVlcmluc3QvanMvdGVhY2hlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ2V0Q3NyZlRva2VuKCkge1xuICByZXR1cm4gZG9jdW1lbnRcbiAgICAuZ2V0RWxlbWVudHNCeU5hbWUoXCJjc3JmbWlkZGxld2FyZXRva2VuXCIpWzBdXG4gICAgLmdldEF0dHJpYnV0ZShcInZhbHVlXCIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRSZXEoZGF0YSwgbWV0aG9kKSB7XG4gIGlmIChtZXRob2QudG9Mb3dlckNhc2UoKSA9PT0gXCJnZXRcIikge1xuICAgIHJldHVybiB7XG4gICAgICBtZXRob2Q6IG1ldGhvZC50b1VwcGVyQ2FzZSgpLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgXCJYLUNTUkZUb2tlblwiOiBnZXRDc3JmVG9rZW4oKSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfSBlbHNlIGlmIChtZXRob2QudG9Mb3dlckNhc2UoKSA9PT0gXCJwb3N0XCIpIHtcbiAgICBjb25zdCBib2R5ID0gZGF0YSA/IEpTT04uc3RyaW5naWZ5KGRhdGEpIDogXCJcIjtcbiAgICByZXR1cm4ge1xuICAgICAgbWV0aG9kOiBtZXRob2QudG9VcHBlckNhc2UoKSxcbiAgICAgIGJvZHk6IGJvZHksXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICBcIlgtQ1NSRlRva2VuXCI6IGdldENzcmZUb2tlbigpLFxuICAgICAgfSxcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHRocm93IEVycm9yKGBNZXRob2QgJHttZXRob2R9IG5vdCBpbXBsZW1lbnRlZCB5ZXQuYCk7XG4gIH1cbn1cbiIsIi8vIEBmbG93XG5pbXBvcnQgeyBidWlsZFJlcSB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi9kYWxpdGUvc3RhdGljL2pzL2FqYXguanNcIjtcblxuLyoqKioqKioqKi9cbi8qIG1vZGVsICovXG4vKioqKioqKioqL1xuXG50eXBlIENvbGxlY3Rpb24gPSB7XG4gIHRpdGxlOiBzdHJpbmcsXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmcsXG4gIGRpc2NpcGxpbmU6IHN0cmluZyxcbiAgbkFzc2lnbm1lbnRzOiBudW1iZXIsXG4gIG5Gb2xsb3dlcnM6IG51bWJlcixcbn07XG5cbmxldCBtb2RlbDoge1xuICBjb2xsZWN0aW9uczogQXJyYXk8Q29sbGVjdGlvbj4sXG4gIHVybHM6IHtcbiAgICBjb2xsZWN0aW9uczogc3RyaW5nLFxuICB9LFxufTtcblxuZnVuY3Rpb24gaW5pdE1vZGVsKGRhdGE6IHsgdXJsczogeyBjb2xsZWN0aW9uczogc3RyaW5nIH0gfSkge1xuICBtb2RlbCA9IHtcbiAgICBjb2xsZWN0aW9uczogW10sXG4gICAgdXJsczoge1xuICAgICAgY29sbGVjdGlvbnM6IGRhdGEudXJscy5jb2xsZWN0aW9ucyxcbiAgICB9LFxuICB9O1xufVxuXG4vKioqKioqKioqKi9cbi8qIHVwZGF0ZSAqL1xuLyoqKioqKioqKiovXG5cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZSgpIHtcbiAgYXdhaXQgZ2V0Q29sbGVjdGlvbnMoKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0Q29sbGVjdGlvbnMoKSB7XG4gIGNvbnN0IGRhdGEgPSB7fTtcbiAgY29uc3QgcmVxID0gYnVpbGRSZXEoZGF0YSwgXCJwb3N0XCIpO1xuICBjb25zdCByZXNwID0gYXdhaXQgZmV0Y2gobW9kZWwudXJscy5jb2xsZWN0aW9ucywgcmVxKTtcbiAgY29uc3QganNvbiA9IGF3YWl0IHJlc3AuanNvbigpO1xuICBtb2RlbC5jb2xsZWN0aW9ucyA9IGpzb24uY29sbGVjdGlvbnMubWFwKGNvbGxlY3Rpb24gPT4gKHtcbiAgICB0aXRsZTogY29sbGVjdGlvbi50aXRsZSxcbiAgICBkZXNjcmlwdGlvbjogY29sbGVjdGlvbi5kZXNjcmlwdGlvbixcbiAgICBkaXNjaXBsaW5lOiBjb2xsZWN0aW9uLmRpc2NpcGxpbmUsXG4gICAgbkFzc2lnbm1lbnRzOiBjb2xsZWN0aW9uLm5fYXNzaWdubWVudHMsXG4gICAgbkZvbGxvd2VyczogY29sbGVjdGlvbi5uX2ZvbGxvd2VycyxcbiAgfSkpO1xuICBjb2xsZWN0aW9uc1ZpZXcoKTtcbn1cblxuLyoqKioqKioqL1xuLyogdmlldyAqL1xuLyoqKioqKioqL1xuXG5mdW5jdGlvbiBjb2xsZWN0aW9uc1ZpZXcoKSB7XG4gIGNvbnN0IHNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNvbGxlY3Rpb25zXCIpO1xuICBpZiAoIXNlY3Rpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGVyZSBpcyBhIG1pc3Npbmcgc2VjdGlvbiB3aXRoIGNsYXNzIGBjb2xsZWN0aW9uc2BcIik7XG4gIH1cbiAgaWYgKG1vZGVsLmNvbGxlY3Rpb25zLmxlbmd0aCkge1xuICAgIHNlY3Rpb24uY2xhc3NMaXN0LnJlbW92ZShcImNvbGxlY3Rpb25zLS1oaWRkZW5cIik7XG4gIH0gZWxzZSB7XG4gICAgc2VjdGlvbi5jbGFzc0xpc3QuYWRkKFwiY29sbGVjdGlvbnMtLWhpZGRlblwiKTtcbiAgfVxufVxuXG4vKioqKioqKiovXG4vKiBpbml0ICovXG4vKioqKioqKiovXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbml0KGRhdGE6IHsgdXJsczogeyBjb2xsZWN0aW9uczogc3RyaW5nIH0gfSkge1xuICBpbml0TW9kZWwoZGF0YSk7XG4gIGF3YWl0IHVwZGF0ZSgpO1xufVxuIiwiLy8gQGZsb3dcblwidXNlIHN0cmljdFwiO1xuXG5leHBvcnQgeyBpbml0IGFzIGluaXREYXNoYm9hcmQgfSBmcm9tIFwiLi9fdGVhY2hlci9kYXNoYm9hcmQuanNcIjtcbiJdLCJuYW1lcyI6WyJnZXRDc3JmVG9rZW4iLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlOYW1lIiwiZ2V0QXR0cmlidXRlIiwiYnVpbGRSZXEiLCJkYXRhIiwibWV0aG9kIiwidG9Mb3dlckNhc2UiLCJ0b1VwcGVyQ2FzZSIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIkVycm9yIiwibW9kZWwiLCJpbml0TW9kZWwiLCJjb2xsZWN0aW9ucyIsInVybHMiLCJ1cGRhdGUiLCJnZXRDb2xsZWN0aW9ucyIsInJlcSIsInJlc3AiLCJmZXRjaCIsImpzb24iLCJtYXAiLCJjb2xsZWN0aW9uIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImRpc2NpcGxpbmUiLCJuQXNzaWdubWVudHMiLCJuX2Fzc2lnbm1lbnRzIiwibkZvbGxvd2VycyIsIm5fZm9sbG93ZXJzIiwiY29sbGVjdGlvbnNWaWV3Iiwic2VjdGlvbiIsInF1ZXJ5U2VsZWN0b3IiLCJsZW5ndGgiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJpbml0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFPLFNBQVNBLFlBQVQsR0FBd0I7U0FDdEJDLFFBQVEsQ0FDWkMsaUJBREksQ0FDYyxxQkFEZCxFQUNxQyxDQURy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"}