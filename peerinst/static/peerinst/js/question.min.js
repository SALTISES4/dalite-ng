var question = (function (exports) {
'use strict';

function submitForm() {
  document.querySelector("#submit-answer-form").submit();
}

function getCsrfToken() {
  var name = "csrftoken";

  if (document.cookie && document.cookie !== "") {
    return document.cookie.split(";").map(function (c) {
      return c.trim();
    }).filter(function (c) {
      return c.substring(0, name.length + 1) === name + "=";
    }).map(function (c) {
      return decodeURIComponent(c.substring(name.length + 1));
    })[0];
  } else {
    return null;
  }
}
function buildReq(data, method) {
  if (method.toLowerCase() === "get") {
    return {
      method: method.toUpperCase(),
      headers: {
        "Content-Type": "application/json",
        "X-CSRFToken": getCsrfToken()
      }
    };
  } else if (method.toLowerCase() === "post") {
    var body = data ? JSON.stringify(data) : "";
    return {
      method: method.toUpperCase(),
      body: body,
      headers: {
        "Content-Type": "application/json",
        "X-CSRFToken": getCsrfToken()
      }
    };
  } else {
    throw Error("Method ".concat(method, " not implemented yet."));
  }
}

"use strict";

function clear(node) {
  while (node.hasChildNodes()) {
    node.removeChild(node.lastChild);
  }
}

/*********/

/* model */

/*********/

var model;

function initModel(submitUrl, quality) {
  model = {
    urls: {
      submitUrl: submitUrl
    },
    quality: quality
  };
}
/**********/

/* update */

/**********/


function validateFormSubmit(event) {
  event.preventDefault();
  var data = {
    quality: model.quality,
    rationale: document.querySelector("#id_rationale").value
  };
  var req = buildReq(data, "post");
  fetch(model.urls.submitUrl, req).then(function (resp) {
    return resp.json();
  }).then(function (failed) {
    if (failed.failed.length) {
      toggleQualityError(failed.failed, failed.error_msg);
      document.querySelector("#answer-form").disabled = false;
    } else {
      toggleQualityError();
      document.querySelector("#answer-form").disabled = true;
      document.querySelector("#submit-answer-form").submit();
    }
  }).catch(function (err) {
    return console.log(err);
  });
}
/********/

/* view */

/********/


function toggleQualityError(data, errorMsg) {
  if (data) {
    var form = document.querySelector("#submit-answer-form");
    var div = document.querySelector(".errorlist");

    if (!div) {
      div = document.createElement("div");
    }

    clear(div);
    div.classList.add("errorlist");
    div.textContent = errorMsg;
    var ul = document.createElement("ul");
    div.append(ul);
    data.forEach(function (criterion) {
      var li = document.createElement("li");
      li.textContent = criterion.name;
      li.title = criterion.description;
      ul.append(li);
    });
    form.parentNode.insertBefore(div, form);
  } else {
    var err = document.querySelector("errorlist");

    if (err) {
      err.parentNode.removeChild(err);
    }
  }
}
/************/

/* listners */

/************/


function initListeners() {
  addSubmitListener();
}

function addSubmitListener() {
  document.getElementById("answer-form").addEventListener("click", function (event) {
    validateFormSubmit(event);
  });
}
/********/

/* init */

/********/


function init(submitUrl, quality) {
  initModel(submitUrl, quality);
  initListeners();
}

/*********/

/* model */

/*********/
var model$1;

function initModel$1() {
  model$1 = {
    submitAllowed: false
  };
}
/**********/

/* update */

/**********/


function submitForm$1() {
  if (model$1.submitAllowed) {
    console.log("test");
    document.querySelector("#submit-answer-form").submit();
  } else {
    event.stopPropagation();
    showAlert();
  }
}

function startSubmitAllowedTimer(seconds) {
  setInterval(allowSubmit, seconds * 1000);
}

function allowSubmit() {
  model$1.submitAllowed = true;
}
/********/

/* view */

/********/


function showAlert() {
  document.querySelector("#review-alert").classList.add("review-alert--showing");
}

function hideAlert() {
  document.querySelector("#review-alert").classList.remove("review-alert--showing");
}
/*************/

/* listeners */

/*************/


function initListeners$1() {
  addSubmitListener$1();
  addAlertListeners();
}

function addSubmitListener$1() {
  document.querySelector("#answer-form").addEventListener("click", submitForm$1);
}

function addAlertListeners() {
  document.querySelector("#review-alert").addEventListener("click", function (event) {
    if (document.querySelector("#review-alert").classList.contains("review-alert--showing")) {
      event.stopPropagation();
      hideAlert();
    }
  });
  document.querySelector("#review-alert div").addEventListener("click", function () {
    event.stopPropagation();
  });
  document.querySelector("#review-alert button").addEventListener("click", function () {
    hideAlert();
  });
  document.body.addEventListener("keydown", function (event) {
    if (event.key == "Escape" && document.querySelector("#review-alert").classList.contains("review-alert--showing")) {
      event.stopPropagation();
      hideAlert();
    }
  });
}
/********/

/* init */

/********/


function init$1() {
  initModel$1();
  initListeners$1();
  startSubmitAllowedTimer(2);
}

"use strict";

exports.submitForm = submitForm;
exports.initStart = init;
exports.initReview = init$1;

return exports;

}({}));
//# sourceMappingURL=question.min.js.map
