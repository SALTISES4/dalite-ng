{"version":3,"file":"email.min.js","sources":["tos/static/tos/js/email.js"],"sourcesContent":["\"use strict\";\n\nfunction toggleButton(event) {\n  const container = event.currentTarget;\n  if (!container.classList.contains(\"btn-toggle--disabled\")) {\n    const buttons = container.getElementsByTagName(\"div\");\n    const checkbox = container.getElementsByTagName(\"input\")[0];\n    if (checkbox.checked) {\n      checkbox.checked = false;\n      buttons[0].classList.remove(\"btn-toggle--selected\");\n      buttons[1].classList.add(\"btn-toggle--selected\");\n    } else {\n      checkbox.checked = true;\n      buttons[0].classList.add(\"btn-toggle--selected\");\n      buttons[1].classList.remove(\"btn-toggle--selected\");\n    }\n  }\n}\n\nfunction toggleButtonAll(event) {\n  const container = event.currentTarget;\n  const checkbox = container.getElementsByTagName(\"input\")[0];\n  if (checkbox.checked) {\n    const toggleButtons = document.getElementsByClassName(\"btn-toggle\");\n    for (const i = 0; i < toggleButtons.length; i++) {\n      toggleButtons[i].classList.remove(\"btn-toggle--disabled\");\n    }\n  } else {\n    const toggleButtons = document.getElementsByClassName(\"btn-toggle\");\n    for (const i = 0; i < toggleButtons.length; i++) {\n      if (toggleButtons[i] != container) {\n        toggleButtons[i].classList.add(\"btn-toggle--disabled\");\n      }\n    }\n  }\n}\n\nArray.from(document.getElementsByClassName(\"btn-toggle\")).map(x =>\n  x.addEventListener(\"click\", e => toggleButton(e)),\n);\n\nconst toggleAll = document.getElementById(\"btn-toggle-all\");\nif (toggleAll) {\n  toggleAll.addEventListener(\"click\", e => toggleButtonAll(e));\n}\n"],"names":["toggleButton","event","container","currentTarget","classList","contains","buttons","getElementsByTagName","checkbox","checked","remove","add","toggleButtonAll","toggleButtons","document","getElementsByClassName","i","length","Array","from","map","x","addEventListener","e","toggleAll","getElementById"],"mappings":";;;AAAA;;AAEA,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;QACrBC,SAAS,GAAGD,KAAK,CAACE,aAAxB;;MACI,CAACD,SAAS,CAACE,SAAV,CAAoBC,QAApB,CAA6B,sBAA7B,CAAL,EAA2D;UACnDC,OAAO,GAAGJ,SAAS,CAACK,oBAAV,CAA+B,KAA/B,CAAhB;UACMC,QAAQ,GAAGN,SAAS,CAACK,oBAAV,CAA+B,OAA/B,EAAwC,CAAxC,CAAjB;;QACIC,QAAQ,CAACC,OAAb,EAAsB;MACpBD,QAAQ,CAACC,OAAT,GAAmB,KAAnB;MACAH,OAAO,CAAC,CAAD,CAAP,CAAWF,SAAX,CAAqBM,MAArB,CAA4B,sBAA5B;MACAJ,OAAO,CAAC,CAAD,CAAP,CAAWF,SAAX,CAAqBO,GAArB,CAAyB,sBAAzB;KAHF,MAIO;MACLH,QAAQ,CAACC,OAAT,GAAmB,IAAnB;MACAH,OAAO,CAAC,CAAD,CAAP,CAAWF,SAAX,CAAqBO,GAArB,CAAyB,sBAAzB;MACAL,OAAO,CAAC,CAAD,CAAP,CAAWF,SAAX,CAAqBM,MAArB,CAA4B,sBAA5B;;;;;AAKN,SAASE,eAAT,CAAyBX,KAAzB,EAAgC;QACxBC,SAAS,GAAGD,KAAK,CAACE,aAAxB;QACMK,QAAQ,GAAGN,SAAS,CAACK,oBAAV,CAA+B,OAA/B,EAAwC,CAAxC,CAAjB;;MACIC,QAAQ,CAACC,OAAb,EAAsB;UACdI,aAAa,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,YAAhC,CAAtB;;SACK,MAAMC,CAAC,GAAG,CAAf,EAAkBA,CAAC,GAAGH,aAAa,CAACI,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;MAC/CH,aAAa,CAACG,CAAD,CAAb,CAAiBZ,SAAjB,CAA2BM,MAA3B,CAAkC,sBAAlC;;GAHJ,MAKO;UACCG,aAAa,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,YAAhC,CAAtB;;SACK,MAAMC,CAAC,GAAG,CAAf,EAAkBA,CAAC,GAAGH,aAAa,CAACI,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;UAC3CH,aAAa,CAACG,CAAD,CAAb,IAAoBd,SAAxB,EAAmC;QACjCW,aAAa,CAACG,CAAD,CAAb,CAAiBZ,SAAjB,CAA2BO,GAA3B,CAA+B,sBAA/B;;;;;;AAMRO,KAAK,CAACC,IAAN,CAAWL,QAAQ,CAACC,sBAAT,CAAgC,YAAhC,CAAX,EAA0DK,GAA1D,CAA8DC,CAAC,IAC7DA,CAAC,CAACC,gBAAF,CAAmB,OAAnB,EAA4BC,CAAC,IAAIvB,YAAY,CAACuB,CAAD,CAA7C,CADF;AAIA,MAAMC,SAAS,GAAGV,QAAQ,CAACW,cAAT,CAAwB,gBAAxB,CAAlB;;AACA,IAAID,SAAJ,EAAe;EACbA,SAAS,CAACF,gBAAV,CAA2B,OAA3B,EAAoCC,CAAC,IAAIX,eAAe,CAACW,CAAD,CAAxD;;;;;","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9ob21lL2FudG9pbmUvZG9jdW1lbnRzL3dvcmsvc2NpdmVyby9wcm9qZWN0cy9kYWxpdGUvZGFsaXRlL3Rvcy9zdGF0aWMvdG9zL2pzL2VtYWlsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiB0b2dnbGVCdXR0b24oZXZlbnQpIHtcbiAgY29uc3QgY29udGFpbmVyID0gZXZlbnQuY3VycmVudFRhcmdldDtcbiAgaWYgKCFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYnRuLXRvZ2dsZS0tZGlzYWJsZWRcIikpIHtcbiAgICBjb25zdCBidXR0b25zID0gY29udGFpbmVyLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiZGl2XCIpO1xuICAgIGNvbnN0IGNoZWNrYm94ID0gY29udGFpbmVyLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07XG4gICAgaWYgKGNoZWNrYm94LmNoZWNrZWQpIHtcbiAgICAgIGNoZWNrYm94LmNoZWNrZWQgPSBmYWxzZTtcbiAgICAgIGJ1dHRvbnNbMF0uY2xhc3NMaXN0LnJlbW92ZShcImJ0bi10b2dnbGUtLXNlbGVjdGVkXCIpO1xuICAgICAgYnV0dG9uc1sxXS5jbGFzc0xpc3QuYWRkKFwiYnRuLXRvZ2dsZS0tc2VsZWN0ZWRcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNoZWNrYm94LmNoZWNrZWQgPSB0cnVlO1xuICAgICAgYnV0dG9uc1swXS5jbGFzc0xpc3QuYWRkKFwiYnRuLXRvZ2dsZS0tc2VsZWN0ZWRcIik7XG4gICAgICBidXR0b25zWzFdLmNsYXNzTGlzdC5yZW1vdmUoXCJidG4tdG9nZ2xlLS1zZWxlY3RlZFwiKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gdG9nZ2xlQnV0dG9uQWxsKGV2ZW50KSB7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG4gIGNvbnN0IGNoZWNrYm94ID0gY29udGFpbmVyLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF07XG4gIGlmIChjaGVja2JveC5jaGVja2VkKSB7XG4gICAgY29uc3QgdG9nZ2xlQnV0dG9ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJidG4tdG9nZ2xlXCIpO1xuICAgIGZvciAoY29uc3QgaSA9IDA7IGkgPCB0b2dnbGVCdXR0b25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0b2dnbGVCdXR0b25zW2ldLmNsYXNzTGlzdC5yZW1vdmUoXCJidG4tdG9nZ2xlLS1kaXNhYmxlZFwiKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgdG9nZ2xlQnV0dG9ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJidG4tdG9nZ2xlXCIpO1xuICAgIGZvciAoY29uc3QgaSA9IDA7IGkgPCB0b2dnbGVCdXR0b25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodG9nZ2xlQnV0dG9uc1tpXSAhPSBjb250YWluZXIpIHtcbiAgICAgICAgdG9nZ2xlQnV0dG9uc1tpXS5jbGFzc0xpc3QuYWRkKFwiYnRuLXRvZ2dsZS0tZGlzYWJsZWRcIik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkFycmF5LmZyb20oZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImJ0bi10b2dnbGVcIikpLm1hcCh4ID0+XG4gIHguYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGUgPT4gdG9nZ2xlQnV0dG9uKGUpKSxcbik7XG5cbmNvbnN0IHRvZ2dsZUFsbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnRuLXRvZ2dsZS1hbGxcIik7XG5pZiAodG9nZ2xlQWxsKSB7XG4gIHRvZ2dsZUFsbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiB0b2dnbGVCdXR0b25BbGwoZSkpO1xufVxuIl0sIm5hbWVzIjpbInRvZ2dsZUJ1dHRvbiIsImV2ZW50IiwiY29udGFpbmVyIiwiY3VycmVudFRhcmdldCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiYnV0dG9ucyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiY2hlY2tib3giLCJjaGVja2VkIiwicmVtb3ZlIiwiYWRkIiwidG9nZ2xlQnV0dG9uQWxsIiwidG9nZ2xlQnV0dG9ucyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImkiLCJsZW5ndGgiLCJBcnJheSIsImZyb20iLCJtYXAiLCJ4IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJ0b2dnbGVBbGwiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0FBRUEsU0FBU0EsWUFBVCxDQUFzQkMsS0FBdEIsRUFBNkI7UUFDckJDLFNBQVMsR0FBR0QsS0FBSyxDQUFDRSxhQUF4Qjs7TUFDSSxDQUFDRCxTQUFTLENBQUNFLFNBQVYsQ0FBb0JDLFFBQXBCLENBQTZCLHNCQUE3QixDQUFMLEVBQTJEO1VBQ25EQyxPQUFPLEdBQUdKLFNBQVMsQ0FBQ0ssb0JBQVYsQ0FBK0IsS0FBL0IsQ0FBaEI7VUFDTUMsUUFBUSxHQUFHTixTQUFTLENBQUNLLG9CQUFWLENBQStCLE9BQS9CLEVBQXdDLENBQXhDLENBQWpCOztRQUNJQyxRQUFRLENBQUNDLE9BQWIsRUFBc0I7TUFDcEJELFFBQVEsQ0FBQ0MsT0FBVCxHQUFtQixLQUFuQjtNQUNBSCxPQUFPLENBQUMsQ0FBRCxDQUFQLENBQVdGLFNBQVgsQ0FBcUJNLE1BQXJCLENBQTRCLHNCQUE1QjtNQUNBSixPQUFPLENBQUMsQ0FBRCxDQUFQLENBQVdGLFNBQVgsQ0FBcUJPLEdBQXJCLENBQXlCLHNCQUF6QjtLQUhGLE1BSU87TUFDTEgsUUFBUSxDQUFDQyxPQUFULEdBQW1CLElBQW5CO01BQ0FILE9BQU8sQ0FBQyxDQUFELENBQVAsQ0FBV0YsU0FBWCxDQUFxQk8sR0FBckIsQ0FBeUIsc0JBQXpCO01BQ0FMLE9BQU8sQ0FBQyxDQUFELENBQVAsQ0FBV0YsU0FBWCxDQUFxQk0sTUFBckIsQ0FBNEIsc0JBQTVCOzs7OztBQUtOLFNBQVNFLGVBQVQsQ0FBeUJYLEtBQXpCLEVBQWdDO1FBQ3hCQyxTQUFTLEdBQUdELEtBQUssQ0FBQ0UsYUFBeEI7UUFDTUssUUFBUSxHQUFHTixTQUFTLENBQUNLLG9CQUFWLENBQStCLE9BQS9CLEVBQXdDLENBQXhDLENBQWpCOztNQUNJQyxRQUFRLENBQUNDLE9BQWIsRUFBc0I7VUFDZEksYUFBYSxHQUFHQyxRQUFRLENBQUNDLHNCQUFULENBQWdDLFlBQWhDLENBQXRCOztTQUNLLE1BQU1DLENBQUMsR0FBRyxDQUFmLEVBQWtCQSxDQUFDLEdBQUdILGFBQWEsQ0FBQ0ksTUFBcEMsRUFBNENELENBQUMsRUFBN0MsRUFBaUQ7TUFDL0NILGFBQWEsQ0FBQ0csQ0FBRCxDQUFiLENBQWlCWixTQUFqQixDQUEyQk0sTUFBM0IsQ0FBa0Msc0JBQWxDOztHQUhKLE1BS087VUFDQ0csYUFBYSxHQUFHQyxRQUFRLENBQUNDLHNCQUFULENBQWdDLFlBQWhDLENBQXRCOztTQUNLLE1BQU1DLENBQUMsR0FBRyxDQUFmLEVBQWtCQSxDQUFDLEdBQUdILGFBQWEsQ0FBQ0ksTUFBcEMsRUFBNENELENBQUMsRUFBN0MsRUFBaUQ7VUFDM0NILGFBQWEsQ0FBQ0csQ0FBRCxDQUFiLElBQW9CZCxTQUF4QixFQUFtQztRQUNqQ1csYUFBYSxDQUFDRyxDQUFELENBQWIsQ0FBaUJaLFNBQWpCLENBQTJCTyxHQUEzQixDQUErQixzQkFBL0I7Ozs7OztBQU1STyxLQUFLLENBQUNDLElBQU4sQ0FBV0wsUUFBUSxDQUFDQyxzQkFBVCxDQUFnQyxZQUFoQyxDQUFYLEVBQTBESyxHQUExRCxDQUE4REMsQ0FBQyxJQUM3REEsQ0FBQyxDQUFDQyxnQkFBRixDQUFtQixPQUFuQixFQUE0QkMsQ0FBQyxJQUFJdkIsWUFBWSxDQUFDdUIsQ0FBRCxDQUE3QyxDQURGO0FBSUEsTUFBTUMsU0FBUyxHQUFHVixRQUFRLENBQUNXLGNBQVQsQ0FBd0IsZ0JBQXhCLENBQWxCOztBQUNBLElBQUlELFNBQUosRUFBZTtFQUNiQSxTQUFTLENBQUNGLGdCQUFWLENBQTJCLE9BQTNCLEVBQW9DQyxDQUFDLElBQUlYLGVBQWUsQ0FBQ1csQ0FBRCxDQUF4RDs7Ozs7In0="}