{"version":3,"file":"teacher.min.js","sources":["../../../../../peerinst/static/peerinst/js/ajax.js","header.js","teacher.js","../../../../../peerinst/static/peerinst/js/utils.js"],"sourcesContent":["\"use strict\";\n\nexport function getCsrfToken() {\n  return document\n    .getElementsByName(\"csrfmiddlewaretoken\")[0]\n    .getAttribute(\"value\");\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n\nexport function updateAssignmentQuestionList(\n  url,\n  questionId,\n  assignmentIdentifier,\n) {\n  const token = getCsrfToken();\n  const data = {\n    question_id: questionId,\n    assignment_identifier: assignmentIdentifier,\n  };\n  const req = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": token,\n    },\n  };\n  fetch(url, req)\n    .then(function (resp) {\n      if (!resp.ok) {\n        console.log(resp);\n      } else {\n        // Manipulate DOM\n        const list = document.getElementById(\"question-list\");\n        const card = document.getElementById(questionId);\n        if ($.contains(list, card)) {\n          $(\"#\" + questionId).remove();\n        } else {\n          $(\"#\" + questionId)\n            .find($(\".update-questions-btn\"))\n            .html(\"delete\");\n          const q = $(\"#\" + questionId).detach();\n          q.appendTo($(\"#question-list\"));\n          $(\"#empty-assignment-list\").remove();\n          $(\".search-set\").each(function () {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count\")\n              .empty()\n              .append($(this).find(\".mdc-card:visible\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n          $(\".search-set\").each(function () {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count-total\")\n              .empty()\n              .append($(this).find(\".mdc-card\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n        }\n      }\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n}\n","export class ReputationHeader extends HTMLElement {\n  static get observedAttributes() {\n    // Any change to stale attribute should fire a refresh event\n    return [\"stale\"];\n  }\n\n  get reputationUrl(): string {\n    const url = this.getAttribute(\"reputation-url\");\n    if (!url) {\n      throw new Error(\n        \"The reputation-header needs a `reputation-url` attribute\",\n      );\n    }\n    return url;\n  }\n  get reputationStyleUrl(): string {\n    const style = this.getAttribute(\"reputation-style-url\");\n    if (!style) {\n      throw new Error(\n        \"The reputation-header needs a `reputation-style-url` attribute\",\n      );\n    }\n    return style;\n  }\n  get reputationId(): string {\n    const id = this.getAttribute(\"reputation-id\");\n    if (!id) {\n      throw new Error(\n        \"The reputation-header needs a `reputation-id` attribute\",\n      );\n    }\n    return id;\n  }\n  get nonce_(): string {\n    const nonce = this.getAttribute(\"nonce\") || this.nonce;\n    if (!nonce) {\n      throw new Error(\n        \"The teacher-reputation-header needs a `nonce` attribute\",\n      );\n    }\n    return nonce;\n  }\n  get hidden() {\n    return this.hasAttribute(\"hidden\");\n  }\n  get open() {\n    return this.hasAttribute(\"open\");\n  }\n  set hidden(val: boolean) {\n    if (val) {\n      this.setAttribute(\"hidden\", \"\");\n    } else {\n      this.removeAttribute(\"hidden\");\n    }\n  }\n  set open(val: boolean) {\n    if (val) {\n      this.setAttribute(\"open\", \"\");\n    } else {\n      this.removeAttribute(\"open\");\n    }\n  }\n\n  constructor() {\n    super();\n\n    const shadow = this.attachShadow({ mode: \"open\" });\n\n    this.hidden = true;\n\n    this.init(shadow);\n  }\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    if (attrName === \"stale\") {\n      this.update();\n    }\n  }\n}\n","// @flow\n\"use strict\";\nimport { buildReq } from \"../../../../../peerinst/static/peerinst/js/ajax.js\";\nimport { clear } from \"../../../../../peerinst/static/peerinst/js/utils.js\";\nimport { ReputationHeader } from \"./header.js\";\n\nclass TeacherReputationHeader extends ReputationHeader {\n  async init(shadow: ShadowRoot) {\n    /*********/\n    /* model */\n    /*********/\n\n    type Reputation = {\n      name: string,\n      description: string,\n      reputation: number,\n    };\n\n    type Model = {\n      id: number,\n      element: TeacherReputationHeader,\n      reputation: ?number,\n      reputationType: string,\n      reputationUrl: string,\n      reputations: Array<Reputation>,\n      shadow: ShadowRoot,\n    };\n\n    const model: Model = {\n      id: parseInt(this.reputationId),\n      element: this,\n      reputation: null,\n      reputationStyleUrl: this.reputationStyleUrl,\n      reputationType: \"teacher\",\n      reputationUrl: this.reputationUrl,\n      reputations: [],\n      shadow: shadow,\n    };\n\n    /**********/\n    /* update */\n    /**********/\n    this.update = update;\n\n    async function update() {\n      await getReputation();\n      if (model.reputation !== null) {\n        model.element.hidden = false;\n      }\n    }\n\n    async function getReputation() {\n      const postData = {\n        reputation_type: model.reputationType,\n        id: model.id,\n      };\n      const req = buildReq(postData, \"post\");\n      const resp = await fetch(model.reputationUrl, req);\n      const data = await resp.json();\n      model.reputation = data.reputation;\n      model.reputations = data.reputations.map((reputation) => ({\n        name: reputation.full_name,\n        description: reputation.description,\n        reputation: reputation.reputation,\n      }));\n      iconView();\n      listView();\n    }\n\n    function toggleReputationList() {\n      const header = model.element;\n      document\n        .querySelectorAll(\".header--togglable > *\")\n        .forEach((header_) => {\n          if (header_ != header && header_.hasAttribute(\"open\")) {\n            if (header_.shadowRoot) {\n              header_.shadowRoot\n                .querySelector(\".header__icon\")\n                .dispatchEvent(new Event(\"click\"));\n            } else {\n              header_\n                .querySelector(\".header__icon\")\n                .dispatchEvent(new Event(\"click\"));\n            }\n          }\n        });\n      model.element.open = !model.element.open;\n      iconView();\n      listView();\n    }\n\n    /********/\n    /* view */\n    /********/\n\n    function view() {\n      shadow.appendChild(styleView());\n\n      const container = document.createElement(\"div\");\n      container.id = \"container\";\n      shadow.appendChild(container);\n\n      container.appendChild(iconView());\n      container.appendChild(listView());\n    }\n\n    function iconView() {\n      // $FlowFixMe\n      let icon = shadow.getElementById(\"icon\");\n\n      if (!icon) {\n        icon = document.createElement(\"div\");\n        icon.id = \"icon\";\n        icon.classList.add(\"header__icon\");\n        icon.title = \"Reputation\";\n        icon.addEventListener(\"click\", (event: MouseEvent) => {\n          event.stopPropagation();\n          toggleReputationList();\n        });\n\n        const star = document.createElement(\"i\");\n        star.id = \"icon__icon\";\n        star.textContent = \"star\";\n        icon.appendChild(star);\n\n        const span = document.createElement(\"span\");\n        span.id = \"icon__reputation\";\n        if (model.reputation !== null && model.reputation !== undefined) {\n          span.textContent = model.reputation.toString();\n        }\n        icon.appendChild(span);\n\n        // $FlowFixMe\n        document.body?.addEventListener(\"click\", (event: MouseEvent) => {\n          if (model.element.open) {\n            toggleReputationList();\n          }\n        });\n      } else {\n        if (model.reputation !== null && model.reputation !== undefined) {\n          // $FlowFixMe\n          shadow.getElementById(\n            \"icon__reputation\",\n          ).textContent = model.reputation.toString();\n        }\n      }\n\n      return icon;\n    }\n\n    function listView() {\n      // $FlowFixMe\n      let list = shadow.getElementById(\"list\");\n      if (!list) {\n        list = document.createElement(\"div\");\n        list.id = \"list\";\n        list.addEventListener(\"click\", (event: MouseEvent) => {\n          event.stopPropagation();\n        });\n      }\n\n      clear(list);\n\n      headerView(list);\n\n      model.reputations.forEach((reputation) => {\n        reputationView(list, reputation);\n      });\n\n      return list;\n    }\n\n    function headerView(list: HTMLElement) {\n      const name = document.createElement(\"div\");\n      name.classList.add(\"list__header\");\n      name.textContent = \"Name\";\n      list.appendChild(name);\n\n      const rep = document.createElement(\"div\");\n      rep.classList.add(\"list__header\");\n      rep.textContent = \"Reputation\";\n      list.appendChild(rep);\n    }\n\n    function reputationView(list: HTMLElement, reputation: Reputation) {\n      const name = document.createElement(\"div\");\n      name.classList.add(\"list__name\");\n      name.textContent = `${reputation.name}`;\n      name.title = reputation.description;\n      list.appendChild(name);\n\n      const rep = document.createElement(\"div\");\n      rep.classList.add(\"list__reputation\");\n      rep.textContent = (\n        Math.round(reputation.reputation * 100) / 100\n      ).toString();\n      list.appendChild(rep);\n    }\n\n    function styleView() {\n      const style = document.createElement(\"link\");\n      style.setAttribute(\"href\", model.reputationStyleUrl);\n      style.setAttribute(\"rel\", \"stylesheet\");\n      style.setAttribute(\"nonce\", model.element.nonce_);\n      return style;\n    }\n\n    /********/\n    /* init */\n    /********/\n\n    view();\n    await update();\n  }\n}\n\nif (!customElements.get(\"teacher-reputation-header\")) {\n  customElements.define(\"teacher-reputation-header\", TeacherReputationHeader);\n}\n","// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string, useSprite: boolean = true): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  use.setAttributeNS(\n    \"http://www.w3.org/1999/xlink\",\n    \"href\",\n    svgLink(name, useSprite),\n  );\n  svg.append(use);\n  return svg;\n}\n\nexport function svgLink(name: string, useSprite: boolean = true): string {\n  if (useSprite) {\n    return `#${name}`;\n  } else {\n    return (\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      \"/static/peerinst/icons.svg#\" +\n      name\n    );\n  }\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n\nexport function createElement(tag, text = \"\", attributes = {}) {\n  const elem = document.createElement(tag);\n  if (text) {\n    elem.textContent = text;\n  }\n  Object.entries(attributes).forEach(([key, val]) => {\n    elem.setAttribute(key, val);\n  });\n  return elem;\n}\n"],"names":["getCsrfToken","document","getElementsByName","getAttribute","ReputationHeader","HTMLElement","url","this","Error","style","id","nonce","hasAttribute","val","setAttribute","removeAttribute","constructor","shadow","attachShadow","mode","hidden","init","attributeChangedCallback","attrName","oldVal","newVal","update","TeacherReputationHeader","model","parseInt","reputationId","element","reputation","reputationStyleUrl","reputationType","reputationUrl","reputations","req","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","buildReq","reputation_type","resp","fetch","json","map","name","full_name","description","iconView","listView","getReputation","toggleReputationList","header","querySelectorAll","forEach","header_","shadowRoot","querySelector","dispatchEvent","Event","open","icon","getElementById","undefined","textContent","toString","createElement","classList","add","title","addEventListener","event","stopPropagation","star","appendChild","span","list","node","hasChildNodes","removeChild","lastChild","clear","rep","headerView","Math","round","reputationView","nonce_","styleView","container","view","customElements","get","define"],"mappings":"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"}