<<<<<<< HEAD
{"version":3,"file":"teacher.min.js","sources":["peerinst/static/peerinst/js/ajax.js","peerinst/static/peerinst/js/utils.js","reputation/static/reputation/js/header/header.js","reputation/static/reputation/js/header/teacher.js"],"sourcesContent":["\"use strict\";\n\nexport function getCsrfToken() {\n  return document\n    .getElementsByName(\"csrfmiddlewaretoken\")[0]\n    .getAttribute(\"value\");\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n\nexport function updateAssignmentQuestionList(\n  url,\n  questionId,\n  assignmentIdentifier,\n) {\n  const token = getCsrfToken();\n  const data = {\n    question_id: questionId,\n    assignment_identifier: assignmentIdentifier,\n  };\n  const req = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": token,\n    },\n  };\n  fetch(url, req)\n    .then(function(resp) {\n      if (!resp.ok) {\n        console.log(resp);\n      } else {\n        // Manipulate DOM\n        const list = document.getElementById(\"question-list\");\n        const card = document.getElementById(questionId);\n        if ($.contains(list, card)) {\n          $(\"#\" + questionId).remove();\n        } else {\n          $(\"#\" + questionId)\n            .find($(\"button\"))\n            .html(\"clear\");\n          $(\"#\" + questionId).find($(\".stats\").remove());\n          const q = $(\"#\" + questionId).detach();\n          q.appendTo($(\"#question-list\"));\n          $(\"#empty-assignment-list\").remove();\n          $(\".search-set\").each(function() {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count\")\n              .empty()\n              .append($(this).find(\".mdc-card:visible\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n          $(\".search-set\").each(function() {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count-total\")\n              .empty()\n              .append($(this).find(\".mdc-card\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n        }\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n","// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string, useSprite: boolean = true): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  use.setAttributeNS(\n    \"http://www.w3.org/1999/xlink\",\n    \"href\",\n    svgLink(name, useSprite),\n  );\n  svg.append(use);\n  return svg;\n}\n\nexport function svgLink(name: string, useSprite: boolean = true): string {\n  if (useSprite) {\n    return `#${name}`;\n  } else {\n    return (\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      \"/static/peerinst/icons.svg#\" +\n      name\n    );\n  }\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n","export class ReputationHeader extends HTMLElement {\n  get reputationUrl(): string {\n    const url = this.getAttribute(\"reputation-url\");\n    if (!url) {\n      throw new Error(\n        \"The reputation-header needs a `reputation-url` attribute\",\n      );\n    }\n    return url;\n  }\n  get reputationId(): string {\n    const id = this.getAttribute(\"reputation-id\");\n    if (!id) {\n      throw new Error(\n        \"The reputation-header needs a `reputation-id` attribute\",\n      );\n    }\n    return id;\n  }\n  get nonce_(): string {\n    const nonce = this.getAttribute(\"nonce\") || this.nonce;\n    if (!nonce) {\n      throw new Error(\n        \"The teacher-reputation-header needs a `nonce` attribute\",\n      );\n    }\n    return nonce;\n  }\n  get hidden() {\n    return this.hasAttribute(\"hidden\");\n  }\n  get open() {\n    return this.hasAttribute(\"open\");\n  }\n  set hidden(val: boolean) {\n    if (val) {\n      this.setAttribute(\"hidden\", \"\");\n    } else {\n      this.removeAttribute(\"hidden\");\n    }\n  }\n  set open(val: boolean) {\n    if (val) {\n      this.setAttribute(\"open\", \"\");\n    } else {\n      this.removeAttribute(\"open\");\n    }\n  }\n\n  constructor() {\n    super();\n\n    const shadow = this.attachShadow({ mode: \"open\" });\n\n    this.hidden = true;\n\n    this.init(shadow);\n  }\n}\n","// @flow\n\"use strict\";\nimport { buildReq } from \"../../../../../peerinst/static/peerinst/js/ajax.js\";\nimport {\n  clear,\n  createSvg,\n} from \"../../../../../peerinst/static/peerinst/js/utils.js\";\nimport { ReputationHeader } from \"./header.js\";\n\nclass TeacherReputationHeader extends ReputationHeader {\n  async init(shadow: ShadowRoot) {\n    /*********/\n    /* model */\n    /*********/\n\n    type Reputation = {\n      name: string,\n      description: string,\n      reputation: number,\n    };\n\n    type Model = {\n      id: number,\n      element: TeacherReputationHeader,\n      reputation: ?number,\n      reputationType: string,\n      reputationUrl: string,\n      reputations: Array<Reputation>,\n      shadow: ShadowRoot,\n    };\n\n    const model: Model = {\n      id: parseInt(this.reputationId),\n      element: this,\n      reputation: null,\n      reputationType: \"teacher\",\n      reputationUrl: this.reputationUrl,\n      reputations: [],\n      shadow: shadow,\n    };\n\n    /**********/\n    /* update */\n    /**********/\n\n    async function update() {\n      await getReputation();\n      if (model.reputation !== null) {\n        model.element.hidden = false;\n      }\n    }\n\n    async function getReputation() {\n      const postData = {\n        reputation_type: model.reputationType,\n        id: model.id,\n      };\n      const req = buildReq(postData, \"post\");\n      const resp = await fetch(model.reputationUrl, req);\n      const data = await resp.json();\n      model.reputation = data.reputation;\n      model.reputations = data.reputations.map(reputation => ({\n        name: reputation.full_name,\n        description: reputation.description,\n        reputation: reputation.reputation,\n      }));\n      iconView();\n      listView();\n    }\n\n    function toggleReputationList() {\n      model.element.open = !model.element.open;\n      iconView();\n      listView();\n    }\n\n    /********/\n    /* view */\n    /********/\n\n    function view() {\n      shadow.appendChild(styleView());\n\n      const container = document.createElement(\"div\");\n      container.id = \"container\";\n      shadow.appendChild(container);\n\n      container.appendChild(iconView());\n      container.appendChild(listView());\n    }\n\n    function iconView() {\n      // $FlowFixMe\n      let icon = shadow.getElementById(\"icon\");\n\n      if (!icon) {\n        icon = document.createElement(\"div\");\n        icon.id = \"icon\";\n        icon.title = \"Reputation\";\n        icon.addEventListener(\"click\", (event: MouseEvent) => {\n          event.stopPropagation();\n          toggleReputationList();\n        });\n\n        const star = createSvg(\"star\", false);\n        star.id = \"icon__icon\";\n        icon.appendChild(star);\n\n        const span = document.createElement(\"span\");\n        span.id = \"icon__reputation\";\n        if (model.reputation !== null && model.reputation !== undefined) {\n          span.textContent = model.reputation.toString();\n        }\n        icon.appendChild(span);\n\n        // $FlowFixMe\n        document.body?.addEventListener(\"click\", (event: MouseEvent) => {\n          if (model.element.open) {\n            toggleReputationList();\n          }\n        });\n      } else {\n        if (model.reputation !== null && model.reputation !== undefined) {\n          // $FlowFixMe\n          shadow.getElementById(\n            \"icon__reputation\",\n          ).textContent = model.reputation.toString();\n        }\n      }\n\n      return icon;\n    }\n\n    function listView() {\n      // $FlowFixMe\n      let list = shadow.getElementById(\"list\");\n      if (!list) {\n        list = document.createElement(\"div\");\n        list.id = \"list\";\n        list.addEventListener(\"click\", (event: MouseEvent) => {\n          event.stopPropagation();\n        });\n      }\n\n      clear(list);\n\n      headerView(list);\n\n      model.reputations.forEach(reputation => {\n        reputationView(list, reputation);\n      });\n\n      return list;\n    }\n\n    function headerView(list: HTMLElement) {\n      const name = document.createElement(\"div\");\n      name.classList.add(\"list__header\");\n      name.textContent = \"Name\";\n      list.appendChild(name);\n\n      const rep = document.createElement(\"div\");\n      rep.classList.add(\"list__header\");\n      rep.textContent = \"Reputation\";\n      list.appendChild(rep);\n    }\n\n    function reputationView(list: HTMLElement, reputation: Reputation) {\n      const name = document.createElement(\"div\");\n      name.classList.add(\"list__name\");\n      name.textContent = `${reputation.name}`;\n      name.title = reputation.description;\n      list.appendChild(name);\n\n      const rep = document.createElement(\"div\");\n      rep.classList.add(\"list__reputation\");\n      rep.textContent = (\n        Math.round(reputation.reputation * 100) / 100\n      ).toString();\n      list.appendChild(rep);\n    }\n\n    function styleView() {\n      const style = document.createElement(\"link\");\n      style.setAttribute(\n        \"href\",\n        window.location.protocol +\n          \"//\" +\n          window.location.host +\n          \"/static/reputation/css/header/teacher.min.css\",\n      );\n      style.setAttribute(\"rel\", \"stylesheet\");\n      style.setAttribute(\"nonce\", model.element.nonce_);\n      return style;\n    }\n\n    /********/\n    /* init */\n    /********/\n\n    view();\n    await update();\n  }\n}\n\nif (!customElements.get(\"teacher-reputation-header\")) {\n  customElements.define(\"teacher-reputation-header\", TeacherReputationHeader);\n}\n"],"names":["getCsrfToken","document","getElementsByName","getAttribute","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","clear","node","hasChildNodes","removeChild","lastChild","createSvg","name","useSprite","svg","createElementNS","use","setAttributeNS","svgLink","append","window","location","protocol","host","ReputationHeader","url","id","nonce","hasAttribute","val","setAttribute","removeAttribute","shadow","attachShadow","mode","hidden","init","HTMLElement","TeacherReputationHeader","model","parseInt","reputationId","element","reputation","reputationType","reputationUrl","reputations","update","getReputation","postData","reputation_type","req","resp","fetch","json","map","full_name","description","iconView","listView","toggleReputationList","open","view","appendChild","styleView","container","createElement","icon","getElementById","title","addEventListener","event","stopPropagation","star","span","undefined","textContent","toString","list","headerView","forEach","reputationView","classList","add","rep","Math","round","style","nonce_","customElements","get","define"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
=======
{"version":3,"file":"teacher.min.js","sources":["peerinst/static/peerinst/js/ajax.js","peerinst/static/peerinst/js/utils.js","reputation/static/reputation/js/header/header.js","reputation/static/reputation/js/header/teacher.js"],"sourcesContent":["\"use strict\";\n\nexport function getCsrfToken() {\n  return document\n    .getElementsByName(\"csrfmiddlewaretoken\")[0]\n    .getAttribute(\"value\");\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n\nexport function updateAssignmentQuestionList(\n  url,\n  questionId,\n  assignmentIdentifier,\n) {\n  const token = getCsrfToken();\n  const data = {\n    question_id: questionId,\n    assignment_identifier: assignmentIdentifier,\n  };\n  const req = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": token,\n    },\n  };\n  fetch(url, req)\n    .then(function(resp) {\n      if (!resp.ok) {\n        console.log(resp);\n      } else {\n        // Manipulate DOM\n        const list = document.getElementById(\"question-list\");\n        const card = document.getElementById(questionId);\n        if ($.contains(list, card)) {\n          $(\"#\" + questionId).remove();\n        } else {\n          $(\"#\" + questionId)\n            .find($(\".update-questions-btn\"))\n            .html(\"delete\");\n          const q = $(\"#\" + questionId).detach();\n          q.appendTo($(\"#question-list\"));\n          $(\"#empty-assignment-list\").remove();\n          $(\".search-set\").each(function() {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count\")\n              .empty()\n              .append($(this).find(\".mdc-card:visible\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n          $(\".search-set\").each(function() {\n            $(this) // eslint-disable-line no-invalid-this\n              .find(\".filter-count-total\")\n              .empty()\n              .append($(this).find(\".mdc-card\").length); // eslint-disable-line no-invalid-this,max-len\n          });\n        }\n      }\n    })\n    .catch(function(err) {\n      console.log(err);\n    });\n}\n","// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string, useSprite: boolean = true): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  use.setAttributeNS(\n    \"http://www.w3.org/1999/xlink\",\n    \"href\",\n    svgLink(name, useSprite),\n  );\n  svg.append(use);\n  return svg;\n}\n\nexport function svgLink(name: string, useSprite: boolean = true): string {\n  if (useSprite) {\n    return `#${name}`;\n  } else {\n    return (\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      \"/static/peerinst/icons.svg#\" +\n      name\n    );\n  }\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n","export class ReputationHeader extends HTMLElement {\n  get reputationUrl(): string {\n    const url = this.getAttribute(\"reputation-url\");\n    if (!url) {\n      throw new Error(\n        \"The reputation-header needs a `reputation-url` attribute\",\n      );\n    }\n    return url;\n  }\n  get reputationId(): string {\n    const id = this.getAttribute(\"reputation-id\");\n    if (!id) {\n      throw new Error(\n        \"The reputation-header needs a `reputation-id` attribute\",\n      );\n    }\n    return id;\n  }\n  get nonce_(): string {\n    const nonce = this.getAttribute(\"nonce\") || this.nonce;\n    if (!nonce) {\n      throw new Error(\n        \"The teacher-reputation-header needs a `nonce` attribute\",\n      );\n    }\n    return nonce;\n  }\n  get hidden() {\n    return this.hasAttribute(\"hidden\");\n  }\n  get open() {\n    return this.hasAttribute(\"open\");\n  }\n  set hidden(val: boolean) {\n    if (val) {\n      this.setAttribute(\"hidden\", \"\");\n    } else {\n      this.removeAttribute(\"hidden\");\n    }\n  }\n  set open(val: boolean) {\n    if (val) {\n      this.setAttribute(\"open\", \"\");\n    } else {\n      this.removeAttribute(\"open\");\n    }\n  }\n\n  constructor() {\n    super();\n\n    const shadow = this.attachShadow({ mode: \"open\" });\n\n    this.hidden = true;\n\n    this.init(shadow);\n  }\n}\n","// @flow\n\"use strict\";\nimport { buildReq } from \"../../../../../peerinst/static/peerinst/js/ajax.js\";\nimport {\n  clear,\n  createSvg,\n} from \"../../../../../peerinst/static/peerinst/js/utils.js\";\nimport { ReputationHeader } from \"./header.js\";\n\nclass TeacherReputationHeader extends ReputationHeader {\n  async init(shadow: ShadowRoot) {\n    /*********/\n    /* model */\n    /*********/\n\n    type Reputation = {\n      name: string,\n      description: string,\n      reputation: number,\n    };\n\n    type Model = {\n      id: number,\n      element: TeacherReputationHeader,\n      reputation: ?number,\n      reputationType: string,\n      reputationUrl: string,\n      reputations: Array<Reputation>,\n      shadow: ShadowRoot,\n    };\n\n    const model: Model = {\n      id: parseInt(this.reputationId),\n      element: this,\n      reputation: null,\n      reputationType: \"teacher\",\n      reputationUrl: this.reputationUrl,\n      reputations: [],\n      shadow: shadow,\n    };\n\n    /**********/\n    /* update */\n    /**********/\n\n    async function update() {\n      await getReputation();\n      if (model.reputation !== null) {\n        model.element.hidden = false;\n      }\n    }\n\n    async function getReputation() {\n      const postData = {\n        reputation_type: model.reputationType,\n        id: model.id,\n      };\n      const req = buildReq(postData, \"post\");\n      const resp = await fetch(model.reputationUrl, req);\n      const data = await resp.json();\n      model.reputation = data.reputation;\n      model.reputations = data.reputations.map(reputation => ({\n        name: reputation.full_name,\n        description: reputation.description,\n        reputation: reputation.reputation,\n      }));\n      iconView();\n      listView();\n    }\n\n    function toggleReputationList() {\n      model.element.open = !model.element.open;\n      iconView();\n      listView();\n    }\n\n    /********/\n    /* view */\n    /********/\n\n    function view() {\n      shadow.appendChild(styleView());\n\n      const container = document.createElement(\"div\");\n      container.id = \"container\";\n      shadow.appendChild(container);\n\n      container.appendChild(iconView());\n      container.appendChild(listView());\n    }\n\n    function iconView() {\n      // $FlowFixMe\n      let icon = shadow.getElementById(\"icon\");\n\n      if (!icon) {\n        icon = document.createElement(\"div\");\n        icon.id = \"icon\";\n        icon.title = \"Reputation\";\n        icon.addEventListener(\"click\", (event: MouseEvent) => {\n          event.stopPropagation();\n          toggleReputationList();\n        });\n\n        const star = createSvg(\"star\", false);\n        star.id = \"icon__icon\";\n        icon.appendChild(star);\n\n        const span = document.createElement(\"span\");\n        span.id = \"icon__reputation\";\n        if (model.reputation !== null && model.reputation !== undefined) {\n          span.textContent = model.reputation.toString();\n        }\n        icon.appendChild(span);\n\n        // $FlowFixMe\n        document.body?.addEventListener(\"click\", (event: MouseEvent) => {\n          if (model.element.open) {\n            toggleReputationList();\n          }\n        });\n      } else {\n        if (model.reputation !== null && model.reputation !== undefined) {\n          // $FlowFixMe\n          shadow.getElementById(\n            \"icon__reputation\",\n          ).textContent = model.reputation.toString();\n        }\n      }\n\n      return icon;\n    }\n\n    function listView() {\n      // $FlowFixMe\n      let list = shadow.getElementById(\"list\");\n      if (!list) {\n        list = document.createElement(\"div\");\n        list.id = \"list\";\n        list.addEventListener(\"click\", (event: MouseEvent) => {\n          event.stopPropagation();\n        });\n      }\n\n      clear(list);\n\n      headerView(list);\n\n      model.reputations.forEach(reputation => {\n        reputationView(list, reputation);\n      });\n\n      return list;\n    }\n\n    function headerView(list: HTMLElement) {\n      const name = document.createElement(\"div\");\n      name.classList.add(\"list__header\");\n      name.textContent = \"Name\";\n      list.appendChild(name);\n\n      const rep = document.createElement(\"div\");\n      rep.classList.add(\"list__header\");\n      rep.textContent = \"Reputation\";\n      list.appendChild(rep);\n    }\n\n    function reputationView(list: HTMLElement, reputation: Reputation) {\n      const name = document.createElement(\"div\");\n      name.classList.add(\"list__name\");\n      name.textContent = `${reputation.name}`;\n      name.title = reputation.description;\n      list.appendChild(name);\n\n      const rep = document.createElement(\"div\");\n      rep.classList.add(\"list__reputation\");\n      rep.textContent = (\n        Math.round(reputation.reputation * 100) / 100\n      ).toString();\n      list.appendChild(rep);\n    }\n\n    function styleView() {\n      const style = document.createElement(\"link\");\n      style.setAttribute(\n        \"href\",\n        window.location.protocol +\n          \"//\" +\n          window.location.host +\n          \"/static/reputation/css/header/teacher.min.css\",\n      );\n      style.setAttribute(\"rel\", \"stylesheet\");\n      style.setAttribute(\"nonce\", model.element.nonce_);\n      return style;\n    }\n\n    /********/\n    /* init */\n    /********/\n\n    view();\n    await update();\n  }\n}\n\nif (!customElements.get(\"teacher-reputation-header\")) {\n  customElements.define(\"teacher-reputation-header\", TeacherReputationHeader);\n}\n"],"names":["getCsrfToken","document","getElementsByName","getAttribute","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","clear","node","hasChildNodes","removeChild","lastChild","createSvg","name","useSprite","svg","createElementNS","use","setAttributeNS","svgLink","append","window","location","protocol","host","ReputationHeader","url","id","nonce","hasAttribute","val","setAttribute","removeAttribute","shadow","attachShadow","mode","hidden","init","HTMLElement","TeacherReputationHeader","model","parseInt","reputationId","element","reputation","reputationType","reputationUrl","reputations","update","getReputation","postData","reputation_type","req","resp","fetch","json","map","full_name","description","iconView","listView","toggleReputationList","open","view","appendChild","styleView","container","createElement","icon","getElementById","title","addEventListener","event","stopPropagation","star","span","undefined","textContent","toString","list","headerView","forEach","reputationView","classList","add","rep","Math","round","style","nonce_","customElements","get","define"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
>>>>>>> development
