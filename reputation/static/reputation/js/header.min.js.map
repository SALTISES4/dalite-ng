{"version":3,"file":"header.min.js","sources":["peerinst/static/peerinst/js/ajax.js","peerinst/static/peerinst/js/utils.js","reputation/static/reputation/js/header.js"],"sourcesContent":["export function getCsrfToken() {\n  return document\n    .getElementsByName(\"csrfmiddlewaretoken\")[0]\n    .getAttribute(\"value\");\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n","// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  use.setAttributeNS(\n    \"http://www.w3.org/1999/xlink\",\n    \"href\",\n    window.location.protocol +\n      \"//\" +\n      window.location.host +\n      \"/static/peerinst/icons.svg#\" +\n      name,\n  );\n  svg.append(use);\n  return svg;\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n","\"use strict\";\n\nimport { buildReq } from \"../../../../peerinst/static/peerinst/js/ajax.js\";\nimport { clear } from \"../../../../peerinst/static/peerinst/js/utils.js\";\n\n/*********/\n/* model */\n/*********/\n\nlet model;\n\nfunction initModel(reputationUrl, reputationType, id) {\n  model = {\n    reputationListOpen: false,\n    reputationUrl: reputationUrl,\n    reputationType: reputationType,\n    id: id,\n    reputation: null,\n    reputations: [],\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nasync function update() {\n  await getReputation();\n}\n\nasync function getReputation() {\n  const postData = {\n    reputation_type: model.reputationType,\n    id: model.id,\n  };\n  const req = buildReq(postData, \"post\");\n  const resp = await fetch(model.reputationUrl, req);\n  const data = await resp.json();\n  model.reputation = data.reputation;\n  model.reputations = data.reputations;\n}\n\nfunction toggleReputationList() {\n  model.reputationListOpen = !model.reputationListOpen;\n  reputationListView();\n}\n\n/********/\n/* view */\n/********/\n\nfunction view() {\n  iconView();\n  clear(document.querySelector(\".reputation-icon__list\"));\n  reputationListView();\n}\n\nfunction iconView() {\n  if (model.reputation !== null) {\n    document.querySelector(\n      \".reputation-icon__icon__reputation\",\n    ).textContent = Math.round(model.reputation * 100);\n    document\n      .querySelector(\".reputation-icon\")\n      .classList.remove(\"reputation-icon--hidden\");\n  }\n}\n\nfunction reputationListView() {\n  if (model.reputationListOpen) {\n    document\n      .querySelector(\".reputation-icon\")\n      .classList.add(\"reputation-icon--open\");\n  } else {\n    document\n      .querySelector(\".reputation-icon\")\n      .classList.remove(\"reputation-icon--open\");\n  }\n  const container = document.querySelector(\".reputation-icon__list\");\n  clear(container);\n  reputationListHeaderView(container);\n  model.reputations.forEach(reputation => {\n    reputationView(container, reputation);\n  });\n}\n\nfunction reputationListHeaderView(container) {\n  const name = document.createElement(\"div\");\n  name.classList.add(\"reputation-icon__list__header\");\n  name.textContent = \"Name\";\n  container.appendChild(name);\n\n  const weight = document.createElement(\"div\");\n  weight.classList.add(\"reputation-icon__list__header\");\n  weight.textContent = \"Weight\";\n  container.appendChild(weight);\n\n  const rep = document.createElement(\"div\");\n  rep.classList.add(\"reputation-icon__list__header\");\n  rep.textContent = \"Reputation\";\n  container.appendChild(rep);\n}\n\nfunction reputationView(container, reputation) {\n  const name = document.createElement(\"div\");\n  name.classList.add(\"reputation-icon__list__name\");\n  name.textContent = `${reputation.full_name} v${reputation.version}`;\n  name.title = reputation.description;\n  container.appendChild(name);\n\n  const weight = document.createElement(\"div\");\n  weight.textContent = reputation.weight;\n  container.appendChild(weight);\n\n  const rep = document.createElement(\"div\");\n  rep.textContent = Math.round(reputation.reputation * 100);\n  container.appendChild(rep);\n}\n\n/*************/\n/* listeners */\n/*************/\n\nfunction addEventListeners() {\n  addReputationListOpenListener();\n}\n\nfunction addReputationListOpenListener() {\n  document\n    .querySelector(\".reputation-icon\")\n    .addEventListener(\"click\", function(event) {\n      event.stopPropagation();\n    });\n  document\n    .querySelector(\".reputation-icon__icon\")\n    .addEventListener(\"click\", function(event) {\n      toggleReputationList();\n    });\n  document.body.addEventListener(\"click\", function(event) {\n    if (model.reputationListOpen) {\n      toggleReputationList();\n    }\n  });\n}\n\n/********/\n/* init */\n/********/\n\nexport async function init(url, reputationType, id) {\n  initModel(url, reputationType, id);\n  await update();\n  view();\n  addEventListeners();\n}\n"],"names":["getCsrfToken","document","getElementsByName","getAttribute","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","clear","node","hasChildNodes","removeChild","lastChild","model","initModel","reputationUrl","reputationType","id","reputationListOpen","reputation","reputations","update","getReputation","postData","reputation_type","req","resp","fetch","json","toggleReputationList","reputationListView","view","iconView","querySelector","textContent","Math","round","classList","remove","add","container","reputationListHeaderView","forEach","reputationView","name","createElement","appendChild","weight","rep","full_name","version","title","description","addEventListeners","addReputationListOpenListener","addEventListener","event","stopPropagation","init","url"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}