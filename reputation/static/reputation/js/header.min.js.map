{"version":3,"file":"header.min.js","sources":["peerinst/static/peerinst/js/_ajax/utils.js","peerinst/static/peerinst/js/utils.js","reputation/static/reputation/js/header.js"],"sourcesContent":["export function getCsrfToken() {\n  const name = \"csrftoken\";\n  if (document.cookie && document.cookie !== \"\") {\n    return document.cookie\n      .split(\";\")\n      .map(c => c.trim())\n      .filter(c => c.substring(0, name.length + 1) === name + \"=\")\n      .map(c => decodeURIComponent(c.substring(name.length + 1)))[0];\n  } else {\n    return null;\n  }\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n","// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  use.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", `#${name}`);\n  svg.append(use);\n  return svg;\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n","\"use strict\";\n\nimport { buildReq } from \"../../../../peerinst/static/peerinst/js/_ajax/utils.js\"; // eslint-disable-line\nimport { clear } from \"../../../../peerinst/static/peerinst/js/utils.js\"; // eslint-disable-line\n\n/*********/\n/* model */\n/*********/\n\nlet model;\n\nfunction initModel(reputationUrl, reputationType, id) {\n  model = {\n    reputationListOpen: false,\n    reputationUrl: reputationUrl,\n    reputationType: reputationType,\n    id: id,\n    reputation: null,\n    reputations: [],\n  };\n}\n\n/**********/\n/* update */\n/**********/\n\nasync function update() {\n  await getReputation();\n}\n\nasync function getReputation() {\n  const postData = {\n    reputation_type: model.reputationType,\n    id: model.id,\n  };\n  const req = buildReq(postData, \"post\");\n  const resp = await fetch(model.reputationUrl, req);\n  const data = await resp.json();\n  model.reputation = data.reputation;\n  model.reputations = data.reputations;\n}\n\nfunction toggleReputationList() {\n  model.reputationListOpen = !model.reputationListOpen;\n  reputationListView();\n}\n\n/********/\n/* view */\n/********/\n\nfunction view() {\n  iconView();\n  clear(document.querySelector(\".reputation-icon__list\"));\n  reputationListView();\n}\n\nfunction iconView() {\n  if (model.reputation !== null) {\n    document.querySelector(\n      \".reputation-icon__icon__reputation\",\n    ).textContent = Math.round(model.reputation * 100);\n    document\n      .querySelector(\".reputation-icon\")\n      .classList.remove(\"reputation-icon--hidden\");\n  }\n}\n\nfunction reputationListView() {\n  if (model.reputationListOpen) {\n    document\n      .querySelector(\".reputation-icon\")\n      .classList.add(\"reputation-icon--open\");\n  } else {\n    document\n      .querySelector(\".reputation-icon\")\n      .classList.remove(\"reputation-icon--open\");\n  }\n  const container = document.querySelector(\".reputation-icon__list\");\n  clear(container);\n  reputationListHeaderView(container);\n  model.reputations.forEach(reputation => {\n    reputationView(container, reputation);\n  });\n}\n\nfunction reputationListHeaderView(container) {\n  const name = document.createElement(\"div\");\n  name.classList.add(\"reputation-icon__list__header\");\n  name.textContent = \"Name\";\n  container.appendChild(name);\n\n  const weight = document.createElement(\"div\");\n  weight.classList.add(\"reputation-icon__list__header\");\n  weight.textContent = \"Weight\";\n  container.appendChild(weight);\n\n  const rep = document.createElement(\"div\");\n  rep.classList.add(\"reputation-icon__list__header\");\n  rep.textContent = \"Reputation\";\n  container.appendChild(rep);\n}\n\nfunction reputationView(container, reputation) {\n  const name = document.createElement(\"div\");\n  name.classList.add(\"reputation-icon__list__name\");\n  name.textContent = `${reputation.full_name} v${reputation.version}`;\n  name.title = reputation.description;\n  container.appendChild(name);\n\n  const weight = document.createElement(\"div\");\n  weight.textContent = reputation.weight;\n  container.appendChild(weight);\n\n  const rep = document.createElement(\"div\");\n  rep.textContent = Math.round(reputation.reputation * 100);\n  container.appendChild(rep);\n}\n\n/*************/\n/* listeners */\n/*************/\n\nfunction addEventListeners() {\n  addReputationListOpenListener();\n}\n\nfunction addReputationListOpenListener() {\n  document\n    .querySelector(\".reputation-icon\")\n    .addEventListener(\"click\", function(event) {\n      event.stopPropagation();\n    });\n  document\n    .querySelector(\".reputation-icon__icon\")\n    .addEventListener(\"click\", function(event) {\n      toggleReputationList();\n    });\n  document.body.addEventListener(\"click\", function(event) {\n    if (model.reputationListOpen) {\n      toggleReputationList();\n    }\n  });\n}\n\n/********/\n/* init */\n/********/\n\nexport async function init(url, reputationType, id) {\n  initModel(url, reputationType, id);\n  await update();\n  view();\n  addEventListeners();\n}\n"],"names":["getCsrfToken","name","document","cookie","split","map","c","trim","filter","substring","length","decodeURIComponent","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","clear","node","hasChildNodes","removeChild","lastChild","model","initModel","reputationUrl","reputationType","id","reputationListOpen","reputation","reputations","update","getReputation","postData","reputation_type","req","resp","fetch","json","toggleReputationList","reputationListView","view","iconView","querySelector","textContent","Math","round","classList","remove","add","container","reputationListHeaderView","forEach","reputationView","createElement","appendChild","weight","rep","full_name","version","title","description","addEventListeners","addReputationListOpenListener","addEventListener","event","stopPropagation","init","url"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}