{"version":3,"file":"header.min.js","sources":["peerinst/static/peerinst/js/ajax.js","peerinst/static/peerinst/js/utils.js","reputation/static/reputation/js/_header/teacher.js","reputation/static/reputation/js/header.js"],"sourcesContent":["export function getCsrfToken() {\n  return document\n    .getElementsByName(\"csrfmiddlewaretoken\")[0]\n    .getAttribute(\"value\");\n}\n\nexport function buildReq(data, method) {\n  if (method.toLowerCase() === \"get\") {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else if (method.toLowerCase() === \"post\") {\n    const body = data ? JSON.stringify(data) : \"\";\n    return {\n      method: method.toUpperCase(),\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCsrfToken(),\n      },\n    };\n  } else {\n    throw Error(`Method ${method} not implemented yet.`);\n  }\n}\n","// @flow\n\"use strict\";\n\nexport function clear(node: HTMLElement): HTMLElement {\n  while (node.hasChildNodes()) {\n    // $FlowFixMe\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\nexport function formatDatetime(datetime: Date): string {\n  return (\n    datetime.toLocaleString(\"en-ca\", { year: \"numeric\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { month: \"2-digit\" }) +\n    \"-\" +\n    datetime.toLocaleString(\"en-ca\", { day: \"2-digit\" }) +\n    \" \" +\n    datetime.toLocaleString(\"en-ca\", { hour: \"2-digit\", hour12: false }) +\n    \":\" +\n    datetime.toLocaleString(\"en-ca\", { minute: \"2-digit\" })\n  );\n}\n\nexport function createSvg(name: string, useSprite: boolean = true): Element {\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n  if (useSprite) {\n    use.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", `#${name}`);\n  } else {\n    use.setAttributeNS(\n      \"http://www.w3.org/1999/xlink\",\n      \"href\",\n      window.location.protocol +\n        \"//\" +\n        window.location.host +\n        \"/static/peerinst/icons.svg#\" +\n        name,\n    );\n  }\n  svg.append(use);\n  return svg;\n}\n\nexport function showAlert(msg: string) {\n  const fullPageBox = document.createElement(\"div\");\n  fullPageBox.classList.add(\"alert-box__full-page\");\n  fullPageBox.addEventListener(\"click\", (event: MouseEvent) => {\n    event.stopPropagation();\n    fullPageBox.parentNode?.removeChild(fullPageBox);\n  });\n  document.body?.appendChild(fullPageBox);\n\n  const box = document.createElement(\"div\");\n  box.classList.add(\"alert-box__box\");\n  box.addEventListener(\"click\", (event: MouseEvent) =>\n    event.stopPropagation(),\n  );\n  fullPageBox.appendChild(box);\n\n  const span = document.createElement(\"span\");\n  span.classList.add(\"alert-box__msg\");\n  span.textContent = msg;\n  box.appendChild(span);\n\n  const ok = document.createElement(\"button\");\n  ok.classList.add(\"alert-box__btn\", \"mdc-button\", \"mdc-button--unelevated\");\n  ok.textContent = \"Ok\";\n  box.appendChild(ok);\n}\n","// @flow\nimport { buildReq } from \"../../../../../peerinst/static/peerinst/js/ajax.js\";\nimport {\n  clear,\n  createSvg,\n} from \"../../../../../peerinst/static/peerinst/js/utils.js\";\n\nexport class TeacherReputationHeader extends HTMLElement {\n  get reputationUrl(): string {\n    const url = this.getAttribute(\"reputation-url\");\n    if (!url) {\n      throw new Error(\n        \"The teacher-reputation-header needs a `reputation-url` attribute\",\n      );\n    }\n    return url;\n  }\n  get reputationType(): string {\n    const type = this.getAttribute(\"reputation-type\");\n    if (!type) {\n      throw new Error(\n        \"The teacher-reputation-header needs a `reputation-type` attribute\",\n      );\n    }\n    return type;\n  }\n  get reputationId(): string {\n    const id = this.getAttribute(\"reputation-id\");\n    if (!id) {\n      throw new Error(\n        \"The teacher-reputation-header needs a `reputation-id` attribute\",\n      );\n    }\n    return id;\n  }\n  get nonce_(): string {\n    const nonce = this.getAttribute(\"nonce\") || this.nonce;\n    if (!nonce) {\n      throw new Error(\n        \"The teacher-reputation-header needs a `nonce` attribute\",\n      );\n    }\n    return nonce;\n  }\n  get hidden() {\n    return this.hasAttribute(\"hidden\");\n  }\n  get open() {\n    return this.hasAttribute(\"open\");\n  }\n  set hidden(val: boolean) {\n    if (val) {\n      this.setAttribute(\"hidden\", \"\");\n    } else {\n      this.removeAttribute(\"hidden\");\n    }\n  }\n  set open(val: boolean) {\n    if (val) {\n      this.setAttribute(\"open\", \"\");\n    } else {\n      this.removeAttribute(\"open\");\n    }\n  }\n\n  constructor() {\n    super();\n\n    const shadow = this.attachShadow({ mode: \"open\" });\n\n    this.hidden = true;\n\n    this.init(shadow);\n  }\n\n  async init(shadow: ShadowRoot) {\n    /*********/\n    /* model */\n    /*********/\n\n    type Reputation = {\n      name: string,\n      description: string,\n      reputation: number,\n    };\n\n    type Model = {\n      id: number,\n      element: TeacherReputationHeader,\n      reputation: ?number,\n      reputationType: string,\n      reputationUrl: string,\n      reputations: Array<Reputation>,\n      shadow: ShadowRoot,\n    };\n\n    const model: Model = {\n      id: parseInt(this.reputationId),\n      element: this,\n      reputation: null,\n      reputationType: this.reputationType,\n      reputationUrl: this.reputationUrl,\n      reputations: [],\n      shadow: shadow,\n    };\n\n    /**********/\n    /* update */\n    /**********/\n\n    async function update() {\n      await getReputation();\n      if (model.reputation !== null) {\n        model.element.hidden = false;\n      }\n    }\n\n    async function getReputation() {\n      const postData = {\n        reputation_type: model.reputationType,\n        id: model.id,\n      };\n      const req = buildReq(postData, \"post\");\n      const resp = await fetch(model.reputationUrl, req);\n      const data = await resp.json();\n      model.reputation = data.reputation;\n      model.reputations = data.reputations.map(reputation => ({\n        name: reputation.full_name,\n        description: reputation.description,\n        reputation: reputation.reputation,\n      }));\n      iconView();\n      listView();\n    }\n\n    function toggleReputationList() {\n      model.element.open = !model.element.open;\n      iconView();\n      listView();\n    }\n\n    /********/\n    /* view */\n    /********/\n\n    function view() {\n      shadow.appendChild(styleView());\n\n      const container = document.createElement(\"div\");\n      container.id = \"container\";\n      shadow.appendChild(container);\n\n      container.appendChild(iconView());\n      container.appendChild(listView());\n    }\n\n    function iconView() {\n      let icon = shadow.getElementById(\"icon\");\n\n      if (!icon) {\n        icon = document.createElement(\"div\");\n        icon.id = \"icon\";\n        icon.title = \"Reputation\";\n        icon.addEventListener(\"click\", (event: MouseEvent) => {\n          event.stopPropagation();\n          toggleReputationList();\n        });\n\n        const star = createSvg(\"star\", false);\n        star.id = \"icon__icon\";\n        icon.appendChild(star);\n\n        const span = document.createElement(\"span\");\n        span.id = \"icon__reputation\";\n        if (model.reputation !== null && model.reputation !== undefined) {\n          span.textContent = model.reputation.toString();\n        }\n        icon.appendChild(span);\n\n        document.body?.addEventListener(\"click\", (event: MouseEvent) => {\n          if (model.element.open) {\n            toggleReputationList();\n          }\n        });\n      } else {\n        if (model.reputation !== null && model.reputation !== undefined) {\n          shadow.getElementById(\n            \"icon__reputation\",\n          ).textContent = model.reputation.toString();\n        }\n      }\n\n      return icon;\n    }\n\n    function listView() {\n      let list = shadow.getElementById(\"list\");\n      if (!list) {\n        list = document.createElement(\"div\");\n        list.id = \"list\";\n        list.addEventListener(\"click\", (event: MouseEvent) => {\n          event.stopPropagation();\n        });\n      }\n\n      clear(list);\n\n      headerView(list);\n\n      model.reputations.forEach(reputation => {\n        reputationView(list, reputation);\n      });\n\n      return list;\n    }\n\n    function headerView(list: HTMLElement) {\n      const name = document.createElement(\"div\");\n      name.classList.add(\"list__header\");\n      name.textContent = \"Name\";\n      list.appendChild(name);\n\n      const rep = document.createElement(\"div\");\n      rep.classList.add(\"list__header\");\n      rep.textContent = \"Reputation\";\n      list.appendChild(rep);\n    }\n\n    function reputationView(list: HTMLElement, reputation: Reputation) {\n      const name = document.createElement(\"div\");\n      name.classList.add(\"list__name\");\n      name.textContent = `${reputation.name}`;\n      name.title = reputation.description;\n      list.appendChild(name);\n\n      const rep = document.createElement(\"div\");\n      rep.classList.add(\"list__reputation\");\n      rep.textContent = (\n        Math.round(reputation.reputation * 100) / 100\n      ).toString();\n      list.appendChild(rep);\n    }\n\n    function styleView() {\n      const style = document.createElement(\"link\");\n      style.setAttribute(\n        \"href\",\n        window.location.protocol +\n          \"//\" +\n          window.location.host +\n          \"/static/reputation/css/teacher-header.min.css\",\n      );\n      style.setAttribute(\"rel\", \"stylesheet\");\n      style.setAttribute(\"nonce\", model.nonce);\n      return style;\n    }\n\n    /********/\n    /* init */\n    /********/\n\n    view();\n    await update();\n  }\n}\n","\"use strict\";\n\nimport { TeacherReputationHeader } from \"./_header/teacher.js\";\n\nif (!customElements.get(\"teacher-reputation-header\")) {\n  customElements.define(\"teacher-reputation-header\", TeacherReputationHeader);\n}\n"],"names":["getCsrfToken","document","getElementsByName","getAttribute","buildReq","data","method","toLowerCase","toUpperCase","headers","body","JSON","stringify","Error","clear","node","hasChildNodes","removeChild","lastChild","createSvg","name","useSprite","svg","createElementNS","use","setAttributeNS","window","location","protocol","host","append","TeacherReputationHeader","url","type","id","nonce","hasAttribute","val","setAttribute","removeAttribute","shadow","attachShadow","mode","hidden","init","model","parseInt","reputationId","element","reputation","reputationType","reputationUrl","reputations","update","getReputation","postData","reputation_type","req","resp","fetch","json","map","full_name","description","iconView","listView","toggleReputationList","open","view","appendChild","styleView","container","createElement","icon","getElementById","title","addEventListener","event","stopPropagation","star","span","undefined","textContent","toString","list","headerView","forEach","reputationView","classList","add","rep","Math","round","style","HTMLElement","customElements","get","define"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}